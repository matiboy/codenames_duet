var CovidNames="object"==typeof CovidNames?CovidNames:{};CovidNames.chime=function(e){var t={};function a(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=171)}([function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(24),o=function(){function e(e){this.logger=e,this.taskName="BaseTask",this.parentTask=null,this.status=i.default.IDLE,this.run=this.baseRun.bind(this,this.run),this.cancel=this.baseCancel.bind(this,this.cancel)}return e.prototype.cancel=function(){},e.prototype.name=function(){return this.parentTask?this.parentTask.name()+"/"+this.taskName:this.taskName},e.prototype.setParent=function(e){this.parentTask=e},e.prototype.getStatus=function(){return this.status},e.prototype.logAndThrow=function(e){throw this.logger.info(e),new Error(e)},e.prototype.baseRun=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(a){switch(a.label){case 0:switch(a.trys.push([0,2,3,4]),t=Date.now(),this.logger.info("running task "+this.name()),this.status){case i.default.RUNNING:this.logAndThrow(this.name()+" is already running");case i.default.CANCELED:this.logAndThrow(this.name()+" was canceled before running");case i.default.FINISHED:this.logAndThrow(this.name()+" was already finished")}return this.status=i.default.RUNNING,[4,e.call(this)];case 1:return a.sent(),this.logger.info(this.name()+" took "+Math.round(Date.now()-t)+" ms"),[3,4];case 2:throw a.sent();case 3:return this.status!==i.default.CANCELED&&(this.status=i.default.FINISHED),[7];case 4:return[2]}}))}))},e.prototype.baseCancel=function(e){this.status!==i.default.CANCELED&&this.status!==i.default.FINISHED&&(this.logger.info("canceling task "+this.name()),this.status=i.default.CANCELED,e.call(this))},e}();t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(67),r=a(68),i=function(){function e(){}return e.of=function(e){return null==e?n.default.of():r.default.of(e)},e}();t.default=i},function(e,t,a){"use strict";var n,r,i=a(79),o=i.Reader,c=i.Writer,s=i.util,d=i.roots.default||(i.roots.default={});d.SdkSignalFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}var t,a;return e.prototype.timestampMs=s.Long?s.Long.fromBits(0,0,!0):0,e.prototype.type=1,e.prototype.error=null,e.prototype.join=null,e.prototype.joinack=null,e.prototype.sub=null,e.prototype.suback=null,e.prototype.index=null,e.prototype.pause=null,e.prototype.leave=null,e.prototype.leaveAck=null,e.prototype.bitrates=null,e.prototype.audioControl=null,e.prototype.audioMetadata=null,e.prototype.audioStreamIdInfo=null,e.prototype.pingPong=null,e.prototype.audioStatus=null,e.prototype.clientMetric=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t.uint32(8).uint64(e.timestampMs),t.uint32(16).int32(e.type),null!=e.error&&e.hasOwnProperty("error")&&d.SdkErrorFrame.encode(e.error,t.uint32(26).fork()).ldelim(),null!=e.join&&e.hasOwnProperty("join")&&d.SdkJoinFrame.encode(e.join,t.uint32(34).fork()).ldelim(),null!=e.joinack&&e.hasOwnProperty("joinack")&&d.SdkJoinAckFrame.encode(e.joinack,t.uint32(42).fork()).ldelim(),null!=e.sub&&e.hasOwnProperty("sub")&&d.SdkSubscribeFrame.encode(e.sub,t.uint32(50).fork()).ldelim(),null!=e.suback&&e.hasOwnProperty("suback")&&d.SdkSubscribeAckFrame.encode(e.suback,t.uint32(58).fork()).ldelim(),null!=e.index&&e.hasOwnProperty("index")&&d.SdkIndexFrame.encode(e.index,t.uint32(66).fork()).ldelim(),null!=e.pause&&e.hasOwnProperty("pause")&&d.SdkPauseResumeFrame.encode(e.pause,t.uint32(82).fork()).ldelim(),null!=e.leave&&e.hasOwnProperty("leave")&&d.SdkLeaveFrame.encode(e.leave,t.uint32(90).fork()).ldelim(),null!=e.leaveAck&&e.hasOwnProperty("leaveAck")&&d.SdkLeaveAckFrame.encode(e.leaveAck,t.uint32(98).fork()).ldelim(),null!=e.bitrates&&e.hasOwnProperty("bitrates")&&d.SdkBitrateFrame.encode(e.bitrates,t.uint32(114).fork()).ldelim(),null!=e.audioControl&&e.hasOwnProperty("audioControl")&&d.SdkAudioControlFrame.encode(e.audioControl,t.uint32(138).fork()).ldelim(),null!=e.audioMetadata&&e.hasOwnProperty("audioMetadata")&&d.SdkAudioMetadataFrame.encode(e.audioMetadata,t.uint32(146).fork()).ldelim(),null!=e.audioStreamIdInfo&&e.hasOwnProperty("audioStreamIdInfo")&&d.SdkAudioStreamIdInfoFrame.encode(e.audioStreamIdInfo,t.uint32(154).fork()).ldelim(),null!=e.pingPong&&e.hasOwnProperty("pingPong")&&d.SdkPingPongFrame.encode(e.pingPong,t.uint32(162).fork()).ldelim(),null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&d.SdkAudioStatusFrame.encode(e.audioStatus,t.uint32(170).fork()).ldelim(),null!=e.clientMetric&&e.hasOwnProperty("clientMetric")&&d.SdkClientMetricFrame.encode(e.clientMetric,t.uint32(178).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkSignalFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.timestampMs=e.uint64();break;case 2:n.type=e.int32();break;case 3:n.error=d.SdkErrorFrame.decode(e,e.uint32());break;case 4:n.join=d.SdkJoinFrame.decode(e,e.uint32());break;case 5:n.joinack=d.SdkJoinAckFrame.decode(e,e.uint32());break;case 6:n.sub=d.SdkSubscribeFrame.decode(e,e.uint32());break;case 7:n.suback=d.SdkSubscribeAckFrame.decode(e,e.uint32());break;case 8:n.index=d.SdkIndexFrame.decode(e,e.uint32());break;case 10:n.pause=d.SdkPauseResumeFrame.decode(e,e.uint32());break;case 11:n.leave=d.SdkLeaveFrame.decode(e,e.uint32());break;case 12:n.leaveAck=d.SdkLeaveAckFrame.decode(e,e.uint32());break;case 14:n.bitrates=d.SdkBitrateFrame.decode(e,e.uint32());break;case 17:n.audioControl=d.SdkAudioControlFrame.decode(e,e.uint32());break;case 18:n.audioMetadata=d.SdkAudioMetadataFrame.decode(e,e.uint32());break;case 19:n.audioStreamIdInfo=d.SdkAudioStreamIdInfoFrame.decode(e,e.uint32());break;case 20:n.pingPong=d.SdkPingPongFrame.decode(e,e.uint32());break;case 21:n.audioStatus=d.SdkAudioStatusFrame.decode(e,e.uint32());break;case 22:n.clientMetric=d.SdkClientMetricFrame.decode(e,e.uint32());break;default:e.skipType(7&r)}}if(!n.hasOwnProperty("timestampMs"))throw s.ProtocolError("missing required 'timestampMs'",{instance:n});if(!n.hasOwnProperty("type"))throw s.ProtocolError("missing required 'type'",{instance:n});return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(!(s.isInteger(e.timestampMs)||e.timestampMs&&s.isInteger(e.timestampMs.low)&&s.isInteger(e.timestampMs.high)))return"timestampMs: integer|Long expected";switch(e.type){default:return"type: enum value expected";case 1:case 2:case 3:case 4:case 5:case 7:case 8:case 9:case 10:case 13:case 16:case 17:case 18:case 19:case 20:case 21:}var t;if(null!=e.error&&e.hasOwnProperty("error")&&(t=d.SdkErrorFrame.verify(e.error)))return"error."+t;if(null!=e.join&&e.hasOwnProperty("join")&&(t=d.SdkJoinFrame.verify(e.join)))return"join."+t;if(null!=e.joinack&&e.hasOwnProperty("joinack")&&(t=d.SdkJoinAckFrame.verify(e.joinack)))return"joinack."+t;if(null!=e.sub&&e.hasOwnProperty("sub")&&(t=d.SdkSubscribeFrame.verify(e.sub)))return"sub."+t;if(null!=e.suback&&e.hasOwnProperty("suback")&&(t=d.SdkSubscribeAckFrame.verify(e.suback)))return"suback."+t;if(null!=e.index&&e.hasOwnProperty("index")&&(t=d.SdkIndexFrame.verify(e.index)))return"index."+t;if(null!=e.pause&&e.hasOwnProperty("pause")&&(t=d.SdkPauseResumeFrame.verify(e.pause)))return"pause."+t;if(null!=e.leave&&e.hasOwnProperty("leave")&&(t=d.SdkLeaveFrame.verify(e.leave)))return"leave."+t;if(null!=e.leaveAck&&e.hasOwnProperty("leaveAck")&&(t=d.SdkLeaveAckFrame.verify(e.leaveAck)))return"leaveAck."+t;if(null!=e.bitrates&&e.hasOwnProperty("bitrates")&&(t=d.SdkBitrateFrame.verify(e.bitrates)))return"bitrates."+t;if(null!=e.audioControl&&e.hasOwnProperty("audioControl")&&(t=d.SdkAudioControlFrame.verify(e.audioControl)))return"audioControl."+t;if(null!=e.audioMetadata&&e.hasOwnProperty("audioMetadata")&&(t=d.SdkAudioMetadataFrame.verify(e.audioMetadata)))return"audioMetadata."+t;if(null!=e.audioStreamIdInfo&&e.hasOwnProperty("audioStreamIdInfo")&&(t=d.SdkAudioStreamIdInfoFrame.verify(e.audioStreamIdInfo)))return"audioStreamIdInfo."+t;if(null!=e.pingPong&&e.hasOwnProperty("pingPong")&&(t=d.SdkPingPongFrame.verify(e.pingPong)))return"pingPong."+t;if(null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&(t=d.SdkAudioStatusFrame.verify(e.audioStatus)))return"audioStatus."+t;if(null!=e.clientMetric&&e.hasOwnProperty("clientMetric")&&(t=d.SdkClientMetricFrame.verify(e.clientMetric)))return"clientMetric."+t;return null},e.fromObject=function(e){if(e instanceof d.SdkSignalFrame)return e;var t=new d.SdkSignalFrame;switch(null!=e.timestampMs&&(s.Long?(t.timestampMs=s.Long.fromValue(e.timestampMs)).unsigned=!0:"string"==typeof e.timestampMs?t.timestampMs=parseInt(e.timestampMs,10):"number"==typeof e.timestampMs?t.timestampMs=e.timestampMs:"object"==typeof e.timestampMs&&(t.timestampMs=new s.LongBits(e.timestampMs.low>>>0,e.timestampMs.high>>>0).toNumber(!0))),e.type){case"JOIN":case 1:t.type=1;break;case"JOIN_ACK":case 2:t.type=2;break;case"SUBSCRIBE":case 3:t.type=3;break;case"SUBSCRIBE_ACK":case 4:t.type=4;break;case"INDEX":case 5:t.type=5;break;case"PAUSE":case 7:t.type=7;break;case"RESUME":case 8:t.type=8;break;case"LEAVE":case 9:t.type=9;break;case"LEAVE_ACK":case 10:t.type=10;break;case"BITRATES":case 13:t.type=13;break;case"AUDIO_CONTROL":case 16:t.type=16;break;case"AUDIO_METADATA":case 17:t.type=17;break;case"AUDIO_STREAM_ID_INFO":case 18:t.type=18;break;case"PING_PONG":case 19:t.type=19;break;case"AUDIO_STATUS":case 20:t.type=20;break;case"CLIENT_METRIC":case 21:t.type=21}if(null!=e.error){if("object"!=typeof e.error)throw TypeError(".SdkSignalFrame.error: object expected");t.error=d.SdkErrorFrame.fromObject(e.error)}if(null!=e.join){if("object"!=typeof e.join)throw TypeError(".SdkSignalFrame.join: object expected");t.join=d.SdkJoinFrame.fromObject(e.join)}if(null!=e.joinack){if("object"!=typeof e.joinack)throw TypeError(".SdkSignalFrame.joinack: object expected");t.joinack=d.SdkJoinAckFrame.fromObject(e.joinack)}if(null!=e.sub){if("object"!=typeof e.sub)throw TypeError(".SdkSignalFrame.sub: object expected");t.sub=d.SdkSubscribeFrame.fromObject(e.sub)}if(null!=e.suback){if("object"!=typeof e.suback)throw TypeError(".SdkSignalFrame.suback: object expected");t.suback=d.SdkSubscribeAckFrame.fromObject(e.suback)}if(null!=e.index){if("object"!=typeof e.index)throw TypeError(".SdkSignalFrame.index: object expected");t.index=d.SdkIndexFrame.fromObject(e.index)}if(null!=e.pause){if("object"!=typeof e.pause)throw TypeError(".SdkSignalFrame.pause: object expected");t.pause=d.SdkPauseResumeFrame.fromObject(e.pause)}if(null!=e.leave){if("object"!=typeof e.leave)throw TypeError(".SdkSignalFrame.leave: object expected");t.leave=d.SdkLeaveFrame.fromObject(e.leave)}if(null!=e.leaveAck){if("object"!=typeof e.leaveAck)throw TypeError(".SdkSignalFrame.leaveAck: object expected");t.leaveAck=d.SdkLeaveAckFrame.fromObject(e.leaveAck)}if(null!=e.bitrates){if("object"!=typeof e.bitrates)throw TypeError(".SdkSignalFrame.bitrates: object expected");t.bitrates=d.SdkBitrateFrame.fromObject(e.bitrates)}if(null!=e.audioControl){if("object"!=typeof e.audioControl)throw TypeError(".SdkSignalFrame.audioControl: object expected");t.audioControl=d.SdkAudioControlFrame.fromObject(e.audioControl)}if(null!=e.audioMetadata){if("object"!=typeof e.audioMetadata)throw TypeError(".SdkSignalFrame.audioMetadata: object expected");t.audioMetadata=d.SdkAudioMetadataFrame.fromObject(e.audioMetadata)}if(null!=e.audioStreamIdInfo){if("object"!=typeof e.audioStreamIdInfo)throw TypeError(".SdkSignalFrame.audioStreamIdInfo: object expected");t.audioStreamIdInfo=d.SdkAudioStreamIdInfoFrame.fromObject(e.audioStreamIdInfo)}if(null!=e.pingPong){if("object"!=typeof e.pingPong)throw TypeError(".SdkSignalFrame.pingPong: object expected");t.pingPong=d.SdkPingPongFrame.fromObject(e.pingPong)}if(null!=e.audioStatus){if("object"!=typeof e.audioStatus)throw TypeError(".SdkSignalFrame.audioStatus: object expected");t.audioStatus=d.SdkAudioStatusFrame.fromObject(e.audioStatus)}if(null!=e.clientMetric){if("object"!=typeof e.clientMetric)throw TypeError(".SdkSignalFrame.clientMetric: object expected");t.clientMetric=d.SdkClientMetricFrame.fromObject(e.clientMetric)}return t},e.toObject=function(e,t){t||(t={});var a={};if(t.defaults){if(s.Long){var n=new s.Long(0,0,!0);a.timestampMs=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else a.timestampMs=t.longs===String?"0":0;a.type=t.enums===String?"JOIN":1,a.error=null,a.join=null,a.joinack=null,a.sub=null,a.suback=null,a.index=null,a.pause=null,a.leave=null,a.leaveAck=null,a.bitrates=null,a.audioControl=null,a.audioMetadata=null,a.audioStreamIdInfo=null,a.pingPong=null,a.audioStatus=null,a.clientMetric=null}return null!=e.timestampMs&&e.hasOwnProperty("timestampMs")&&("number"==typeof e.timestampMs?a.timestampMs=t.longs===String?String(e.timestampMs):e.timestampMs:a.timestampMs=t.longs===String?s.Long.prototype.toString.call(e.timestampMs):t.longs===Number?new s.LongBits(e.timestampMs.low>>>0,e.timestampMs.high>>>0).toNumber(!0):e.timestampMs),null!=e.type&&e.hasOwnProperty("type")&&(a.type=t.enums===String?d.SdkSignalFrame.Type[e.type]:e.type),null!=e.error&&e.hasOwnProperty("error")&&(a.error=d.SdkErrorFrame.toObject(e.error,t)),null!=e.join&&e.hasOwnProperty("join")&&(a.join=d.SdkJoinFrame.toObject(e.join,t)),null!=e.joinack&&e.hasOwnProperty("joinack")&&(a.joinack=d.SdkJoinAckFrame.toObject(e.joinack,t)),null!=e.sub&&e.hasOwnProperty("sub")&&(a.sub=d.SdkSubscribeFrame.toObject(e.sub,t)),null!=e.suback&&e.hasOwnProperty("suback")&&(a.suback=d.SdkSubscribeAckFrame.toObject(e.suback,t)),null!=e.index&&e.hasOwnProperty("index")&&(a.index=d.SdkIndexFrame.toObject(e.index,t)),null!=e.pause&&e.hasOwnProperty("pause")&&(a.pause=d.SdkPauseResumeFrame.toObject(e.pause,t)),null!=e.leave&&e.hasOwnProperty("leave")&&(a.leave=d.SdkLeaveFrame.toObject(e.leave,t)),null!=e.leaveAck&&e.hasOwnProperty("leaveAck")&&(a.leaveAck=d.SdkLeaveAckFrame.toObject(e.leaveAck,t)),null!=e.bitrates&&e.hasOwnProperty("bitrates")&&(a.bitrates=d.SdkBitrateFrame.toObject(e.bitrates,t)),null!=e.audioControl&&e.hasOwnProperty("audioControl")&&(a.audioControl=d.SdkAudioControlFrame.toObject(e.audioControl,t)),null!=e.audioMetadata&&e.hasOwnProperty("audioMetadata")&&(a.audioMetadata=d.SdkAudioMetadataFrame.toObject(e.audioMetadata,t)),null!=e.audioStreamIdInfo&&e.hasOwnProperty("audioStreamIdInfo")&&(a.audioStreamIdInfo=d.SdkAudioStreamIdInfoFrame.toObject(e.audioStreamIdInfo,t)),null!=e.pingPong&&e.hasOwnProperty("pingPong")&&(a.pingPong=d.SdkPingPongFrame.toObject(e.pingPong,t)),null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&(a.audioStatus=d.SdkAudioStatusFrame.toObject(e.audioStatus,t)),null!=e.clientMetric&&e.hasOwnProperty("clientMetric")&&(a.clientMetric=d.SdkClientMetricFrame.toObject(e.clientMetric,t)),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.Type=(t={},(a=Object.create(t))[t[1]="JOIN"]=1,a[t[2]="JOIN_ACK"]=2,a[t[3]="SUBSCRIBE"]=3,a[t[4]="SUBSCRIBE_ACK"]=4,a[t[5]="INDEX"]=5,a[t[7]="PAUSE"]=7,a[t[8]="RESUME"]=8,a[t[9]="LEAVE"]=9,a[t[10]="LEAVE_ACK"]=10,a[t[13]="BITRATES"]=13,a[t[16]="AUDIO_CONTROL"]=16,a[t[17]="AUDIO_METADATA"]=17,a[t[18]="AUDIO_STREAM_ID_INFO"]=18,a[t[19]="PING_PONG"]=19,a[t[20]="AUDIO_STATUS"]=20,a[t[21]="CLIENT_METRIC"]=21,a),e}(),d.SdkErrorFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.status=0,e.prototype.description="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.status&&e.hasOwnProperty("status")&&t.uint32(8).uint32(e.status),null!=e.description&&e.hasOwnProperty("description")&&t.uint32(18).string(e.description),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkErrorFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.status=e.uint32();break;case 2:n.description=e.string();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.status&&e.hasOwnProperty("status")&&!s.isInteger(e.status)?"status: integer expected":null!=e.description&&e.hasOwnProperty("description")&&!s.isString(e.description)?"description: string expected":null},e.fromObject=function(e){if(e instanceof d.SdkErrorFrame)return e;var t=new d.SdkErrorFrame;return null!=e.status&&(t.status=e.status>>>0),null!=e.description&&(t.description=String(e.description)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.status=0,a.description=""),null!=e.status&&e.hasOwnProperty("status")&&(a.status=e.status),null!=e.description&&e.hasOwnProperty("description")&&(a.description=e.description),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkJoinFlags=(n={},(r=Object.create(n))[n[1]="SEND_BITRATES"]=1,r[n[2]="HAS_STREAM_UPDATE"]=2,r),d.SdkClientDetails=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.appVersionName="",e.prototype.appVersionCode="",e.prototype.deviceModel="",e.prototype.deviceMake="",e.prototype.platformName="",e.prototype.platformVersion="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t.uint32(10).string(e.appVersionName),t.uint32(18).string(e.appVersionCode),t.uint32(26).string(e.deviceModel),t.uint32(34).string(e.deviceMake),t.uint32(42).string(e.platformName),t.uint32(50).string(e.platformVersion),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkClientDetails;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.appVersionName=e.string();break;case 2:n.appVersionCode=e.string();break;case 3:n.deviceModel=e.string();break;case 4:n.deviceMake=e.string();break;case 5:n.platformName=e.string();break;case 6:n.platformVersion=e.string();break;default:e.skipType(7&r)}}if(!n.hasOwnProperty("appVersionName"))throw s.ProtocolError("missing required 'appVersionName'",{instance:n});if(!n.hasOwnProperty("appVersionCode"))throw s.ProtocolError("missing required 'appVersionCode'",{instance:n});if(!n.hasOwnProperty("deviceModel"))throw s.ProtocolError("missing required 'deviceModel'",{instance:n});if(!n.hasOwnProperty("deviceMake"))throw s.ProtocolError("missing required 'deviceMake'",{instance:n});if(!n.hasOwnProperty("platformName"))throw s.ProtocolError("missing required 'platformName'",{instance:n});if(!n.hasOwnProperty("platformVersion"))throw s.ProtocolError("missing required 'platformVersion'",{instance:n});return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":s.isString(e.appVersionName)?s.isString(e.appVersionCode)?s.isString(e.deviceModel)?s.isString(e.deviceMake)?s.isString(e.platformName)?s.isString(e.platformVersion)?null:"platformVersion: string expected":"platformName: string expected":"deviceMake: string expected":"deviceModel: string expected":"appVersionCode: string expected":"appVersionName: string expected"},e.fromObject=function(e){if(e instanceof d.SdkClientDetails)return e;var t=new d.SdkClientDetails;return null!=e.appVersionName&&(t.appVersionName=String(e.appVersionName)),null!=e.appVersionCode&&(t.appVersionCode=String(e.appVersionCode)),null!=e.deviceModel&&(t.deviceModel=String(e.deviceModel)),null!=e.deviceMake&&(t.deviceMake=String(e.deviceMake)),null!=e.platformName&&(t.platformName=String(e.platformName)),null!=e.platformVersion&&(t.platformVersion=String(e.platformVersion)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.appVersionName="",a.appVersionCode="",a.deviceModel="",a.deviceMake="",a.platformName="",a.platformVersion=""),null!=e.appVersionName&&e.hasOwnProperty("appVersionName")&&(a.appVersionName=e.appVersionName),null!=e.appVersionCode&&e.hasOwnProperty("appVersionCode")&&(a.appVersionCode=e.appVersionCode),null!=e.deviceModel&&e.hasOwnProperty("deviceModel")&&(a.deviceModel=e.deviceModel),null!=e.deviceMake&&e.hasOwnProperty("deviceMake")&&(a.deviceMake=e.deviceMake),null!=e.platformName&&e.hasOwnProperty("platformName")&&(a.platformName=e.platformName),null!=e.platformVersion&&e.hasOwnProperty("platformVersion")&&(a.platformVersion=e.platformVersion),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkJoinFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.protocolVersion=2,e.prototype.maxNumOfVideos=8,e.prototype.flags=0,e.prototype.clientDetails=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.protocolVersion&&e.hasOwnProperty("protocolVersion")&&t.uint32(8).uint32(e.protocolVersion),null!=e.maxNumOfVideos&&e.hasOwnProperty("maxNumOfVideos")&&t.uint32(16).uint32(e.maxNumOfVideos),null!=e.flags&&e.hasOwnProperty("flags")&&t.uint32(24).uint32(e.flags),null!=e.clientDetails&&e.hasOwnProperty("clientDetails")&&d.SdkClientDetails.encode(e.clientDetails,t.uint32(34).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkJoinFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.protocolVersion=e.uint32();break;case 2:n.maxNumOfVideos=e.uint32();break;case 3:n.flags=e.uint32();break;case 4:n.clientDetails=d.SdkClientDetails.decode(e,e.uint32());break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.protocolVersion&&e.hasOwnProperty("protocolVersion")&&!s.isInteger(e.protocolVersion))return"protocolVersion: integer expected";if(null!=e.maxNumOfVideos&&e.hasOwnProperty("maxNumOfVideos")&&!s.isInteger(e.maxNumOfVideos))return"maxNumOfVideos: integer expected";if(null!=e.flags&&e.hasOwnProperty("flags")&&!s.isInteger(e.flags))return"flags: integer expected";if(null!=e.clientDetails&&e.hasOwnProperty("clientDetails")){var t=d.SdkClientDetails.verify(e.clientDetails);if(t)return"clientDetails."+t}return null},e.fromObject=function(e){if(e instanceof d.SdkJoinFrame)return e;var t=new d.SdkJoinFrame;if(null!=e.protocolVersion&&(t.protocolVersion=e.protocolVersion>>>0),null!=e.maxNumOfVideos&&(t.maxNumOfVideos=e.maxNumOfVideos>>>0),null!=e.flags&&(t.flags=e.flags>>>0),null!=e.clientDetails){if("object"!=typeof e.clientDetails)throw TypeError(".SdkJoinFrame.clientDetails: object expected");t.clientDetails=d.SdkClientDetails.fromObject(e.clientDetails)}return t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.protocolVersion=2,a.maxNumOfVideos=8,a.flags=0,a.clientDetails=null),null!=e.protocolVersion&&e.hasOwnProperty("protocolVersion")&&(a.protocolVersion=e.protocolVersion),null!=e.maxNumOfVideos&&e.hasOwnProperty("maxNumOfVideos")&&(a.maxNumOfVideos=e.maxNumOfVideos),null!=e.flags&&e.hasOwnProperty("flags")&&(a.flags=e.flags),null!=e.clientDetails&&e.hasOwnProperty("clientDetails")&&(a.clientDetails=d.SdkClientDetails.toObject(e.clientDetails,t)),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkJoinAckFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkJoinAckFrame;e.pos<a;){var r=e.uint32();e.skipType(7&r)}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null},e.fromObject=function(e){return e instanceof d.SdkJoinAckFrame?e:new d.SdkJoinAckFrame},e.toObject=function(){return{}},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkLeaveFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkLeaveFrame;e.pos<a;){var r=e.uint32();e.skipType(7&r)}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null},e.fromObject=function(e){return e instanceof d.SdkLeaveFrame?e:new d.SdkLeaveFrame},e.toObject=function(){return{}},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkLeaveAckFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkLeaveAckFrame;e.pos<a;){var r=e.uint32();e.skipType(7&r)}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null},e.fromObject=function(e){return e instanceof d.SdkLeaveAckFrame?e:new d.SdkLeaveAckFrame},e.toObject=function(){return{}},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkStreamServiceType=function(){var e={},t=Object.create(e);return t[e[1]="RX"]=1,t[e[2]="TX"]=2,t[e[3]="DUPLEX"]=3,t}(),d.SdkStreamMediaType=function(){var e={},t=Object.create(e);return t[e[1]="AUDIO"]=1,t[e[2]="VIDEO"]=2,t}(),d.SdkSubscribeFrame=function(){function e(e){if(this.sendStreams=[],this.receiveStreamIds=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.duplex=1,e.prototype.sendStreams=s.emptyArray,e.prototype.receiveStreamIds=s.emptyArray,e.prototype.sdpOffer="",e.prototype.audioHost="",e.prototype.audioCheckin=!1,e.prototype.audioMuted=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.duplex&&e.hasOwnProperty("duplex")&&t.uint32(8).int32(e.duplex),null!=e.sendStreams&&e.sendStreams.length)for(var a=0;a<e.sendStreams.length;++a)d.SdkStreamDescriptor.encode(e.sendStreams[a],t.uint32(18).fork()).ldelim();if(null!=e.receiveStreamIds&&e.receiveStreamIds.length)for(a=0;a<e.receiveStreamIds.length;++a)t.uint32(24).uint32(e.receiveStreamIds[a]);return null!=e.sdpOffer&&e.hasOwnProperty("sdpOffer")&&t.uint32(34).string(e.sdpOffer),null!=e.audioHost&&e.hasOwnProperty("audioHost")&&t.uint32(42).string(e.audioHost),null!=e.audioCheckin&&e.hasOwnProperty("audioCheckin")&&t.uint32(48).bool(e.audioCheckin),null!=e.audioMuted&&e.hasOwnProperty("audioMuted")&&t.uint32(56).bool(e.audioMuted),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkSubscribeFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.duplex=e.int32();break;case 2:n.sendStreams&&n.sendStreams.length||(n.sendStreams=[]),n.sendStreams.push(d.SdkStreamDescriptor.decode(e,e.uint32()));break;case 3:if(n.receiveStreamIds&&n.receiveStreamIds.length||(n.receiveStreamIds=[]),2==(7&r))for(var i=e.uint32()+e.pos;e.pos<i;)n.receiveStreamIds.push(e.uint32());else n.receiveStreamIds.push(e.uint32());break;case 4:n.sdpOffer=e.string();break;case 5:n.audioHost=e.string();break;case 6:n.audioCheckin=e.bool();break;case 7:n.audioMuted=e.bool();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.duplex&&e.hasOwnProperty("duplex"))switch(e.duplex){default:return"duplex: enum value expected";case 1:case 2:case 3:}if(null!=e.sendStreams&&e.hasOwnProperty("sendStreams")){if(!Array.isArray(e.sendStreams))return"sendStreams: array expected";for(var t=0;t<e.sendStreams.length;++t){var a=d.SdkStreamDescriptor.verify(e.sendStreams[t]);if(a)return"sendStreams."+a}}if(null!=e.receiveStreamIds&&e.hasOwnProperty("receiveStreamIds")){if(!Array.isArray(e.receiveStreamIds))return"receiveStreamIds: array expected";for(t=0;t<e.receiveStreamIds.length;++t)if(!s.isInteger(e.receiveStreamIds[t]))return"receiveStreamIds: integer[] expected"}return null!=e.sdpOffer&&e.hasOwnProperty("sdpOffer")&&!s.isString(e.sdpOffer)?"sdpOffer: string expected":null!=e.audioHost&&e.hasOwnProperty("audioHost")&&!s.isString(e.audioHost)?"audioHost: string expected":null!=e.audioCheckin&&e.hasOwnProperty("audioCheckin")&&"boolean"!=typeof e.audioCheckin?"audioCheckin: boolean expected":null!=e.audioMuted&&e.hasOwnProperty("audioMuted")&&"boolean"!=typeof e.audioMuted?"audioMuted: boolean expected":null},e.fromObject=function(e){if(e instanceof d.SdkSubscribeFrame)return e;var t=new d.SdkSubscribeFrame;switch(e.duplex){case"RX":case 1:t.duplex=1;break;case"TX":case 2:t.duplex=2;break;case"DUPLEX":case 3:t.duplex=3}if(e.sendStreams){if(!Array.isArray(e.sendStreams))throw TypeError(".SdkSubscribeFrame.sendStreams: array expected");t.sendStreams=[];for(var a=0;a<e.sendStreams.length;++a){if("object"!=typeof e.sendStreams[a])throw TypeError(".SdkSubscribeFrame.sendStreams: object expected");t.sendStreams[a]=d.SdkStreamDescriptor.fromObject(e.sendStreams[a])}}if(e.receiveStreamIds){if(!Array.isArray(e.receiveStreamIds))throw TypeError(".SdkSubscribeFrame.receiveStreamIds: array expected");t.receiveStreamIds=[];for(a=0;a<e.receiveStreamIds.length;++a)t.receiveStreamIds[a]=e.receiveStreamIds[a]>>>0}return null!=e.sdpOffer&&(t.sdpOffer=String(e.sdpOffer)),null!=e.audioHost&&(t.audioHost=String(e.audioHost)),null!=e.audioCheckin&&(t.audioCheckin=Boolean(e.audioCheckin)),null!=e.audioMuted&&(t.audioMuted=Boolean(e.audioMuted)),t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.sendStreams=[],a.receiveStreamIds=[]),t.defaults&&(a.duplex=t.enums===String?"RX":1,a.sdpOffer="",a.audioHost="",a.audioCheckin=!1,a.audioMuted=!1),null!=e.duplex&&e.hasOwnProperty("duplex")&&(a.duplex=t.enums===String?d.SdkStreamServiceType[e.duplex]:e.duplex),e.sendStreams&&e.sendStreams.length){a.sendStreams=[];for(var n=0;n<e.sendStreams.length;++n)a.sendStreams[n]=d.SdkStreamDescriptor.toObject(e.sendStreams[n],t)}if(e.receiveStreamIds&&e.receiveStreamIds.length){a.receiveStreamIds=[];for(n=0;n<e.receiveStreamIds.length;++n)a.receiveStreamIds[n]=e.receiveStreamIds[n]}return null!=e.sdpOffer&&e.hasOwnProperty("sdpOffer")&&(a.sdpOffer=e.sdpOffer),null!=e.audioHost&&e.hasOwnProperty("audioHost")&&(a.audioHost=e.audioHost),null!=e.audioCheckin&&e.hasOwnProperty("audioCheckin")&&(a.audioCheckin=e.audioCheckin),null!=e.audioMuted&&e.hasOwnProperty("audioMuted")&&(a.audioMuted=e.audioMuted),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkSubscribeAckFrame=function(){function e(e){if(this.allocations=[],this.tracks=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.duplex=1,e.prototype.allocations=s.emptyArray,e.prototype.sdpAnswer="",e.prototype.tracks=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.duplex&&e.hasOwnProperty("duplex")&&t.uint32(8).int32(e.duplex),null!=e.allocations&&e.allocations.length)for(var a=0;a<e.allocations.length;++a)d.SdkStreamAllocation.encode(e.allocations[a],t.uint32(18).fork()).ldelim();if(null!=e.sdpAnswer&&e.hasOwnProperty("sdpAnswer")&&t.uint32(26).string(e.sdpAnswer),null!=e.tracks&&e.tracks.length)for(a=0;a<e.tracks.length;++a)d.SdkTrackMapping.encode(e.tracks[a],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkSubscribeAckFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.duplex=e.int32();break;case 2:n.allocations&&n.allocations.length||(n.allocations=[]),n.allocations.push(d.SdkStreamAllocation.decode(e,e.uint32()));break;case 3:n.sdpAnswer=e.string();break;case 4:n.tracks&&n.tracks.length||(n.tracks=[]),n.tracks.push(d.SdkTrackMapping.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.duplex&&e.hasOwnProperty("duplex"))switch(e.duplex){default:return"duplex: enum value expected";case 1:case 2:case 3:}if(null!=e.allocations&&e.hasOwnProperty("allocations")){if(!Array.isArray(e.allocations))return"allocations: array expected";for(var t=0;t<e.allocations.length;++t){if(a=d.SdkStreamAllocation.verify(e.allocations[t]))return"allocations."+a}}if(null!=e.sdpAnswer&&e.hasOwnProperty("sdpAnswer")&&!s.isString(e.sdpAnswer))return"sdpAnswer: string expected";if(null!=e.tracks&&e.hasOwnProperty("tracks")){if(!Array.isArray(e.tracks))return"tracks: array expected";for(t=0;t<e.tracks.length;++t){var a;if(a=d.SdkTrackMapping.verify(e.tracks[t]))return"tracks."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkSubscribeAckFrame)return e;var t=new d.SdkSubscribeAckFrame;switch(e.duplex){case"RX":case 1:t.duplex=1;break;case"TX":case 2:t.duplex=2;break;case"DUPLEX":case 3:t.duplex=3}if(e.allocations){if(!Array.isArray(e.allocations))throw TypeError(".SdkSubscribeAckFrame.allocations: array expected");t.allocations=[];for(var a=0;a<e.allocations.length;++a){if("object"!=typeof e.allocations[a])throw TypeError(".SdkSubscribeAckFrame.allocations: object expected");t.allocations[a]=d.SdkStreamAllocation.fromObject(e.allocations[a])}}if(null!=e.sdpAnswer&&(t.sdpAnswer=String(e.sdpAnswer)),e.tracks){if(!Array.isArray(e.tracks))throw TypeError(".SdkSubscribeAckFrame.tracks: array expected");t.tracks=[];for(a=0;a<e.tracks.length;++a){if("object"!=typeof e.tracks[a])throw TypeError(".SdkSubscribeAckFrame.tracks: object expected");t.tracks[a]=d.SdkTrackMapping.fromObject(e.tracks[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.allocations=[],a.tracks=[]),t.defaults&&(a.duplex=t.enums===String?"RX":1,a.sdpAnswer=""),null!=e.duplex&&e.hasOwnProperty("duplex")&&(a.duplex=t.enums===String?d.SdkStreamServiceType[e.duplex]:e.duplex),e.allocations&&e.allocations.length){a.allocations=[];for(var n=0;n<e.allocations.length;++n)a.allocations[n]=d.SdkStreamAllocation.toObject(e.allocations[n],t)}if(null!=e.sdpAnswer&&e.hasOwnProperty("sdpAnswer")&&(a.sdpAnswer=e.sdpAnswer),e.tracks&&e.tracks.length){a.tracks=[];for(n=0;n<e.tracks.length;++n)a.tracks[n]=d.SdkTrackMapping.toObject(e.tracks[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkIndexFrame=function(){function e(e){if(this.sources=[],this.pausedAtSourceIds=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.atCapacity=!1,e.prototype.sources=s.emptyArray,e.prototype.pausedAtSourceIds=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.atCapacity&&e.hasOwnProperty("atCapacity")&&t.uint32(8).bool(e.atCapacity),null!=e.sources&&e.sources.length)for(var a=0;a<e.sources.length;++a)d.SdkStreamDescriptor.encode(e.sources[a],t.uint32(18).fork()).ldelim();if(null!=e.pausedAtSourceIds&&e.pausedAtSourceIds.length)for(a=0;a<e.pausedAtSourceIds.length;++a)t.uint32(24).uint32(e.pausedAtSourceIds[a]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkIndexFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.atCapacity=e.bool();break;case 2:n.sources&&n.sources.length||(n.sources=[]),n.sources.push(d.SdkStreamDescriptor.decode(e,e.uint32()));break;case 3:if(n.pausedAtSourceIds&&n.pausedAtSourceIds.length||(n.pausedAtSourceIds=[]),2==(7&r))for(var i=e.uint32()+e.pos;e.pos<i;)n.pausedAtSourceIds.push(e.uint32());else n.pausedAtSourceIds.push(e.uint32());break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.atCapacity&&e.hasOwnProperty("atCapacity")&&"boolean"!=typeof e.atCapacity)return"atCapacity: boolean expected";if(null!=e.sources&&e.hasOwnProperty("sources")){if(!Array.isArray(e.sources))return"sources: array expected";for(var t=0;t<e.sources.length;++t){var a=d.SdkStreamDescriptor.verify(e.sources[t]);if(a)return"sources."+a}}if(null!=e.pausedAtSourceIds&&e.hasOwnProperty("pausedAtSourceIds")){if(!Array.isArray(e.pausedAtSourceIds))return"pausedAtSourceIds: array expected";for(t=0;t<e.pausedAtSourceIds.length;++t)if(!s.isInteger(e.pausedAtSourceIds[t]))return"pausedAtSourceIds: integer[] expected"}return null},e.fromObject=function(e){if(e instanceof d.SdkIndexFrame)return e;var t=new d.SdkIndexFrame;if(null!=e.atCapacity&&(t.atCapacity=Boolean(e.atCapacity)),e.sources){if(!Array.isArray(e.sources))throw TypeError(".SdkIndexFrame.sources: array expected");t.sources=[];for(var a=0;a<e.sources.length;++a){if("object"!=typeof e.sources[a])throw TypeError(".SdkIndexFrame.sources: object expected");t.sources[a]=d.SdkStreamDescriptor.fromObject(e.sources[a])}}if(e.pausedAtSourceIds){if(!Array.isArray(e.pausedAtSourceIds))throw TypeError(".SdkIndexFrame.pausedAtSourceIds: array expected");t.pausedAtSourceIds=[];for(a=0;a<e.pausedAtSourceIds.length;++a)t.pausedAtSourceIds[a]=e.pausedAtSourceIds[a]>>>0}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.sources=[],a.pausedAtSourceIds=[]),t.defaults&&(a.atCapacity=!1),null!=e.atCapacity&&e.hasOwnProperty("atCapacity")&&(a.atCapacity=e.atCapacity),e.sources&&e.sources.length){a.sources=[];for(var n=0;n<e.sources.length;++n)a.sources[n]=d.SdkStreamDescriptor.toObject(e.sources[n],t)}if(e.pausedAtSourceIds&&e.pausedAtSourceIds.length){a.pausedAtSourceIds=[];for(n=0;n<e.pausedAtSourceIds.length;++n)a.pausedAtSourceIds[n]=e.pausedAtSourceIds[n]}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkPauseResumeFrame=function(){function e(e){if(this.streamIds=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.streamIds=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.streamIds&&e.streamIds.length)for(var a=0;a<e.streamIds.length;++a)t.uint32(8).uint32(e.streamIds[a]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkPauseResumeFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:if(n.streamIds&&n.streamIds.length||(n.streamIds=[]),2==(7&r))for(var i=e.uint32()+e.pos;e.pos<i;)n.streamIds.push(e.uint32());else n.streamIds.push(e.uint32());break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.streamIds&&e.hasOwnProperty("streamIds")){if(!Array.isArray(e.streamIds))return"streamIds: array expected";for(var t=0;t<e.streamIds.length;++t)if(!s.isInteger(e.streamIds[t]))return"streamIds: integer[] expected"}return null},e.fromObject=function(e){if(e instanceof d.SdkPauseResumeFrame)return e;var t=new d.SdkPauseResumeFrame;if(e.streamIds){if(!Array.isArray(e.streamIds))throw TypeError(".SdkPauseResumeFrame.streamIds: array expected");t.streamIds=[];for(var a=0;a<e.streamIds.length;++a)t.streamIds[a]=e.streamIds[a]>>>0}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.streamIds=[]),e.streamIds&&e.streamIds.length){a.streamIds=[];for(var n=0;n<e.streamIds.length;++n)a.streamIds[n]=e.streamIds[n]}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkBitrateFrame=function(){function e(e){if(this.bitrates=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.bitrates=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.bitrates&&e.bitrates.length)for(var a=0;a<e.bitrates.length;++a)d.SdkBitrate.encode(e.bitrates[a],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkBitrateFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.bitrates&&n.bitrates.length||(n.bitrates=[]),n.bitrates.push(d.SdkBitrate.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.bitrates&&e.hasOwnProperty("bitrates")){if(!Array.isArray(e.bitrates))return"bitrates: array expected";for(var t=0;t<e.bitrates.length;++t){var a=d.SdkBitrate.verify(e.bitrates[t]);if(a)return"bitrates."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkBitrateFrame)return e;var t=new d.SdkBitrateFrame;if(e.bitrates){if(!Array.isArray(e.bitrates))throw TypeError(".SdkBitrateFrame.bitrates: array expected");t.bitrates=[];for(var a=0;a<e.bitrates.length;++a){if("object"!=typeof e.bitrates[a])throw TypeError(".SdkBitrateFrame.bitrates: object expected");t.bitrates[a]=d.SdkBitrate.fromObject(e.bitrates[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.bitrates=[]),e.bitrates&&e.bitrates.length){a.bitrates=[];for(var n=0;n<e.bitrates.length;++n)a.bitrates[n]=d.SdkBitrate.toObject(e.bitrates[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkStreamDescriptor=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.streamId=0,e.prototype.framerate=0,e.prototype.maxBitrateKbps=0,e.prototype.trackLabel="",e.prototype.groupId=0,e.prototype.avgBitrateBps=0,e.prototype.attendeeId="",e.prototype.mediaType=1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.streamId&&e.hasOwnProperty("streamId")&&t.uint32(8).uint32(e.streamId),null!=e.framerate&&e.hasOwnProperty("framerate")&&t.uint32(16).uint32(e.framerate),null!=e.maxBitrateKbps&&e.hasOwnProperty("maxBitrateKbps")&&t.uint32(24).uint32(e.maxBitrateKbps),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&t.uint32(34).string(e.trackLabel),null!=e.groupId&&e.hasOwnProperty("groupId")&&t.uint32(48).uint32(e.groupId),null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&t.uint32(56).uint32(e.avgBitrateBps),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&t.uint32(66).string(e.attendeeId),null!=e.mediaType&&e.hasOwnProperty("mediaType")&&t.uint32(72).int32(e.mediaType),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkStreamDescriptor;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.streamId=e.uint32();break;case 2:n.framerate=e.uint32();break;case 3:n.maxBitrateKbps=e.uint32();break;case 4:n.trackLabel=e.string();break;case 6:n.groupId=e.uint32();break;case 7:n.avgBitrateBps=e.uint32();break;case 8:n.attendeeId=e.string();break;case 9:n.mediaType=e.int32();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.streamId&&e.hasOwnProperty("streamId")&&!s.isInteger(e.streamId))return"streamId: integer expected";if(null!=e.framerate&&e.hasOwnProperty("framerate")&&!s.isInteger(e.framerate))return"framerate: integer expected";if(null!=e.maxBitrateKbps&&e.hasOwnProperty("maxBitrateKbps")&&!s.isInteger(e.maxBitrateKbps))return"maxBitrateKbps: integer expected";if(null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&!s.isString(e.trackLabel))return"trackLabel: string expected";if(null!=e.groupId&&e.hasOwnProperty("groupId")&&!s.isInteger(e.groupId))return"groupId: integer expected";if(null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&!s.isInteger(e.avgBitrateBps))return"avgBitrateBps: integer expected";if(null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&!s.isString(e.attendeeId))return"attendeeId: string expected";if(null!=e.mediaType&&e.hasOwnProperty("mediaType"))switch(e.mediaType){default:return"mediaType: enum value expected";case 1:case 2:}return null},e.fromObject=function(e){if(e instanceof d.SdkStreamDescriptor)return e;var t=new d.SdkStreamDescriptor;switch(null!=e.streamId&&(t.streamId=e.streamId>>>0),null!=e.framerate&&(t.framerate=e.framerate>>>0),null!=e.maxBitrateKbps&&(t.maxBitrateKbps=e.maxBitrateKbps>>>0),null!=e.trackLabel&&(t.trackLabel=String(e.trackLabel)),null!=e.groupId&&(t.groupId=e.groupId>>>0),null!=e.avgBitrateBps&&(t.avgBitrateBps=e.avgBitrateBps>>>0),null!=e.attendeeId&&(t.attendeeId=String(e.attendeeId)),e.mediaType){case"AUDIO":case 1:t.mediaType=1;break;case"VIDEO":case 2:t.mediaType=2}return t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.streamId=0,a.framerate=0,a.maxBitrateKbps=0,a.trackLabel="",a.groupId=0,a.avgBitrateBps=0,a.attendeeId="",a.mediaType=t.enums===String?"AUDIO":1),null!=e.streamId&&e.hasOwnProperty("streamId")&&(a.streamId=e.streamId),null!=e.framerate&&e.hasOwnProperty("framerate")&&(a.framerate=e.framerate),null!=e.maxBitrateKbps&&e.hasOwnProperty("maxBitrateKbps")&&(a.maxBitrateKbps=e.maxBitrateKbps),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&(a.trackLabel=e.trackLabel),null!=e.groupId&&e.hasOwnProperty("groupId")&&(a.groupId=e.groupId),null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&(a.avgBitrateBps=e.avgBitrateBps),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&(a.attendeeId=e.attendeeId),null!=e.mediaType&&e.hasOwnProperty("mediaType")&&(a.mediaType=t.enums===String?d.SdkStreamMediaType[e.mediaType]:e.mediaType),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkStreamAllocation=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.trackLabel="",e.prototype.streamId=0,e.prototype.groupId=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&t.uint32(10).string(e.trackLabel),null!=e.streamId&&e.hasOwnProperty("streamId")&&t.uint32(16).uint32(e.streamId),null!=e.groupId&&e.hasOwnProperty("groupId")&&t.uint32(24).uint32(e.groupId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkStreamAllocation;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.trackLabel=e.string();break;case 2:n.streamId=e.uint32();break;case 3:n.groupId=e.uint32();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&!s.isString(e.trackLabel)?"trackLabel: string expected":null!=e.streamId&&e.hasOwnProperty("streamId")&&!s.isInteger(e.streamId)?"streamId: integer expected":null!=e.groupId&&e.hasOwnProperty("groupId")&&!s.isInteger(e.groupId)?"groupId: integer expected":null},e.fromObject=function(e){if(e instanceof d.SdkStreamAllocation)return e;var t=new d.SdkStreamAllocation;return null!=e.trackLabel&&(t.trackLabel=String(e.trackLabel)),null!=e.streamId&&(t.streamId=e.streamId>>>0),null!=e.groupId&&(t.groupId=e.groupId>>>0),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.trackLabel="",a.streamId=0,a.groupId=0),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&(a.trackLabel=e.trackLabel),null!=e.streamId&&e.hasOwnProperty("streamId")&&(a.streamId=e.streamId),null!=e.groupId&&e.hasOwnProperty("groupId")&&(a.groupId=e.groupId),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkTrackMapping=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.streamId=0,e.prototype.ssrc=0,e.prototype.trackLabel="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.streamId&&e.hasOwnProperty("streamId")&&t.uint32(8).uint32(e.streamId),null!=e.ssrc&&e.hasOwnProperty("ssrc")&&t.uint32(16).uint32(e.ssrc),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&t.uint32(26).string(e.trackLabel),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkTrackMapping;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.streamId=e.uint32();break;case 2:n.ssrc=e.uint32();break;case 3:n.trackLabel=e.string();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.streamId&&e.hasOwnProperty("streamId")&&!s.isInteger(e.streamId)?"streamId: integer expected":null!=e.ssrc&&e.hasOwnProperty("ssrc")&&!s.isInteger(e.ssrc)?"ssrc: integer expected":null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&!s.isString(e.trackLabel)?"trackLabel: string expected":null},e.fromObject=function(e){if(e instanceof d.SdkTrackMapping)return e;var t=new d.SdkTrackMapping;return null!=e.streamId&&(t.streamId=e.streamId>>>0),null!=e.ssrc&&(t.ssrc=e.ssrc>>>0),null!=e.trackLabel&&(t.trackLabel=String(e.trackLabel)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.streamId=0,a.ssrc=0,a.trackLabel=""),null!=e.streamId&&e.hasOwnProperty("streamId")&&(a.streamId=e.streamId),null!=e.ssrc&&e.hasOwnProperty("ssrc")&&(a.ssrc=e.ssrc),null!=e.trackLabel&&e.hasOwnProperty("trackLabel")&&(a.trackLabel=e.trackLabel),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkBitrate=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.sourceStreamId=0,e.prototype.avgBitrateBps=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.sourceStreamId&&e.hasOwnProperty("sourceStreamId")&&t.uint32(8).uint32(e.sourceStreamId),null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&t.uint32(16).uint32(e.avgBitrateBps),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkBitrate;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.sourceStreamId=e.uint32();break;case 2:n.avgBitrateBps=e.uint32();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.sourceStreamId&&e.hasOwnProperty("sourceStreamId")&&!s.isInteger(e.sourceStreamId)?"sourceStreamId: integer expected":null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&!s.isInteger(e.avgBitrateBps)?"avgBitrateBps: integer expected":null},e.fromObject=function(e){if(e instanceof d.SdkBitrate)return e;var t=new d.SdkBitrate;return null!=e.sourceStreamId&&(t.sourceStreamId=e.sourceStreamId>>>0),null!=e.avgBitrateBps&&(t.avgBitrateBps=e.avgBitrateBps>>>0),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.sourceStreamId=0,a.avgBitrateBps=0),null!=e.sourceStreamId&&e.hasOwnProperty("sourceStreamId")&&(a.sourceStreamId=e.sourceStreamId),null!=e.avgBitrateBps&&e.hasOwnProperty("avgBitrateBps")&&(a.avgBitrateBps=e.avgBitrateBps),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioControlFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.muted=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.muted&&e.hasOwnProperty("muted")&&t.uint32(8).bool(e.muted),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioControlFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.muted=e.bool();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.muted&&e.hasOwnProperty("muted")&&"boolean"!=typeof e.muted?"muted: boolean expected":null},e.fromObject=function(e){if(e instanceof d.SdkAudioControlFrame)return e;var t=new d.SdkAudioControlFrame;return null!=e.muted&&(t.muted=Boolean(e.muted)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.muted=!1),null!=e.muted&&e.hasOwnProperty("muted")&&(a.muted=e.muted),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioMetadataFrame=function(){function e(e){if(this.attendeeStates=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.attendeeStates=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.attendeeStates&&e.attendeeStates.length)for(var a=0;a<e.attendeeStates.length;++a)d.SdkAudioAttendeeState.encode(e.attendeeStates[a],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioMetadataFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.attendeeStates&&n.attendeeStates.length||(n.attendeeStates=[]),n.attendeeStates.push(d.SdkAudioAttendeeState.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.attendeeStates&&e.hasOwnProperty("attendeeStates")){if(!Array.isArray(e.attendeeStates))return"attendeeStates: array expected";for(var t=0;t<e.attendeeStates.length;++t){var a=d.SdkAudioAttendeeState.verify(e.attendeeStates[t]);if(a)return"attendeeStates."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkAudioMetadataFrame)return e;var t=new d.SdkAudioMetadataFrame;if(e.attendeeStates){if(!Array.isArray(e.attendeeStates))throw TypeError(".SdkAudioMetadataFrame.attendeeStates: array expected");t.attendeeStates=[];for(var a=0;a<e.attendeeStates.length;++a){if("object"!=typeof e.attendeeStates[a])throw TypeError(".SdkAudioMetadataFrame.attendeeStates: object expected");t.attendeeStates[a]=d.SdkAudioAttendeeState.fromObject(e.attendeeStates[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.attendeeStates=[]),e.attendeeStates&&e.attendeeStates.length){a.attendeeStates=[];for(var n=0;n<e.attendeeStates.length;++n)a.attendeeStates[n]=d.SdkAudioAttendeeState.toObject(e.attendeeStates[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioAttendeeState=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.audioStreamId=0,e.prototype.volume=0,e.prototype.muted=!1,e.prototype.signalStrength=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&t.uint32(8).uint32(e.audioStreamId),null!=e.volume&&e.hasOwnProperty("volume")&&t.uint32(16).uint32(e.volume),null!=e.muted&&e.hasOwnProperty("muted")&&t.uint32(24).bool(e.muted),null!=e.signalStrength&&e.hasOwnProperty("signalStrength")&&t.uint32(32).uint32(e.signalStrength),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioAttendeeState;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.audioStreamId=e.uint32();break;case 2:n.volume=e.uint32();break;case 3:n.muted=e.bool();break;case 4:n.signalStrength=e.uint32();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&!s.isInteger(e.audioStreamId)?"audioStreamId: integer expected":null!=e.volume&&e.hasOwnProperty("volume")&&!s.isInteger(e.volume)?"volume: integer expected":null!=e.muted&&e.hasOwnProperty("muted")&&"boolean"!=typeof e.muted?"muted: boolean expected":null!=e.signalStrength&&e.hasOwnProperty("signalStrength")&&!s.isInteger(e.signalStrength)?"signalStrength: integer expected":null},e.fromObject=function(e){if(e instanceof d.SdkAudioAttendeeState)return e;var t=new d.SdkAudioAttendeeState;return null!=e.audioStreamId&&(t.audioStreamId=e.audioStreamId>>>0),null!=e.volume&&(t.volume=e.volume>>>0),null!=e.muted&&(t.muted=Boolean(e.muted)),null!=e.signalStrength&&(t.signalStrength=e.signalStrength>>>0),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.audioStreamId=0,a.volume=0,a.muted=!1,a.signalStrength=0),null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&(a.audioStreamId=e.audioStreamId),null!=e.volume&&e.hasOwnProperty("volume")&&(a.volume=e.volume),null!=e.muted&&e.hasOwnProperty("muted")&&(a.muted=e.muted),null!=e.signalStrength&&e.hasOwnProperty("signalStrength")&&(a.signalStrength=e.signalStrength),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioStreamIdInfoFrame=function(){function e(e){if(this.streams=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.streams=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.streams&&e.streams.length)for(var a=0;a<e.streams.length;++a)d.SdkAudioStreamIdInfo.encode(e.streams[a],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioStreamIdInfoFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.streams&&n.streams.length||(n.streams=[]),n.streams.push(d.SdkAudioStreamIdInfo.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.streams&&e.hasOwnProperty("streams")){if(!Array.isArray(e.streams))return"streams: array expected";for(var t=0;t<e.streams.length;++t){var a=d.SdkAudioStreamIdInfo.verify(e.streams[t]);if(a)return"streams."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkAudioStreamIdInfoFrame)return e;var t=new d.SdkAudioStreamIdInfoFrame;if(e.streams){if(!Array.isArray(e.streams))throw TypeError(".SdkAudioStreamIdInfoFrame.streams: array expected");t.streams=[];for(var a=0;a<e.streams.length;++a){if("object"!=typeof e.streams[a])throw TypeError(".SdkAudioStreamIdInfoFrame.streams: object expected");t.streams[a]=d.SdkAudioStreamIdInfo.fromObject(e.streams[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.streams=[]),e.streams&&e.streams.length){a.streams=[];for(var n=0;n<e.streams.length;++n)a.streams[n]=d.SdkAudioStreamIdInfo.toObject(e.streams[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioStreamIdInfo=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.audioStreamId=0,e.prototype.attendeeId="",e.prototype.muted=!1,e.prototype.externalUserId="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&t.uint32(8).uint32(e.audioStreamId),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&t.uint32(18).string(e.attendeeId),null!=e.muted&&e.hasOwnProperty("muted")&&t.uint32(24).bool(e.muted),null!=e.externalUserId&&e.hasOwnProperty("externalUserId")&&t.uint32(34).string(e.externalUserId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioStreamIdInfo;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.audioStreamId=e.uint32();break;case 2:n.attendeeId=e.string();break;case 3:n.muted=e.bool();break;case 4:n.externalUserId=e.string();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&!s.isInteger(e.audioStreamId)?"audioStreamId: integer expected":null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&!s.isString(e.attendeeId)?"attendeeId: string expected":null!=e.muted&&e.hasOwnProperty("muted")&&"boolean"!=typeof e.muted?"muted: boolean expected":null!=e.externalUserId&&e.hasOwnProperty("externalUserId")&&!s.isString(e.externalUserId)?"externalUserId: string expected":null},e.fromObject=function(e){if(e instanceof d.SdkAudioStreamIdInfo)return e;var t=new d.SdkAudioStreamIdInfo;return null!=e.audioStreamId&&(t.audioStreamId=e.audioStreamId>>>0),null!=e.attendeeId&&(t.attendeeId=String(e.attendeeId)),null!=e.muted&&(t.muted=Boolean(e.muted)),null!=e.externalUserId&&(t.externalUserId=String(e.externalUserId)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.audioStreamId=0,a.attendeeId="",a.muted=!1,a.externalUserId=""),null!=e.audioStreamId&&e.hasOwnProperty("audioStreamId")&&(a.audioStreamId=e.audioStreamId),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&(a.attendeeId=e.attendeeId),null!=e.muted&&e.hasOwnProperty("muted")&&(a.muted=e.muted),null!=e.externalUserId&&e.hasOwnProperty("externalUserId")&&(a.externalUserId=e.externalUserId),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkPingPongType=function(){var e={},t=Object.create(e);return t[e[1]="PING"]=1,t[e[2]="PONG"]=2,t}(),d.SdkPingPongFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.type=1,e.prototype.pingId=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),t.uint32(8).int32(e.type),t.uint32(16).uint32(e.pingId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkPingPongFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.type=e.int32();break;case 2:n.pingId=e.uint32();break;default:e.skipType(7&r)}}if(!n.hasOwnProperty("type"))throw s.ProtocolError("missing required 'type'",{instance:n});if(!n.hasOwnProperty("pingId"))throw s.ProtocolError("missing required 'pingId'",{instance:n});return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";switch(e.type){default:return"type: enum value expected";case 1:case 2:}return s.isInteger(e.pingId)?null:"pingId: integer expected"},e.fromObject=function(e){if(e instanceof d.SdkPingPongFrame)return e;var t=new d.SdkPingPongFrame;switch(e.type){case"PING":case 1:t.type=1;break;case"PONG":case 2:t.type=2}return null!=e.pingId&&(t.pingId=e.pingId>>>0),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.type=t.enums===String?"PING":1,a.pingId=0),null!=e.type&&e.hasOwnProperty("type")&&(a.type=t.enums===String?d.SdkPingPongType[e.type]:e.type),null!=e.pingId&&e.hasOwnProperty("pingId")&&(a.pingId=e.pingId),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkAudioStatusFrame=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.audioStatus=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&t.uint32(8).uint32(e.audioStatus),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkAudioStatusFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.audioStatus=e.uint32();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&!s.isInteger(e.audioStatus)?"audioStatus: integer expected":null},e.fromObject=function(e){if(e instanceof d.SdkAudioStatusFrame)return e;var t=new d.SdkAudioStatusFrame;return null!=e.audioStatus&&(t.audioStatus=e.audioStatus>>>0),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.audioStatus=0),null!=e.audioStatus&&e.hasOwnProperty("audioStatus")&&(a.audioStatus=e.audioStatus),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkMetric=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.type=1,e.prototype.value=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=c.create()),null!=e.type&&e.hasOwnProperty("type")&&t.uint32(8).int32(e.type),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(17).double(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkMetric;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.type=e.int32();break;case 2:n.value=e.double();break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.type&&e.hasOwnProperty("type"))switch(e.type){default:return"type: enum value expected";case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:}return null!=e.value&&e.hasOwnProperty("value")&&"number"!=typeof e.value?"value: number expected":null},e.fromObject=function(e){if(e instanceof d.SdkMetric)return e;var t=new d.SdkMetric;switch(e.type){case"VIDEO_ACTUAL_ENCODER_BITRATE":case 1:t.type=1;break;case"VIDEO_AVAILABLE_SEND_BANDWIDTH":case 2:t.type=2;break;case"VIDEO_RETRANSMIT_BITRATE":case 3:t.type=3;break;case"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH":case 4:t.type=4;break;case"VIDEO_TARGET_ENCODER_BITRATE":case 5:t.type=5;break;case"VIDEO_BUCKET_DELAY_MS":case 6:t.type=6;break;case"STUN_RTT_MS":case 7:t.type=7;break;case"SOCKET_DISCARDED_PPS":case 8:t.type=8;break;case"RTC_MIC_JITTER_MS":case 9:t.type=9;break;case"RTC_MIC_PPS":case 10:t.type=10;break;case"RTC_MIC_FRACTION_PACKET_LOST_PERCENT":case 11:t.type=11;break;case"RTC_MIC_BITRATE":case 12:t.type=12;break;case"RTC_MIC_RTT_MS":case 13:t.type=13;break;case"RTC_SPK_PPS":case 14:t.type=14;break;case"RTC_SPK_FRACTION_PACKET_LOST_PERCENT":case 15:t.type=15;break;case"RTC_SPK_JITTER_MS":case 16:t.type=16;break;case"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT":case 17:t.type=17;break;case"RTC_SPK_BITRATE":case 18:t.type=18;break;case"RTC_SPK_CURRENT_DELAY_MS":case 19:t.type=19;break;case"RTC_SPK_JITTER_BUFFER_MS":case 20:t.type=20;break;case"VIDEO_SENT_RTT_MS":case 21:t.type=21;break;case"VIDEO_ENCODE_USAGE_PERCENT":case 22:t.type=22;break;case"VIDEO_NACKS_RECEIVED":case 23:t.type=23;break;case"VIDEO_PLIS_RECEIVED":case 24:t.type=24;break;case"VIDEO_AVERAGE_ENCODE_MS":case 25:t.type=25;break;case"VIDEO_INPUT_FPS":case 26:t.type=26;break;case"VIDEO_ENCODE_FPS":case 27:t.type=27;break;case"VIDEO_SENT_FPS":case 28:t.type=28;break;case"VIDEO_FIRS_RECEIVED":case 29:t.type=29;break;case"VIDEO_SENT_PPS":case 30:t.type=30;break;case"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT":case 31:t.type=31;break;case"VIDEO_SENT_BITRATE":case 32:t.type=32;break;case"VIDEO_DROPPED_FPS":case 33:t.type=33;break;case"VIDEO_TARGET_DELAY_MS":case 34:t.type=34;break;case"VIDEO_DECODE_MS":case 35:t.type=35;break;case"VIDEO_OUTPUT_FPS":case 36:t.type=36;break;case"VIDEO_RECEIVED_PPS":case 37:t.type=37;break;case"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT":case 38:t.type=38;break;case"VIDEO_RENDER_DELAY_MS":case 39:t.type=39;break;case"VIDEO_RECEIVED_FPS":case 40:t.type=40;break;case"VIDEO_DECODE_FPS":case 41:t.type=41;break;case"VIDEO_NACKS_SENT":case 42:t.type=42;break;case"VIDEO_FIRS_SENT":case 43:t.type=43;break;case"VIDEO_RECEIVED_BITRATE":case 44:t.type=44;break;case"VIDEO_CURRENT_DELAY_MS":case 45:t.type=45;break;case"VIDEO_JITTER_BUFFER_MS":case 46:t.type=46;break;case"VIDEO_DISCARDED_PPS":case 47:t.type=47;break;case"VIDEO_PLIS_SENT":case 48:t.type=48;break;case"VIDEO_RECEIVED_JITTER_MS":case 49:t.type=49}return null!=e.value&&(t.value=Number(e.value)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.type=t.enums===String?"VIDEO_ACTUAL_ENCODER_BITRATE":1,a.value=0),null!=e.type&&e.hasOwnProperty("type")&&(a.type=t.enums===String?d.SdkMetric.Type[e.type]:e.type),null!=e.value&&e.hasOwnProperty("value")&&(a.value=t.json&&!isFinite(e.value)?String(e.value):e.value),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.Type=function(){var e={},t=Object.create(e);return t[e[1]="VIDEO_ACTUAL_ENCODER_BITRATE"]=1,t[e[2]="VIDEO_AVAILABLE_SEND_BANDWIDTH"]=2,t[e[3]="VIDEO_RETRANSMIT_BITRATE"]=3,t[e[4]="VIDEO_AVAILABLE_RECEIVE_BANDWIDTH"]=4,t[e[5]="VIDEO_TARGET_ENCODER_BITRATE"]=5,t[e[6]="VIDEO_BUCKET_DELAY_MS"]=6,t[e[7]="STUN_RTT_MS"]=7,t[e[8]="SOCKET_DISCARDED_PPS"]=8,t[e[9]="RTC_MIC_JITTER_MS"]=9,t[e[10]="RTC_MIC_PPS"]=10,t[e[11]="RTC_MIC_FRACTION_PACKET_LOST_PERCENT"]=11,t[e[12]="RTC_MIC_BITRATE"]=12,t[e[13]="RTC_MIC_RTT_MS"]=13,t[e[14]="RTC_SPK_PPS"]=14,t[e[15]="RTC_SPK_FRACTION_PACKET_LOST_PERCENT"]=15,t[e[16]="RTC_SPK_JITTER_MS"]=16,t[e[17]="RTC_SPK_FRACTION_DECODER_LOSS_PERCENT"]=17,t[e[18]="RTC_SPK_BITRATE"]=18,t[e[19]="RTC_SPK_CURRENT_DELAY_MS"]=19,t[e[20]="RTC_SPK_JITTER_BUFFER_MS"]=20,t[e[21]="VIDEO_SENT_RTT_MS"]=21,t[e[22]="VIDEO_ENCODE_USAGE_PERCENT"]=22,t[e[23]="VIDEO_NACKS_RECEIVED"]=23,t[e[24]="VIDEO_PLIS_RECEIVED"]=24,t[e[25]="VIDEO_AVERAGE_ENCODE_MS"]=25,t[e[26]="VIDEO_INPUT_FPS"]=26,t[e[27]="VIDEO_ENCODE_FPS"]=27,t[e[28]="VIDEO_SENT_FPS"]=28,t[e[29]="VIDEO_FIRS_RECEIVED"]=29,t[e[30]="VIDEO_SENT_PPS"]=30,t[e[31]="VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT"]=31,t[e[32]="VIDEO_SENT_BITRATE"]=32,t[e[33]="VIDEO_DROPPED_FPS"]=33,t[e[34]="VIDEO_TARGET_DELAY_MS"]=34,t[e[35]="VIDEO_DECODE_MS"]=35,t[e[36]="VIDEO_OUTPUT_FPS"]=36,t[e[37]="VIDEO_RECEIVED_PPS"]=37,t[e[38]="VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT"]=38,t[e[39]="VIDEO_RENDER_DELAY_MS"]=39,t[e[40]="VIDEO_RECEIVED_FPS"]=40,t[e[41]="VIDEO_DECODE_FPS"]=41,t[e[42]="VIDEO_NACKS_SENT"]=42,t[e[43]="VIDEO_FIRS_SENT"]=43,t[e[44]="VIDEO_RECEIVED_BITRATE"]=44,t[e[45]="VIDEO_CURRENT_DELAY_MS"]=45,t[e[46]="VIDEO_JITTER_BUFFER_MS"]=46,t[e[47]="VIDEO_DISCARDED_PPS"]=47,t[e[48]="VIDEO_PLIS_SENT"]=48,t[e[49]="VIDEO_RECEIVED_JITTER_MS"]=49,t}(),e}(),d.SdkStreamMetricFrame=function(){function e(e){if(this.metrics=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.streamId=0,e.prototype.groupId=0,e.prototype.metrics=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.streamId&&e.hasOwnProperty("streamId")&&t.uint32(24).uint32(e.streamId),null!=e.groupId&&e.hasOwnProperty("groupId")&&t.uint32(32).uint32(e.groupId),null!=e.metrics&&e.metrics.length)for(var a=0;a<e.metrics.length;++a)d.SdkMetric.encode(e.metrics[a],t.uint32(42).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkStreamMetricFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 3:n.streamId=e.uint32();break;case 4:n.groupId=e.uint32();break;case 5:n.metrics&&n.metrics.length||(n.metrics=[]),n.metrics.push(d.SdkMetric.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.streamId&&e.hasOwnProperty("streamId")&&!s.isInteger(e.streamId))return"streamId: integer expected";if(null!=e.groupId&&e.hasOwnProperty("groupId")&&!s.isInteger(e.groupId))return"groupId: integer expected";if(null!=e.metrics&&e.hasOwnProperty("metrics")){if(!Array.isArray(e.metrics))return"metrics: array expected";for(var t=0;t<e.metrics.length;++t){var a=d.SdkMetric.verify(e.metrics[t]);if(a)return"metrics."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkStreamMetricFrame)return e;var t=new d.SdkStreamMetricFrame;if(null!=e.streamId&&(t.streamId=e.streamId>>>0),null!=e.groupId&&(t.groupId=e.groupId>>>0),e.metrics){if(!Array.isArray(e.metrics))throw TypeError(".SdkStreamMetricFrame.metrics: array expected");t.metrics=[];for(var a=0;a<e.metrics.length;++a){if("object"!=typeof e.metrics[a])throw TypeError(".SdkStreamMetricFrame.metrics: object expected");t.metrics[a]=d.SdkMetric.fromObject(e.metrics[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.metrics=[]),t.defaults&&(a.streamId=0,a.groupId=0),null!=e.streamId&&e.hasOwnProperty("streamId")&&(a.streamId=e.streamId),null!=e.groupId&&e.hasOwnProperty("groupId")&&(a.groupId=e.groupId),e.metrics&&e.metrics.length){a.metrics=[];for(var n=0;n<e.metrics.length;++n)a.metrics[n]=d.SdkMetric.toObject(e.metrics[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),d.SdkClientMetricFrame=function(){function e(e){if(this.globalMetrics=[],this.streamMetricFrames=[],e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.globalMetrics=s.emptyArray,e.prototype.streamMetricFrames=s.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=c.create()),null!=e.globalMetrics&&e.globalMetrics.length)for(var a=0;a<e.globalMetrics.length;++a)d.SdkMetric.encode(e.globalMetrics[a],t.uint32(10).fork()).ldelim();if(null!=e.streamMetricFrames&&e.streamMetricFrames.length)for(a=0;a<e.streamMetricFrames.length;++a)d.SdkStreamMetricFrame.encode(e.streamMetricFrames[a],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new d.SdkClientMetricFrame;e.pos<a;){var r=e.uint32();switch(r>>>3){case 1:n.globalMetrics&&n.globalMetrics.length||(n.globalMetrics=[]),n.globalMetrics.push(d.SdkMetric.decode(e,e.uint32()));break;case 2:n.streamMetricFrames&&n.streamMetricFrames.length||(n.streamMetricFrames=[]),n.streamMetricFrames.push(d.SdkStreamMetricFrame.decode(e,e.uint32()));break;default:e.skipType(7&r)}}return n},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.globalMetrics&&e.hasOwnProperty("globalMetrics")){if(!Array.isArray(e.globalMetrics))return"globalMetrics: array expected";for(var t=0;t<e.globalMetrics.length;++t){if(a=d.SdkMetric.verify(e.globalMetrics[t]))return"globalMetrics."+a}}if(null!=e.streamMetricFrames&&e.hasOwnProperty("streamMetricFrames")){if(!Array.isArray(e.streamMetricFrames))return"streamMetricFrames: array expected";for(t=0;t<e.streamMetricFrames.length;++t){var a;if(a=d.SdkStreamMetricFrame.verify(e.streamMetricFrames[t]))return"streamMetricFrames."+a}}return null},e.fromObject=function(e){if(e instanceof d.SdkClientMetricFrame)return e;var t=new d.SdkClientMetricFrame;if(e.globalMetrics){if(!Array.isArray(e.globalMetrics))throw TypeError(".SdkClientMetricFrame.globalMetrics: array expected");t.globalMetrics=[];for(var a=0;a<e.globalMetrics.length;++a){if("object"!=typeof e.globalMetrics[a])throw TypeError(".SdkClientMetricFrame.globalMetrics: object expected");t.globalMetrics[a]=d.SdkMetric.fromObject(e.globalMetrics[a])}}if(e.streamMetricFrames){if(!Array.isArray(e.streamMetricFrames))throw TypeError(".SdkClientMetricFrame.streamMetricFrames: array expected");t.streamMetricFrames=[];for(a=0;a<e.streamMetricFrames.length;++a){if("object"!=typeof e.streamMetricFrames[a])throw TypeError(".SdkClientMetricFrame.streamMetricFrames: object expected");t.streamMetricFrames[a]=d.SdkStreamMetricFrame.fromObject(e.streamMetricFrames[a])}}return t},e.toObject=function(e,t){t||(t={});var a={};if((t.arrays||t.defaults)&&(a.globalMetrics=[],a.streamMetricFrames=[]),e.globalMetrics&&e.globalMetrics.length){a.globalMetrics=[];for(var n=0;n<e.globalMetrics.length;++n)a.globalMetrics[n]=d.SdkMetric.toObject(e.globalMetrics[n],t)}if(e.streamMetricFrames&&e.streamMetricFrames.length){a.streamMetricFrames=[];for(n=0;n<e.streamMetricFrames.length;++n)a.streamMetricFrames[n]=d.SdkStreamMetricFrame.toObject(e.streamMetricFrames[n],t)}return a},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e}(),e.exports=d},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.WebSocketConnecting=0]="WebSocketConnecting",e[e.WebSocketOpen=1]="WebSocketOpen",e[e.WebSocketError=2]="WebSocketError",e[e.WebSocketClosing=3]="WebSocketClosing",e[e.WebSocketClosed=4]="WebSocketClosed",e[e.WebSocketFailed=5]="WebSocketFailed",e[e.WebSocketMessage=6]="WebSocketMessage",e[e.WebSocketSendMessageFailure=7]="WebSocketSendMessageFailure",e[e.WebSocketSentMessage=8]="WebSocketSentMessage",e[e.ProtocolDecodeFailure=9]="ProtocolDecodeFailure",e[e.ReceivedSignalFrame=10]="ReceivedSignalFrame",e[e.WebSocketSkippedMessage=11]="WebSocketSkippedMessage"}(n=t.SignalingClientEventType||(t.SignalingClientEventType={})),t.default=n},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(174),i=function(){function e(){this.browser=r.detect(),this.browserSupport={chrome:78,"edge-chromium":79,electron:7,firefox:60,ios:12,safari:12,opera:66},this.browserName={chrome:"Google Chrome","edge-chromium":"Microsoft Edge",electron:"Electron",firefox:"Mozilla Firefox",ios:"Safari iOS",safari:"Safari",opera:"Opera"},this.chromeLike=["chrome","edge-chromium","chromium-webview","opera"]}return e.prototype.version=function(){return this.browser.version},e.prototype.majorVersion=function(){return parseInt(this.version().split(".")[0])},e.prototype.name=function(){return this.browser.name},e.prototype.hasChromiumWebRTC=function(){var e,t;try{for(var a=n(this.chromeLike),r=a.next();!r.done;r=a.next()){if(r.value===this.browser.name)return!0}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}return!1},e.prototype.hasFirefoxWebRTC=function(){return this.isFirefox()},e.prototype.screenShareSendsOnlyKeyframes=function(){return this.isFirefox()},e.prototype.requiresUnifiedPlan=function(){return this.isSafari()||this.isFirefox()},e.prototype.requiresCheckForSdpConnectionAttributes=function(){return!this.isIOSSafari()},e.prototype.requiresIceCandidateGatheringTimeoutWorkaround=function(){return this.hasChromiumWebRTC()},e.prototype.requiresUnifiedPlanMunging=function(){return this.isSafari()},e.prototype.requiresBundlePolicy=function(){return this.isSafari()||this.isFirefox()?"max-bundle":"balanced"},e.prototype.requiresPromiseBasedWebRTCGetStats=function(){return!this.hasChromiumWebRTC()},e.prototype.screenShareUnsupported=function(){return!!this.isSafari()},e.prototype.isSupported=function(){return this.majorVersion()>=this.browserSupport[this.browser.name]},e.prototype.supportString=function(){var e=[];for(var t in this.browserSupport)e.push(this.browserName[t]+" "+this.browserSupport[t]+"+");return e.join(", ")},e.prototype.isIOSSafari=function(){return"ios"===this.browser.name},e.prototype.isSafari=function(){return"safari"===this.browser.name||"ios"===this.browser.name},e.prototype.isFirefox=function(){return"firefox"===this.browser.name},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.timeoutMs=e,this.timer=null}return e.prototype.start=function(e){var t=this;this.stop(),this.timer=setTimeout((function(){clearTimeout(t.timer),e()}),this.timeoutMs)},e.prototype.stop=function(){null!==this.timer&&(clearTimeout(this.timer),this.timer=null)},e}();t.default=n},function(e,t,a){"use strict";(function(e){var n=t;function r(e,t,a){for(var n=Object.keys(t),r=0;r<n.length;++r)void 0!==e[n[r]]&&a||(e[n[r]]=t[n[r]]);return e}function i(e){function t(e,a){if(!(this instanceof t))return new t(e,a);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),a&&r(this,a)}return(t.prototype=Object.create(Error.prototype)).constructor=t,Object.defineProperty(t.prototype,"name",{get:function(){return e}}),t.prototype.toString=function(){return this.name+": "+this.message},t}n.asPromise=a(177),n.base64=a(178),n.EventEmitter=a(179),n.float=a(180),n.inquire=a(181),n.utf8=a(182),n.pool=a(183),n.LongBits=a(184),n.global="undefined"!=typeof window&&window||void 0!==e&&e||"undefined"!=typeof self&&self||this,n.emptyArray=Object.freeze?Object.freeze([]):[],n.emptyObject=Object.freeze?Object.freeze({}):{},n.isNode=Boolean(n.global.process&&n.global.process.versions&&n.global.process.versions.node),n.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},n.isString=function(e){return"string"==typeof e||e instanceof String},n.isObject=function(e){return e&&"object"==typeof e},n.isset=n.isSet=function(e,t){var a=e[t];return!(null==a||!e.hasOwnProperty(t))&&("object"!=typeof a||(Array.isArray(a)?a.length:Object.keys(a).length)>0)},n.Buffer=function(){try{var e=n.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),n._Buffer_from=null,n._Buffer_allocUnsafe=null,n.newBuffer=function(e){return"number"==typeof e?n.Buffer?n._Buffer_allocUnsafe(e):new n.Array(e):n.Buffer?n._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},n.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,n.Long=n.global.dcodeIO&&n.global.dcodeIO.Long||n.global.Long||n.inquire("long"),n.key2Re=/^true|false|0|1$/,n.key32Re=/^-?(?:0|[1-9][0-9]*)$/,n.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,n.longToHash=function(e){return e?n.LongBits.from(e).toHash():n.LongBits.zeroHash},n.longFromHash=function(e,t){var a=n.LongBits.fromHash(e);return n.Long?n.Long.fromBits(a.lo,a.hi,t):a.toNumber(Boolean(t))},n.merge=r,n.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},n.newError=i,n.ProtocolError=i("ProtocolError"),n.oneOfGetter=function(e){for(var t={},a=0;a<e.length;++a)t[e[a]]=1;return function(){for(var e=Object.keys(this),a=e.length-1;a>-1;--a)if(1===t[e[a]]&&void 0!==this[e[a]]&&null!==this[e[a]])return e[a]}},n.oneOfSetter=function(e){return function(t){for(var a=0;a<e.length;++a)e[a]!==t&&delete this[e[a]]}},n.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},n._configure=function(){var e=n.Buffer;e?(n._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,a){return new e(t,a)},n._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):n._Buffer_from=n._Buffer_allocUnsafe=null}}).call(this,a(19))},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.ids=new Set(e)}return e.prototype.add=function(e){this.ids.add(e)},e.prototype.array=function(){return Array.from(this.ids.values()).sort((function(e,t){return e-t}))},e.prototype.contain=function(e){return this.ids.has(e)},e.prototype.empty=function(){return 0===this.ids.size},e.prototype.size=function(){return this.ids.size},e.prototype.equal=function(e){if(!e)return 0===this.ids.size;var t=this.array(),a=e.array();if(t.length!==a.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==a[n])return!1;return!0},e.prototype.clone=function(){return new e(this.array())},e.prototype.remove=function(e){this.ids.delete(e)},e.prototype.toJSON=function(){return this.array()},e}();t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(){return e.call(this,0)||this}return r(t,e),t}(a(5).default);t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.intervalMs=e,this.timer=null}return e.prototype.start=function(e){this.stop(),this.timer=setInterval(e,this.intervalMs)},e.prototype.stop=function(){null!==this.timer&&clearInterval(this.timer)},e}();t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.OK=0]="OK",e[e.Left=1]="Left",e[e.AudioJoinedFromAnotherDevice=2]="AudioJoinedFromAnotherDevice",e[e.AudioDisconnectAudio=3]="AudioDisconnectAudio",e[e.AudioAuthenticationRejected=4]="AudioAuthenticationRejected",e[e.AudioCallAtCapacity=5]="AudioCallAtCapacity",e[e.AudioCallEnded=6]="AudioCallEnded",e[e.AudioInternalServerError=7]="AudioInternalServerError",e[e.AudioServiceUnavailable=8]="AudioServiceUnavailable",e[e.AudioDisconnected=9]="AudioDisconnected",e[e.VideoCallSwitchToViewOnly=10]="VideoCallSwitchToViewOnly",e[e.VideoCallAtSourceCapacity=11]="VideoCallAtSourceCapacity",e[e.SignalingBadRequest=12]="SignalingBadRequest",e[e.SignalingInternalServerError=13]="SignalingInternalServerError",e[e.SignalingRequestFailed=14]="SignalingRequestFailed",e[e.StateMachineTransitionFailed=15]="StateMachineTransitionFailed",e[e.ICEGatheringTimeoutWorkaround=16]="ICEGatheringTimeoutWorkaround",e[e.ConnectionHealthReconnect=17]="ConnectionHealthReconnect",e[e.RealtimeApiFailed=18]="RealtimeApiFailed",e[e.TaskFailed=19]="TaskFailed",e[e.AudioDeviceSwitched=20]="AudioDeviceSwitched",e[e.IncompatibleSDP=21]="IncompatibleSDP"}(n=t.MeetingSessionStatusCode||(t.MeetingSessionStatusCode={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.UnknownType="Unknown",e.HeartbeatRequestType="HeartbeatRequest",e.HeartbeatResponseType="HeartbeatResponse",e.StreamStart="StreamStart",e.StreamEnd="StreamEnd",e.StreamStop="StreamStop",e.StreamPause="StreamPause",e.StreamUnpause="StreamUnpause",e.WebM="WebM",e.PresenterSwitch="PresenterSwitch",e.KeyRequest="KeyRequest"}(n=t.ScreenSharingMessageType||(t.ScreenSharingMessageType={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR",e[e.OFF=4]="OFF"}(n=t.LogLevel||(t.LogLevel={})),t.default=n},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},r=this&&this.__read||function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}return o};Object.defineProperty(t,"__esModule",{value:!0});var i=a(75),o=function(){function e(e){this.sdp=e}return e.prototype.clone=function(){return new e(this.sdp)},e.isRTPCandidate=function(e){var t=/candidate[:](\S+) (\d+)/g.exec(e);return null!==t&&"1"===t[2]},e.linesToSDP=function(t){return new e(t.join(e.CRLF))},e.candidateTypeFromString=function(e){switch(e){case i.default.Host:return i.default.Host;case i.default.ServerReflexive:return i.default.ServerReflexive;case i.default.PeerReflexive:return i.default.PeerReflexive;case i.default.Relay:return i.default.Relay}return null},e.candidateType=function(t){var a=/a[=]candidate[:].* typ ([a-z]+) /g.exec(t);return null===a?null:e.candidateTypeFromString(a[1])},e.splitLines=function(e){return e.trim().split("\n").map((function(e){return e.trim()}))},e.splitSections=function(t){return t.split("\nm=").map((function(t,a){return(a>0?"m="+t:t).trim()+e.CRLF}))},e.findActiveCameraSection=function(e){var t,a,r=0,i=!1;try{for(var o=n(e),c=o.next();!c.done;c=o.next()){var s=c.value;if(/^m=video/.test(s)&&s.indexOf("sendrecv")>-1){i=!0;break}r++}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}return!1===i&&(r=-1),r},e.parseSSRCMedia=function(t){var a,n=t.indexOf(" "),r="",i="";a=e.extractSSRCFromAttributeLine(t);var o=t.indexOf(":",n);return o>-1?(r=t.substr(n+1,o-n-1),i=t.substr(o+1)):r=t.substr(n+1),[a,r,i]},e.extractSSRCsFromFIDGroupLine=function(e){return/^a=ssrc-group:FID\s(.+)/.exec(e)[1]},e.extractSSRCFromAttributeLine=function(e){var t=/^a=ssrc:([0-9]+)\s/.exec(e);return null===t?0:parseInt(t[1],10)},e.matchPrefix=function(t,a){return e.splitLines(t).filter((function(e){return 0===e.indexOf(a)}))},e.prototype.lines=function(){return this.sdp.split(e.CRLF)},e.prototype.hasVideo=function(){return null!==/^m=video/gm.exec(this.sdp)},e.prototype.hasCandidates=function(){return null!==/a[=]candidate[:]/g.exec(this.sdp)},e.prototype.hasCandidatesForAllMLines=function(){return!(this.sdp.indexOf("c=IN IP4 0.0.0.0")>-1)},e.prototype.withBundleAudioVideo=function(){var t,a,r=this.lines(),i=[];try{for(var o=n(r),c=o.next();!c.done;c=o.next()){var s=c.value,d=s.replace(/^a=group:BUNDLE audio$/,"a=group:BUNDLE audio video");d===s?i.push(s):i.push(d)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}return e.linesToSDP(i)},e.prototype.copyVideo=function(t){var a,r,i=t.split(e.CRLF),o=e.splitLines(this.sdp),c=!1;try{for(var s=n(i),d=s.next();!d.done;d=s.next()){var u=d.value;/^m=video/.test(u)?c=!0:/^m=/.test(u)&&(c=!1),c&&o.push(u)}}catch(e){a={error:e}}finally{try{d&&!d.done&&(r=s.return)&&r.call(s)}finally{if(a)throw a.error}}return e.linesToSDP(o)},e.prototype.withoutCandidateType=function(t){return e.linesToSDP(this.lines().filter((function(a){return e.candidateType(a)!==t})))},e.prototype.withoutServerReflexiveCandidates=function(){return this.withoutCandidateType(i.default.ServerReflexive)},e.prototype.withBandwidthRestriction=function(t,a){var r,i,o=this.lines(),c=[];try{for(var s=n(o),d=s.next();!d.done;d=s.next()){var u=d.value;c.push(u),/^m=video/.test(u)&&(a?c.push("b=TIAS:"+1e3*t):c.push("b=AS:"+t))}}catch(e){r={error:e}}finally{try{d&&!d.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return e.linesToSDP(c)},e.prototype.withUnifiedPlanFormat=function(){var t=this.sdp;return t.includes("mozilla")?this.clone():new e(t=t.replace("o=-","o=mozilla-chrome"))},e.prototype.withPlanBSimulcast=function(t){if(t<2)return this.clone();var a=this.sdp,n=e.splitSections(a);if(n.length<2)return new e(this.sdp);var i=e.findActiveCameraSection(n);if(-1===i)return new e(this.sdp);var o="",c="";e.matchPrefix(n[i],"a=ssrc:").forEach((function(t){var a=e.parseSSRCMedia(t);"cname"===a[1]?o=a[2]:"msid"===a[1]&&(c=a[2])}));var s=e.matchPrefix(n[i],"a=ssrc-group:FID ");if(""===o||""===c||s.length<1)return new e(this.sdp);for(var d=e.extractSSRCsFromFIDGroupLine(s[0]),u=n[i].trim().split(e.CRLF).filter((function(e){return 0!==e.indexOf("a=ssrc:")&&0!==e.indexOf("a=ssrc-group:")})),f=[],l=r(d.split(" ").map((function(e){return parseInt(e,10)})),2),h=l[0],b=l[1],p=0;p<t;p++)u.push("a=ssrc:"+h+" cname:"+o),u.push("a=ssrc:"+h+" msid:"+c),u.push("a=ssrc:"+b+" cname:"+o),u.push("a=ssrc:"+b+" msid:"+c),u.push("a=ssrc-group:FID "+h+" "+b),f.push(h),b=(h+=1)+1;return u.push("a=ssrc-group:SIM "+f.join(" ")),n[i]=u.join(e.CRLF)+e.CRLF,new e(n.join(""))},e.prototype.ssrcForVideoSendingSection=function(){var t=this.sdp,a=e.splitSections(t);if(a.length<2)return"";var n=e.findActiveCameraSection(a);if(-1===n)return"";var i=e.matchPrefix(a[n],"a=ssrc-group:FID ");if(i.length<1)return"";var o=e.extractSSRCsFromFIDGroupLine(i[0]);return r(o.split(" ").map((function(e){return parseInt(e,10)})),1)[0].toString()},e.prototype.videoSendSectionHasDifferentSSRC=function(e){var t=this.ssrcForVideoSendingSection(),a=e.ssrcForVideoSendingSection();return""!==t&&""!==a&&parseInt(t,10)!==parseInt(a,10)},e.CRLF="\r\n",e}();t.default=o},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.BEGIN=0]="BEGIN",e[e.DRAG=1]="DRAG",e[e.END=2]="END"}(n||(n={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,a){this.fixedWaitMs=e,this.shortBackoffMs=t,this.longBackoffMs=a,this.currentRetry=0,this.fixedWaitMs<0&&(this.fixedWaitMs=0),this.shortBackoffMs<0&&(this.shortBackoffMs=0),this.longBackoffMs<0&&(this.longBackoffMs=0),this.reset()}return e.prototype.reset=function(){this.currentRetry=0},e.prototype.nextBackoffAmountMs=function(){var e=Math.random()*Math.min(this.longBackoffMs,this.shortBackoffMs*Math.pow(2,this.currentRetry))+this.fixedWaitMs;return this.currentRetry+=1,e},e}();t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Broadcast=0]="Broadcast",e[e.Local=1]="Local",e[e.Synthesized=2]="Synthesized",e[e.Unicast=3]="Unicast"}(n=t.ScreenSharingMessageFlag||(t.ScreenSharingMessageFlag={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.InputAttached=0]="InputAttached",e[e.SendingFailed=1]="SendingFailed",e[e.SendingSuccess=2]="SendingSuccess"}(n=t.VideoLogEvent||(t.VideoLogEvent={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.Modality="#content"}(n||(n={})),t.default=n},function(e,t){var a;a=function(){return this}();try{a=a||new Function("return this")()}catch(e){"object"==typeof window&&(a=window)}e.exports=a},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(4),r=function(){function e(){}return Object.defineProperty(e,"sdkVersion",{get:function(){return"1.1.32"},enumerable:!0,configurable:!0}),Object.defineProperty(e,"sdkUserAgentLowResolution",{get:function(){var e=new n.default;return e.name()+"-"+e.majorVersion()},enumerable:!0,configurable:!0}),e.urlWithVersion=function(t){var a=new URL(t);return a.searchParams.append(e.X_AMZN_VERSION,e.sdkVersion),a.searchParams.append(e.X_AMZN_USER_AGENT,e.sdkUserAgentLowResolution),a.toString()},e.X_AMZN_VERSION="X-Amzn-Version",e.X_AMZN_USER_AGENT="X-Amzn-User-Agent",e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,a,n,r){this.cameraWidth=e,this.cameraHeight=t,this.cameraFrameRate=a,this.maxEncodeBitrateKbps=n,this.isSimulcast=r}return e.prototype.equal=function(e){var t=e.captureWidth()===this.cameraWidth&&e.captureHeight()===this.cameraHeight&&e.captureFrameRate()===this.cameraFrameRate&&e.encodeBitrates().length===this.encodeBitrates().length&&e.encodeWidths().length===this.encodeWidths().length&&e.encodeHeights().length===this.encodeHeights().length;if(t)for(var a=0;a<e.encodeWidths().length;a++)if(e.encodeWidths()[a]!==this.encodeWidths()[a]||e.encodeHeights()[a]!==this.encodeHeights()[a]||e.encodeBitrates()[a]!==this.encodeBitrates()[a])return t=!1;return t},e.prototype.clone=function(){return new e(this.cameraWidth,this.cameraHeight,this.cameraFrameRate,this.maxEncodeBitrateKbps,this.isSimulcast)},e.prototype.captureWidth=function(){return this.cameraWidth},e.prototype.captureHeight=function(){return this.cameraHeight},e.prototype.captureFrameRate=function(){return this.cameraFrameRate},e.prototype.encodeBitrates=function(){return[this.maxEncodeBitrateKbps]},e.prototype.encodeWidths=function(){return[this.cameraWidth]},e.prototype.encodeHeights=function(){return[this.cameraHeight]},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.attendeeId=null,this.externalUserId=null,this.joinToken=null}return e.prototype.toJSON=function(){return{attendeeId:this.attendeeId,joinToken:null===this.joinToken?null:"<redacted>"}},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(54),r=function(){this.calculate=function(e){switch(e.boxType){case n.default.LETTER_BOX:var t=e.viewportDimensions[0]/e.sourceAspectRatio;return{dimensions:[e.viewportDimensions[0],t],translations:[0,e.viewportDimensions[1]/2-t/2]};case n.default.PILLAR_BOX:var a=e.viewportDimensions[1]*e.sourceAspectRatio;return{dimensions:[a,e.viewportDimensions[1]],translations:[e.viewportDimensions[0]/2-a/2,0]};case n.default.NONE:return{dimensions:e.viewportDimensions,translations:[0,0]}}}};t.default=r},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.IDLE="IDLE",e.RUNNING="RUNNING",e.CANCELED="CANCELED",e.FINISHED="FINISHED"}(n||(n={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.DeviceChanged=0]="DeviceChanged",e[e.MutedLocal=1]="MutedLocal",e[e.UnmutedLocal=2]="UnmutedLocal",e[e.Connected=3]="Connected",e[e.ConnectFailed=4]="ConnectFailed",e[e.RedmicStartLoss=5]="RedmicStartLoss",e[e.RedmicEndLoss=6]="RedmicEndLoss"}(n=t.AudioLogEvent||(t.AudioLogEvent={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.minHealth=e.minHealth,this.maxHealth=e.maxHealth,this.currentHealth=e.initialHealth,this.currentData=t.clone()}return e.prototype.minimumHealth=function(){return this.minHealth},e.prototype.maximumHealth=function(){return this.maxHealth},e.prototype.health=function(){return this.maximumHealth()},e.prototype.update=function(e){this.currentData=e},e.prototype.getConnectionHealthData=function(){return this.currentData.clone()},e.prototype.healthy=function(){return this.health()>this.minimumHealth()},e.prototype.healthIfChanged=function(){var e=this.health();return e!==this.currentHealth?(this.currentHealth=e,e):null},e}();t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.UPSTREAM=0]="UPSTREAM",e[e.DOWNSTREAM=1]="DOWNSTREAM"}(n=t.ClientMetricReportDirection||(t.ClientMetricReportDirection={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.AUDIO=0]="AUDIO",e[e.VIDEO=1]="VIDEO"}(n=t.ClientMetricReportMediaType||(t.ClientMetricReportMediaType={})),t.default=n},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(69),i=a(8),o=a(70),c=function(){function e(e,t,a,n){this.tileController=a,this.devicePixelRatioMonitor=n,this.tileState=new o.default,this.tileState.tileId=e,this.tileState.localTile=t,this.devicePixelRatioMonitor.registerObserver(this)}return e.connectVideoStreamToVideoElement=function(t,a,n){var r=n?"rotateY(180deg)":"";e.setVideoElementFlag(a,"disablePictureInPicture",n),e.setVideoElementFlag(a,"disableRemotePlayback",n),a.style.transform!==r&&(a.style.transform=r),a.hasAttribute("controls")&&a.removeAttribute("controls"),a.hasAttribute("autoplay")||a.setAttribute("autoplay","true"),a.hasAttribute("muted")||a.setAttribute("muted","true"),a.srcObject!==t&&(a.srcObject=t)},e.disconnectVideoStreamFromVideoElement=function(t,a){var r,o;if(t)if(a)t.srcObject=null,t.style.transform="";else{if(!t.srcObject)return;t.pause(),t.style.transform="",e.setVideoElementFlag(t,"disablePictureInPicture",!1),e.setVideoElementFlag(t,"disableRemotePlayback",!1);var c=t.srcObject,s=c.getTracks();try{for(var d=n(s),u=d.next();!u.done;u=d.next()){var f=u.value;f.stop(),c.removeTrack(f)}}catch(e){r={error:e}}finally{try{u&&!u.done&&(o=d.return)&&o.call(d)}finally{if(r)throw r.error}}(new i.default).start((function(){t.srcObject=null}))}},e.prototype.destroy=function(){this.devicePixelRatioMonitor.removeObserver(this),this.tileState.boundVideoElement&&this.tileState.boundVideoElement.srcObject===this.tileState.boundVideoStream&&e.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement,!1),this.tileState=new o.default},e.prototype.devicePixelRatioChanged=function(e){this.tileState.devicePixelRatio=e,this.sendTileStateUpdate()},e.prototype.id=function(){return this.tileState.tileId},e.prototype.state=function(){return this.tileState.clone()},e.prototype.stateRef=function(){return this.tileState},e.prototype.bindVideoStream=function(e,t,a,n,i,o){var c=!1;this.tileState.boundAttendeeId!==e&&(this.tileState.boundAttendeeId=e,new r.default(e).hasModality(r.default.MODALITY_CONTENT)&&(this.tileState.isContent=!0),c=!0),this.tileState.localTile!==t&&(this.tileState.localTile=t,c=!0),this.tileState.boundVideoStream!==a&&(this.tileState.boundVideoStream=a,c=!0),this.tileState.videoStreamContentWidth!==n&&(this.tileState.videoStreamContentWidth=n,c=!0),this.tileState.videoStreamContentHeight!==i&&(this.tileState.videoStreamContentHeight=i,c=!0),this.tileState.streamId!==o&&(this.tileState.streamId=o,c=!0),c&&this.sendTileStateUpdate()},e.prototype.bindVideoElement=function(e){var t=!1;this.tileState.boundVideoElement!==e&&(this.tileState.boundVideoElement=e,t=!0),null!==this.tileState.boundVideoElement?(this.tileState.videoElementCSSWidthPixels!==e.clientWidth&&(this.tileState.videoElementCSSWidthPixels=e.clientWidth,t=!0),this.tileState.videoElementCSSHeightPixels!==e.clientHeight&&(this.tileState.videoElementCSSHeightPixels=e.clientHeight,t=!0)):(this.tileState.videoElementCSSWidthPixels=null,this.tileState.videoElementCSSHeightPixels=null),t&&this.sendTileStateUpdate()},e.prototype.pause=function(){this.tileState.paused||(this.tileState.paused=!0,this.sendTileStateUpdate())},e.prototype.unpause=function(){this.tileState.paused&&(this.tileState.paused=!1,this.sendTileStateUpdate())},e.prototype.markPoorConnection=function(){return!this.tileState.poorConnection&&(this.tileState.poorConnection=!0,this.sendTileStateUpdate(),!0)},e.prototype.unmarkPoorConnection=function(){return!!this.tileState.poorConnection&&(this.tileState.poorConnection=!1,this.sendTileStateUpdate(),!0)},e.prototype.capture=function(){if(!this.tileState.active)return null;var e=document.createElement("canvas"),t=this.tileState.boundVideoElement;e.width=t.videoWidth||t.width,e.height=t.videoHeight||t.height;var a=e.getContext("2d");return a.drawImage(t,0,0,e.width,e.height),a.getImageData(0,0,e.width,e.height)},e.prototype.sendTileStateUpdate=function(){this.updateActiveState(),this.updateVideoStreamOnVideoElement(),this.updateVideoElementPhysicalPixels(),this.tileController.sendTileStateUpdate(this.state())},e.prototype.updateActiveState=function(){this.tileState.active=!(this.tileState.paused||this.tileState.poorConnection||!this.tileState.boundAttendeeId||!this.tileState.boundVideoElement||!this.tileState.boundVideoStream)},e.prototype.updateVideoElementPhysicalPixels=function(){"number"==typeof this.tileState.videoElementCSSWidthPixels&&"number"==typeof this.tileState.videoElementCSSHeightPixels?(this.tileState.videoElementPhysicalWidthPixels=this.tileState.devicePixelRatio*this.tileState.videoElementCSSWidthPixels,this.tileState.videoElementPhysicalHeightPixels=this.tileState.devicePixelRatio*this.tileState.videoElementCSSHeightPixels):(this.tileState.videoElementPhysicalWidthPixels=null,this.tileState.videoElementPhysicalHeightPixels=null)},e.prototype.updateVideoStreamOnVideoElement=function(){this.tileState.active?e.connectVideoStreamToVideoElement(this.tileState.boundVideoStream,this.tileState.boundVideoElement,this.tileState.localTile):e.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement,this.tileState.paused)},e.setVideoElementFlag=function(e,t,a){t in e&&(e[t]=a)},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=a(76),c=a(77),s=a(4),d=a(63),u=a(78),f=a(1),l=a(31),h=a(10),b=a(32),p=a(82),v=a(83),m=a(8),g=a(86),y=a(33),S=a(34),w=a(35),k=a(88),I=a(2),C=a(90),T=a(59),_=a(61),E=a(62),O=a(73),M=a(74),x=a(96),A=a(97),P=a(99),D=a(100),R=a(101),V=a(104),L=a(106),F=a(107),j=a(108),B=a(110),N=a(111),U=a(112),H=a(113),W=a(114),G=a(115),z=a(117),K=a(118),J=a(21),q=a(58),$=a(7),X=a(119),Q=a(120),Y=a(123),Z=a(124),ee=a(125),te=a(60),ae=function(){function e(e,t,a,n,r){this.connectionHealthData=new d.default,this.observerQueue=new Set,this.meetingSessionContext=new te.default,this._logger=t,this.sessionStateController=new g.default(this._logger),this._configuration=e,this._webSocketAdapter=a,this._realtimeController=new v.default,this._realtimeController.realtimeSetLocalAttendeeId(e.credentials.attendeeId,e.credentials.externalUserId),this._activeSpeakerDetector=new o.default(this._realtimeController,e.credentials.attendeeId,this.handleHasBandwidthPriority.bind(this)),this._mediaStreamBroker=n,this._reconnectController=r,this._videoTileController=new Q.default(new Y.default,this,this._logger),this._audioMixController=new c.default,this.meetingSessionContext.logger=this._logger}return Object.defineProperty(e.prototype,"configuration",{get:function(){return this._configuration},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"realtimeController",{get:function(){return this._realtimeController},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activeSpeakerDetector",{get:function(){return this._activeSpeakerDetector},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"videoTileController",{get:function(){return this._videoTileController},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"audioMixController",{get:function(){return this._audioMixController},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"logger",{get:function(){return this._logger},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rtcPeerConnection",{get:function(){return this.meetingSessionContext&&this.meetingSessionContext.peer||null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mediaStreamBroker",{get:function(){return this._mediaStreamBroker},enumerable:!0,configurable:!0}),e.prototype.addObserver=function(e){this.logger.info("adding meeting observer"),this.observerQueue.add(e)},e.prototype.removeObserver=function(e){this.logger.info("removing meeting observer"),this.observerQueue.delete(e)},e.prototype.forEachObserver=function(e){var t,a,n=this,r=function(t){(new m.default).start((function(){n.observerQueue.has(t)&&e(t)}))};try{for(var o=i(this.observerQueue),c=o.next();!c.done;c=o.next()){r(c.value)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}},e.prototype.start=function(){var e=this;this.sessionStateController.perform(y.default.Connect,(function(){e.actionConnect(!1)}))},e.prototype.actionConnect=function(t){return n(this,void 0,void 0,(function(){var a,i=this;return r(this,(function(o){switch(o.label){case 0:this.connectionHealthData.reset(),this.meetingSessionContext=new te.default,this.meetingSessionContext.logger=this.logger,this.meetingSessionContext.browserBehavior=new s.default,this.meetingSessionContext.meetingSessionConfiguration=this.configuration,this.meetingSessionContext.signalingClient=new k.default(this._webSocketAdapter,this.logger),this.meetingSessionContext.mediaStreamBroker=this._mediaStreamBroker,this.meetingSessionContext.realtimeController=this._realtimeController,this.meetingSessionContext.audioMixController=this._audioMixController,this.meetingSessionContext.audioVideoController=this,this.meetingSessionContext.transceiverController=new K.default(this.logger),this.meetingSessionContext.volumeIndicatorAdapter=new ee.default(this.logger,this._realtimeController,e.MIN_VOLUME_DECIBELS,e.MAX_VOLUME_DECIBELS),this.meetingSessionContext.videoTileController=this._videoTileController,this.meetingSessionContext.videoStreamIndex=new X.default(this.logger),this.meetingSessionContext.videoDownlinkBandwidthPolicy=new q.default(this.configuration.credentials.attendeeId),this.meetingSessionContext.videoUplinkBandwidthPolicy=new Z.default(this.configuration.credentials.attendeeId),this.meetingSessionContext.lastKnownVideoAvailability=new b.default,this.meetingSessionContext.videoCaptureAndEncodeParameter=new J.default(0,0,0,0,!1),this.meetingSessionContext.videosToReceive=new $.default,this.meetingSessionContext.videosPaused=new $.default,this.meetingSessionContext.statsCollector=new C.default(this,this.logger),this.meetingSessionContext.connectionMonitor=new u.default(this,this._realtimeController,this._videoTileController,this.connectionHealthData,new p.default(this.meetingSessionContext.signalingClient,e.PING_PONG_INTERVAL_MS,this.logger),this.meetingSessionContext.statsCollector),this.meetingSessionContext.reconnectController=this._reconnectController,this.meetingSessionContext.audioDeviceInformation={},this.meetingSessionContext.videoDeviceInformation={},t||(this._reconnectController.reset(),this.forEachObserver((function(e){f.default.of(e.audioVideoDidStartConnecting).map((function(t){return t.bind(e)(!1)}))}))),this._reconnectController.hasStartedConnectionAttempt()?this._reconnectController.startedConnectionAttempt(!1):this._reconnectController.startedConnectionAttempt(!0),o.label=1;case 1:return o.trys.push([1,3,,4]),[4,new U.default(this.logger,this.wrapTaskName("AudioVideoStart"),[new R.default(this.meetingSessionContext,this.configuration.connectionHealthPolicyConfiguration,this.connectionHealthData),new F.default(this.meetingSessionContext),new z.default(this.logger,new U.default(this.logger,"Media",[new L.default(this.logger,"Setup",[new j.default(this.meetingSessionContext),new U.default(this.logger,"Signaling",[new V.default(this.meetingSessionContext),new D.default(this.meetingSessionContext),new A.default(this.meetingSessionContext),new N.default(this.meetingSessionContext)])]),new U.default(this.logger,"Peer",[new O.default(this.meetingSessionContext),new T.default(this.meetingSessionContext),new M.default(this.meetingSessionContext),new H.default(this.meetingSessionContext),new x.default(this.meetingSessionContext),new G.default(this.meetingSessionContext),new W.default(this.meetingSessionContext)])]),this.configuration.connectionTimeoutMs)]).run()];case 2:return o.sent(),this.sessionStateController.perform(y.default.FinishConnecting,(function(){i.actionFinishConnecting()})),[3,4];case 3:return a=o.sent(),this.sessionStateController.perform(y.default.Fail,(function(){return n(i,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return e=new l.default(this.getMeetingStatusCode(a)||h.default.TaskFailed),[4,this.actionDisconnect(e,!0)];case 1:return t.sent(),this.handleMeetingSessionStatus(e)||this.forEachObserver((function(t){f.default.of(t.audioVideoDidStop).map((function(a){return a.bind(t)(e)}))})),[2]}}))}))})),[3,4];case 4:return this.connectionHealthData.setConnectionStartTime(),[2]}}))}))},e.prototype.actionFinishConnecting=function(){this.meetingSessionContext.videoDuplexMode=I.SdkStreamServiceType.RX,this.enforceBandwidthLimitationForSender(this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0]),this.forEachObserver((function(e){f.default.of(e.audioVideoDidStart).map((function(t){return t.bind(e)()}))})),this._reconnectController.reset()},e.prototype.stop=function(){var e=this;this.sessionStateController.perform(y.default.Disconnect,(function(){e.actionDisconnect(new l.default(h.default.Left),!1)}))},e.prototype.actionDisconnect=function(e,t){return n(this,void 0,void 0,(function(){var a=this;return r(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,new U.default(this.logger,this.wrapTaskName("AudioVideoStop"),[new z.default(this.logger,new P.default(this.meetingSessionContext),this.configuration.connectionTimeoutMs)]).run()];case 1:return n.sent(),[3,3];case 2:return n.sent(),this.logger.info("fail to stop"),[3,3];case 3:return n.trys.push([3,5,,6]),[4,new U.default(this.logger,this.wrapTaskName("AudioVideoClean"),[new z.default(this.logger,new E.default(this.meetingSessionContext),this.configuration.connectionTimeoutMs)]).run()];case 4:return n.sent(),[3,6];case 5:return n.sent(),this.logger.info("fail to clean"),[3,6];case 6:return this.sessionStateController.perform(y.default.FinishDisconnecting,(function(){t||a.forEachObserver((function(t){f.default.of(t.audioVideoDidStop).map((function(a){return a.bind(t)(e)}))}))})),[2]}}))}))},e.prototype.update=function(){var e=this,t=this.sessionStateController.perform(y.default.Update,(function(){e.actionUpdate(!0)}));return t===w.default.Transitioned||t===w.default.DeferredTransition},e.prototype.restartLocalVideo=function(e){var t=this,a=this.sessionStateController.perform(y.default.Update,(function(){n(t,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this._videoTileController.hasStartedLocalVideoTile()?(this.logger.info("stopping local video tile prior to local video restart"),this._videoTileController.stopLocalVideoTile(),this.logger.info("preparing local video restart update"),[4,this.actionUpdate(!1)]):[3,2];case 1:t.sent(),this.logger.info("starting local video tile for local video restart"),this._videoTileController.startLocalVideoTile(),t.label=2;case 2:return this.logger.info("finalizing local video restart update"),[4,this.actionUpdate(!0)];case 3:return t.sent(),e(),[2]}}))}))}));return a===w.default.Transitioned||a===w.default.DeferredTransition},e.prototype.restartLocalAudio=function(e){return n(this,void 0,void 0,(function(){var t,a,n;return r(this,(function(r){switch(r.label){case 0:t=null,r.label=1;case 1:return r.trys.push([1,3,,4]),[4,this.mediaStreamBroker.acquireAudioInputStream()];case 2:return t=r.sent(),[3,4];case 3:return r.sent(),this.logger.info("could not acquire audio stream from mediaStreamBroker"),[3,4];case 4:if(!t||t.getAudioTracks().length<1)throw new Error("could not acquire audio track");if(this.connectionHealthData.reset(),this.connectionHealthData.setConnectionStartTime(),a=t.getAudioTracks()[0],!this.meetingSessionContext||!this.meetingSessionContext.peer)throw new Error("no active meeting and peer connection");return n=!1,this.meetingSessionContext.browserBehavior.requiresUnifiedPlan()?[4,this.meetingSessionContext.transceiverController.replaceAudioTrack(a)]:[3,6];case 5:return n=r.sent(),[3,8];case 6:return[4,K.default.replaceAudioTrackForSender(this.meetingSessionContext.localAudioSender,a)];case 7:n=r.sent(),r.label=8;case 8:return this.meetingSessionContext.activeAudioInput=t,e(),n?[2,Promise.resolve()]:[2,Promise.reject()]}}))}))},e.prototype.actionUpdate=function(e){return n(this,void 0,void 0,(function(){var t,a=this;return r(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,new U.default(this.logger,this.wrapTaskName("AudioVideoUpdate"),[new B.default(this.meetingSessionContext),new z.default(this.logger,new U.default(this.logger,"UpdateSession",[new T.default(this.meetingSessionContext),new M.default(this.meetingSessionContext),new H.default(this.meetingSessionContext),new x.default(this.meetingSessionContext),new G.default(this.meetingSessionContext),new W.default(this.meetingSessionContext)]),this.configuration.connectionTimeoutMs)]).run()];case 1:return n.sent(),e&&this.sessionStateController.perform(y.default.FinishUpdating,(function(){a.actionFinishUpdating()})),[3,3];case 2:return t=n.sent(),this.sessionStateController.perform(y.default.FinishUpdating,(function(){var e=new l.default(a.getMeetingStatusCode(t)||h.default.TaskFailed);e.statusCode()!==h.default.IncompatibleSDP&&a.logger.info("failed to update audio-video session"),a.handleMeetingSessionStatus(e)})),[3,3];case 3:return[2]}}))}))},e.prototype.actionFinishUpdating=function(){var e=this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0];this.enforceBandwidthLimitationForSender(e),this.logger.info("updated audio-video session")},e.prototype.reconnect=function(e){var t=this,a=this._reconnectController.retryWithBackoff((function(){return n(t,void 0,void 0,(function(){var e=this;return r(this,(function(t){return this.sessionStateController.state()===S.default.NotConnected?this.sessionStateController.perform(y.default.Connect,(function(){e.actionConnect(!0)})):this.sessionStateController.perform(y.default.Reconnect,(function(){e.actionReconnect()})),[2]}))}))}),(function(){t.logger.info("canceled retry")}));return a||this.sessionStateController.perform(y.default.Fail,(function(){t.actionDisconnect(e,!1)})),a},e.prototype.actionReconnect=function(){return n(this,void 0,void 0,(function(){var e,t=this;return r(this,(function(a){switch(a.label){case 0:this._reconnectController.hasStartedConnectionAttempt()||(this._reconnectController.startedConnectionAttempt(!1),this.forEachObserver((function(e){f.default.of(e.audioVideoDidStartConnecting).map((function(t){return t.bind(e)(!0)}))}))),this.connectionHealthData.reset(),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,new U.default(this.logger,this.wrapTaskName("AudioVideoReconnect"),[new z.default(this.logger,new U.default(this.logger,"Media",[new _.default(this.meetingSessionContext),new L.default(this.logger,"Setup",[new j.default(this.meetingSessionContext),new U.default(this.logger,"Signaling",[new V.default(this.meetingSessionContext),new A.default(this.meetingSessionContext)])]),new O.default(this.meetingSessionContext)]),this.configuration.connectionTimeoutMs),new B.default(this.meetingSessionContext),new z.default(this.logger,new U.default(this.logger,"UpdateSession",[new T.default(this.meetingSessionContext),new M.default(this.meetingSessionContext),new H.default(this.meetingSessionContext),new x.default(this.meetingSessionContext),new G.default(this.meetingSessionContext),new W.default(this.meetingSessionContext)]),this.configuration.connectionTimeoutMs)]).run()];case 2:return a.sent(),this.sessionStateController.perform(y.default.FinishConnecting,(function(){t.actionFinishConnecting()})),[3,4];case 3:return e=a.sent(),this.sessionStateController.perform(y.default.FinishConnecting,(function(){t.logger.info("failed to reconnect audio-video session"),t.handleMeetingSessionStatus(new l.default(t.getMeetingStatusCode(e)||h.default.TaskFailed))})),[3,4];case 4:return this.connectionHealthData.setConnectionStartTime(),[2]}}))}))},e.prototype.wrapTaskName=function(e){return e+"/"+this.configuration.meetingId+"/"+this.configuration.credentials.attendeeId},e.prototype.getMeetingStatusCode=function(e){var t=/the meeting status code: (\d+)/.exec(e&&e.message);return t&&t.length>1?Number(t[1]):null},e.prototype.enforceBandwidthLimitationForSender=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this.meetingSessionContext.browserBehavior.requiresUnifiedPlan()?[4,this.meetingSessionContext.transceiverController.setVideoSendingBitrateKbps(e)]:[3,2];case 1:return t.sent(),[3,4];case 2:return[4,K.default.setVideoSendingBitrateKbpsForSender(this.meetingSessionContext.localVideoSender,e,this.meetingSessionContext.logger)];case 3:t.sent(),t.label=4;case 4:return[2]}}))}))},e.prototype.handleMeetingSessionStatus=function(e){var t=this;return this.logger.info("handling status: "+h.default[e.statusCode()]),e.isTerminal()||this.meetingSessionContext.statsCollector&&this.meetingSessionContext.statsCollector.logMeetingSessionStatus(e),e.statusCode()===h.default.IncompatibleSDP?(this.restartLocalVideo((function(){t.logger.info("handled incompatible SDP by attempting to restart video")})),!0):e.statusCode()===h.default.VideoCallSwitchToViewOnly?(this._videoTileController.removeLocalVideoTile(),this.forEachObserver((function(e){f.default.of(e.videoSendDidBecomeUnavailable).map((function(t){return t.bind(e)()}))})),!1):(e.isFailure()&&this.logger.error("connection failed with status code: "+h.default[e.statusCode()]),e.isTerminal()&&(this.logger.info("session will not be reconnected"),this.meetingSessionContext.reconnectController&&this.meetingSessionContext.reconnectController.disableReconnect()),!(!e.isFailure()&&!e.isTerminal()||!this.meetingSessionContext.reconnectController)&&this.reconnect(e))},e.prototype.setVideoMaxBandwidthKbps=function(e){this.meetingSessionContext&&this.meetingSessionContext.videoUplinkBandwidthPolicy&&(this.logger.info("video send has ideal max bandwidth "+e+" kbps"),this.meetingSessionContext.videoUplinkBandwidthPolicy.setIdealMaxBandwidthKbps(e))},e.prototype.handleHasBandwidthPriority=function(e){return n(this,void 0,void 0,(function(){var t,a;return r(this,(function(n){switch(n.label){case 0:return this.meetingSessionContext&&this.meetingSessionContext.videoUplinkBandwidthPolicy?(this.logger.info("video send has bandwidth priority: "+e),t=this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps(),this.meetingSessionContext.videoUplinkBandwidthPolicy.setHasBandwidthPriority(e),a=this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps(),t===a?[3,2]:(this.logger.info("video send bandwidth max has changed from "+t+" kbps to "+a+" kbps"),[4,this.enforceBandwidthLimitationForSender(a)])):[3,2];case 1:n.sent(),n.label=2;case 2:return[2]}}))}))},e.prototype.pauseReceivingStream=function(e){this.meetingSessionContext&&this.meetingSessionContext.signalingClient&&this.meetingSessionContext.signalingClient.pause([e])},e.prototype.resumeReceivingStream=function(e){this.meetingSessionContext&&this.meetingSessionContext.signalingClient&&this.meetingSessionContext.signalingClient.resume([e])},e.MIN_VOLUME_DECIBELS=-42,e.MAX_VOLUME_DECIBELS=-14,e.PING_PONG_INTERVAL_MS=1e4,e}();t.default=ae},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(2),r=a(10),i=function(){function e(e){this._statusCode=e}return e.prototype.statusCode=function(){return this._statusCode},e.prototype.isFailure=function(){switch(this._statusCode){case r.default.AudioAuthenticationRejected:case r.default.AudioCallAtCapacity:case r.default.AudioInternalServerError:case r.default.AudioServiceUnavailable:case r.default.AudioDisconnected:case r.default.VideoCallAtSourceCapacity:case r.default.SignalingBadRequest:case r.default.SignalingInternalServerError:case r.default.SignalingRequestFailed:case r.default.StateMachineTransitionFailed:case r.default.ICEGatheringTimeoutWorkaround:case r.default.ConnectionHealthReconnect:case r.default.RealtimeApiFailed:case r.default.TaskFailed:return!0;default:return!1}},e.prototype.isTerminal=function(){switch(this._statusCode){case r.default.Left:case r.default.AudioJoinedFromAnotherDevice:case r.default.AudioAuthenticationRejected:case r.default.AudioCallAtCapacity:case r.default.AudioCallEnded:case r.default.AudioInternalServerError:case r.default.AudioDisconnected:case r.default.SignalingBadRequest:case r.default.SignalingInternalServerError:case r.default.SignalingRequestFailed:case r.default.VideoCallAtSourceCapacity:case r.default.RealtimeApiFailed:return!0;default:return!1}},e.prototype.isAudioConnectionFailure=function(){switch(this._statusCode){case r.default.AudioAuthenticationRejected:case r.default.AudioInternalServerError:case r.default.AudioServiceUnavailable:case r.default.StateMachineTransitionFailed:case r.default.ICEGatheringTimeoutWorkaround:case r.default.SignalingBadRequest:case r.default.SignalingInternalServerError:case r.default.SignalingRequestFailed:case r.default.RealtimeApiFailed:return!0;default:return!1}},e.fromSignalFrame=function(t){return t.error&&t.error.status?this.fromSignalingStatus(t.error.status):t.type===n.SdkSignalFrame.Type.AUDIO_STATUS?t.audioStatus?this.fromAudioStatus(t.audioStatus.audioStatus):new e(r.default.SignalingRequestFailed):new e(r.default.OK)},e.fromAudioStatus=function(t){switch(t){case 200:return new e(r.default.OK);case 301:return new e(r.default.AudioJoinedFromAnotherDevice);case 302:return new e(r.default.AudioDisconnectAudio);case 403:return new e(r.default.AudioAuthenticationRejected);case 409:return new e(r.default.AudioCallAtCapacity);case 410:return new e(r.default.AudioCallEnded);case 500:return new e(r.default.AudioInternalServerError);case 503:return new e(r.default.AudioServiceUnavailable);default:switch(Math.floor(t/100)){case 2:return new e(r.default.OK);default:return new e(r.default.AudioDisconnected)}}},e.fromSignalingStatus=function(t){switch(t){case 206:return new e(r.default.VideoCallSwitchToViewOnly);case 509:return new e(r.default.VideoCallAtSourceCapacity);default:switch(Math.floor(t/100)){case 2:return new e(r.default.OK);case 4:return new e(r.default.SignalingBadRequest);case 5:return new e(r.default.SignalingInternalServerError);default:return new e(r.default.SignalingRequestFailed)}}},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.remoteVideoAvailable=!1,this.canStartLocalVideo=!1}return e.prototype.equal=function(e){return this.remoteVideoAvailable===e.remoteVideoAvailable&&this.canStartLocalVideo===e.canStartLocalVideo},e.prototype.clone=function(){var t=new e;return t.remoteVideoAvailable=this.remoteVideoAvailable,t.canStartLocalVideo=this.canStartLocalVideo,t},e}();t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Connect=0]="Connect",e[e.FinishConnecting=1]="FinishConnecting",e[e.Update=2]="Update",e[e.FinishUpdating=3]="FinishUpdating",e[e.Reconnect=4]="Reconnect",e[e.Disconnect=5]="Disconnect",e[e.Fail=6]="Fail",e[e.FinishDisconnecting=7]="FinishDisconnecting"}(n=t.SessionStateControllerAction||(t.SessionStateControllerAction={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.NotConnected=0]="NotConnected",e[e.Connecting=1]="Connecting",e[e.Connected=2]="Connected",e[e.Updating=3]="Updating",e[e.Disconnecting=4]="Disconnecting"}(n=t.SessionStateControllerState||(t.SessionStateControllerState={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Transitioned=0]="Transitioned",e[e.NoTransitionAvailable=1]="NoTransitionAvailable",e[e.DeferredTransition=2]="DeferredTransition",e[e.TransitionFailed=3]="TransitionFailed"}(n=t.SessionStateControllerTransitionResult||(t.SessionStateControllerTransitionResult={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.None=0]="None",e[e.Connecting=1]="Connecting",e[e.Open=2]="Open",e[e.Closing=3]="Closing",e[e.Closed=4]="Closed"}(n=t.WebSocketReadyState||(t.WebSocketReadyState={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(4),r=a(64),i=a(22),o=a(38),c=function(e,t){this.meetingId=null,this.credentials=null,this.urls=null,this.connectionTimeoutMs=15e3,this.screenSharingTimeoutMs=5e3,this.screenViewingTimeoutMs=5e3,this.screenSharingSessionOptions={},this.connectionHealthPolicyConfiguration=new r.default,this.enableWebAudio=!1,e&&(e.Meeting&&(e=e.Meeting),this.meetingId=e.MeetingId,this.urls=new o.default,this.urls.audioHostURL=e.MediaPlacement.AudioHostUrl,this.urls.screenDataURL=e.MediaPlacement.ScreenDataUrl,this.urls.screenSharingURL=e.MediaPlacement.ScreenSharingUrl,this.urls.screenViewingURL=e.MediaPlacement.ScreenViewingUrl,this.urls.signalingURL=e.MediaPlacement.SignalingUrl,this.urls.turnControlURL=e.MediaPlacement.TurnControlUrl),t&&(t.Attendee&&(t=t.Attendee),this.credentials=new i.default,this.credentials.attendeeId=t.AttendeeId,this.credentials.externalUserId=t.ExternalUserId,this.credentials.joinToken=t.JoinToken),(new n.default).screenShareSendsOnlyKeyframes()&&(this.screenSharingSessionOptions={bitRate:384e3})};t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this._audioHostURL=null,this._screenDataURL=null,this._screenSharingURL=null,this._screenViewingURL=null,this._signalingURL=null,this._turnControlURL=null,this.urlRewriter=function(e){return e}}return Object.defineProperty(e.prototype,"audioHostURL",{get:function(){return this.urlRewriter(this._audioHostURL)},set:function(e){this._audioHostURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"screenDataURL",{get:function(){return this.urlRewriter(this._screenDataURL)},set:function(e){this._screenDataURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"screenSharingURL",{get:function(){return this.urlRewriter(this._screenSharingURL)},set:function(e){this._screenSharingURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"screenViewingURL",{get:function(){return this.urlRewriter(this._screenViewingURL)},set:function(e){this._screenViewingURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"signalingURL",{get:function(){return this.urlRewriter(this._signalingURL)},set:function(e){this._signalingURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"turnControlURL",{get:function(){return this.urlRewriter(this._turnControlURL)},set:function(e){this._turnControlURL=e},enumerable:!0,configurable:!0}),e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(20),r=a(128),i=function(){function e(){}return e.prototype.create=function(e,t,a){var i=new WebSocket(n.default.urlWithVersion(e),t);return void 0!==a&&(i.binaryType=a),new r.default(i)},e}();t.default=i},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(130),o=a(132),c=a(133),s=function(){function e(e,t){this.logger=e,this.maxInputSize=t,this.decoderInput=null,this.jpegDecoderModule=null}return e.prototype.init=function(){return n(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return this.logger.info("loading JPEGDecoder WebAssembly module"),this.jpegDecoderModule=new c.default(this.logger),[4,this.jpegDecoderModule.init()];case 1:return e.sent(),this.logger.info("loaded JPEGDecoder WebAssembly module"),this.decoderInput=new o.default(this.jpegDecoderModule,this.maxInputSize),[2]}}))}))},e.prototype.free=function(){this.decoderInput.free(),this.jpegDecoderModule.free(),this.decoderInput=null,this.jpegDecoderModule=null},e.prototype.createInstance=function(e,t){return new i.default(this.jpegDecoderModule,this,e,t)},e.prototype.newInternalInputView=function(){return new Uint8Array(this.jpegDecoderModule.wasm().memory.buffer,this.decoderInput.inputPointer(),this.maxInputSize)},e.prototype.newInternalOutputView=function(e,t){return new Uint8ClampedArray(this.jpegDecoderModule.wasm().memory.buffer,e,t)},e.prototype.inputPointer=function(){return this.decoderInput.inputPointer()},e.prototype.isInputTooLarge=function(e){return e>this.maxInputSize},e}();t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(5),r=function(){function e(e,t){this.reconnectTimeoutMs=e,this.backoffPolicy=t,this.shouldReconnect=!0,this.onlyRestartPeerConnection=!1,this.firstConnectionAttempted=!1,this.firstConnectionAttemptTimestampMs=0,this.lastActiveTimestampMs=1/0,this._isFirstConnection=!0,this.backoffTimer=null,this.backoffCancel=null,this.reset()}return e.prototype.timeSpentReconnectingMs=function(){return this.firstConnectionAttempted?Date.now()-this.firstConnectionAttemptTimestampMs:0},e.prototype.hasPastReconnectDeadline=function(){return Date.now()-this.lastActiveTimestampMs>=this.reconnectTimeoutMs||this.timeSpentReconnectingMs()>=this.reconnectTimeoutMs},e.prototype.reset=function(){this.cancel(),this.shouldReconnect=!0,this.onlyRestartPeerConnection=!1,this.firstConnectionAttempted=!1,this.firstConnectionAttemptTimestampMs=0,this.lastActiveTimestampMs=1/0,this.backoffPolicy.reset()},e.prototype.startedConnectionAttempt=function(e){this._isFirstConnection=e,this.firstConnectionAttempted||(this.firstConnectionAttempted=!0,this.firstConnectionAttemptTimestampMs=Date.now())},e.prototype.hasStartedConnectionAttempt=function(){return this.firstConnectionAttempted},e.prototype.isFirstConnection=function(){return this._isFirstConnection},e.prototype.disableReconnect=function(){this.shouldReconnect=!1},e.prototype.enableRestartPeerConnection=function(){this.onlyRestartPeerConnection=!0},e.prototype.cancel=function(){this.disableReconnect(),this.backoffTimer&&(this.backoffTimer.stop(),this.backoffCancel&&(this.backoffCancel(),this.backoffCancel=null))},e.prototype.retryWithBackoff=function(e,t){var a=this,r=this.shouldReconnect&&!this.hasPastReconnectDeadline();return r&&(this.backoffCancel=t,this.backoffTimer=new n.default(this.backoffPolicy.nextBackoffAmountMs()),this.backoffTimer.start((function(){a.backoffCancel=null,e()}))),r},e.prototype.shouldOnlyRestartPeerConnection=function(){return this.onlyRestartPeerConnection},e.prototype.clone=function(){return new e(this.reconnectTimeoutMs,this.backoffPolicy)},e.prototype.setLastActiveTimestampMs=function(e){this.lastActiveTimestampMs=e},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(15),r=a(136),i=function(){function e(e,t,a){this.fixedWaitMs=e,this.shortBackoffMs=t,this.longBackoffMs=a}return e.prototype.create=function(){return new n.default(this.fixedWaitMs,this.shortBackoffMs,this.longBackoffMs)},e.prototype.createWithLimit=function(e){return new r.default(this.fixedWaitMs,this.shortBackoffMs,this.longBackoffMs,e)},e}();t.default=i},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.EndedEvent="ended"}(n=t.MediaRecordingEvent||(t.MediaRecordingEvent={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(139),r=function(){function e(e){this.webSocketFactory=e}return e.prototype.create=function(e,t,a){return new n.default(this.webSocketFactory.create(e,t,a))},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(140),r=function(){function e(e,t,a){this.promisedWebSocketFactory=e,this.backoffFactory=t,this.reconnectRetryLimit=a}return e.prototype.create=function(e,t,a){return new n.default(e,t,a,this.promisedWebSocketFactory,this.backoffFactory.createWithLimit(this.reconnectRetryLimit))},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=a(142),i=a(192),o=function(){function e(){}return e.prototype.deserialize=function(e){return n.default.of(e).map((function(e){return new r.default(i.SdkScreenSignalingMessage.decode(e))}))},e}();t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(143),r=function(){function e(){}return e.prototype.create=function(e){return new n.default(e)},e}();t.default=r},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.EndedEvent="ended",e.MessageEvent="message"}(n=t.ScreenShareStreamingEvent||(t.ScreenShareStreamingEvent={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(16),r=function(){function e(){}return e.prototype.serialize=function(t){var a=0;return t.includes(n.default.Broadcast)&&(a|=e.Broadcast),t.includes(n.default.Local)&&(a|=e.Local),t.includes(n.default.Synthesized)&&(a|=e.Synthesized),t.includes(n.default.Unicast)&&(a|=e.Unicast),a},e.prototype.deserialize=function(t){var a=new Array;return this.isBitSet(t,e.Broadcast)&&a.push(n.default.Broadcast),this.isBitSet(t,e.Unicast)&&a.push(n.default.Unicast),this.isBitSet(t,e.Local)&&a.push(n.default.Local),this.isBitSet(t,e.Synthesized)&&a.push(n.default.Synthesized),a},e.prototype.isBitSet=function(e,t){return(e&t)===t},e.Broadcast=1,e.Local=2,e.Synthesized=4,e.Unicast=8,e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(11),r=function(){function e(e,t,a){this.typeSerialization=e,this.flagSerialization=t,this.signalingDetailSerialization=a}return e.prototype.serialize=function(e){var t=this.typeSerialization.serialize(e.type),a=this.flagSerialization.serialize(e.flags),n=Uint8Array.of(t,a,0,0);return new Blob([n,e.data])},e.prototype.deserialize=function(t){var a=null,n=this.typeSerialization.deserialize(t[0]),r=this.flagSerialization.deserialize(t[1]),i=t.slice(4,t.length);return e.detailedSignals.indexOf(n)>-1&&(a=this.signalingDetailSerialization.deserialize(i).getOrElse(null)),{type:n,flags:r,data:i,detail:a}},e.detailedSignals=Array.of(n.default.StreamStart,n.default.StreamEnd,n.default.PresenterSwitch),e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(11),r=function(){function e(){}return e.prototype.serialize=function(t){return e.fromTypeMap.has(t)?e.fromTypeMap.get(t):0},e.prototype.deserialize=function(t){return e.fromNumberMap.has(t)?e.fromNumberMap.get(t):n.default.UnknownType},e.fromNumberMap=new Map([[2,n.default.KeyRequest],[3,n.default.StreamStart],[4,n.default.StreamEnd],[5,n.default.StreamStop],[6,n.default.HeartbeatRequestType],[7,n.default.HeartbeatResponseType],[13,n.default.WebM],[16,n.default.PresenterSwitch],[21,n.default.StreamPause],[22,n.default.StreamUnpause]]),e.fromTypeMap=new Map(Array.from(e.fromNumberMap).map((function(e){return e.reverse()}))),e}();t.default=r},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.Close="close",e.StreamStart="streamstart",e.StreamEnd="streamend",e.StreamSwitch="streamswitch",e.Heartbeat="heartbeat"}(n=t.ScreenSignalingSessionEventType||(t.ScreenSignalingSessionEventType={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.SETUP=1]="SETUP",e[e.DELTA=2]="DELTA",e[e.SYNC=3]="SYNC",e[e.ECHO_REQUEST=4]="ECHO_REQUEST",e[e.ECHO_RESPONSE=5]="ECHO_RESPONSE",e[e.NOSCREEN=7]="NOSCREEN",e[e.ENDSCREEN=8]="ENDSCREEN",e[e.JPEG_HEADER_BYTE_0=255]="JPEG_HEADER_BYTE_0",e[e.JPEG_HEADER_BYTE_1=216]="JPEG_HEADER_BYTE_1"}(n=t.ScreenViewingPacketType||(t.ScreenViewingPacketType={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.LETTER_BOX=0]="LETTER_BOX",e[e.PILLAR_BOX=1]="PILLAR_BOX",e[e.NONE=2]="NONE"}(n||(n={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(20),r=a(36),i=function(){function e(e){this.logger=e}return e.prototype.create=function(e,t){this.connection=new WebSocket(n.default.urlWithVersion(e),t),this.connection.binaryType="arraybuffer"},e.prototype.send=function(e){var t=this;try{return this.connection.send(e.buffer),!0}catch(e){return this.logger.debug((function(){return"send error: "+e.message+", websocket state="+r.default[t.readyState()]})),!1}},e.prototype.close=function(){this.connection.close()},e.prototype.destroy=function(){this.connection=null},e.prototype.addEventListener=function(e,t){this.connection.addEventListener(e,t)},e.prototype.readyState=function(){if(!this.connection)return r.default.None;switch(this.connection.readyState){case WebSocket.CONNECTING:return r.default.Connecting;case WebSocket.OPEN:return r.default.Open;case WebSocket.CLOSING:return r.default.Closing;case WebSocket.CLOSED:return r.default.Closed}},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.prototype.acquireAudioInputStream=function(){return Promise.reject()},e.prototype.acquireVideoInputStream=function(){return Promise.reject()},e.prototype.acquireDisplayInputStream=function(e){return Promise.reject()},e.prototype.releaseMediaStream=function(e){},e.prototype.bindToAudioVideoController=function(e){},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(58);t.AllHighestVideoBandwidthPolicy=n.default;var r=a(8);t.AsyncScheduler=r.default;var i=a(59);t.AttachMediaInputTask=i.default;var o=a(25);t.AudioLogEvent=o.default;var c=a(60);t.AudioVideoControllerState=c.default;var s=a(26);t.BaseConnectionHealthPolicy=s.default;var d=a(0);t.BaseTask=d.default;var u=a(61);t.CleanRestartedSessionTask=u.default;var f=a(62);t.CleanStoppedSessionTask=f.default;var l=a(27);t.ClientMetricReportDirection=l.default;var h=a(28);t.ClientMetricReportMediaType=h.default;var b=a(63);t.ConnectionHealthData=b.default;var p=a(64);t.ConnectionHealthPolicyConfiguration=p.default;var v=a(172);t.ConsoleLogger=v.default;var m=a(18);t.ContentShareConstants=m.default;var g=a(65);t.ContentShareMediaStreamBroker=g.default;var y=a(73);t.CreatePeerConnectionTask=y.default;var S=a(74);t.CreateSDPTask=S.default;var w=a(76);t.DefaultActiveSpeakerDetector=w.default;var k=a(173);t.DefaultActiveSpeakerPolicy=k.default;var I=a(77);t.DefaultAudioMixController=I.default;var C=a(30);t.DefaultAudioVideoController=C.default;var T=a(126);t.DefaultAudioVideoFacade=T.default;var _=a(4);t.DefaultBrowserBehavior=_.default;var E=a(91);t.DefaultClientMetricReport=E.default;var O=a(127);t.DefaultContentShareController=O.default;var M=a(128);t.DefaultDOMWebSocket=M.default;var x=a(39);t.DefaultDOMWebSocketFactory=x.default;var A=a(66);t.DefaultDeviceController=A.default;var P=a(121);t.DefaultDevicePixelRatioMonitor=P.default;var D=a(129);t.DefaultDragObserver=D.default;var R=a(190);t.DefaultJPEGDecoderComponentFactory=R.default;var V=a(40);t.DefaultJPEGDecoderController=V.default;var L=a(130);t.DefaultJPEGDecoderInstance=L.default;var F=a(191);t.DefaultMeetingSession=F.default;var j=a(69);t.DefaultModality=j.default;var B=a(82);t.DefaultPingPong=B.default;var N=a(157);t.DefaultPresentation=N.default;var U=a(139);t.DefaultPromisedWebSocket=U.default;var H=a(44);t.DefaultPromisedWebSocketFactory=H.default;var W=a(83);t.DefaultRealtimeController=W.default;var G=a(41);t.DefaultReconnectController=G.default;var z=a(150);t.DefaultResizeObserverAdapter=z.default;var K=a(13);t.DefaultSDP=K.default;var J=a(134);t.DefaultScreenShareFacade=J.default;var q=a(147);t.DefaultScreenShareViewFacade=q.default;var $=a(145);t.DefaultScreenSharingSession=$.default;var X=a(144);t.DefaultScreenSharingSessionFactory=X.default;var Q=a(153);t.DefaultScreenSignalingSession=Q.default;var Y=a(152);t.DefaultScreenSignalingSessionFactory=Y.default;var Z=a(165);t.DefaultScreenViewing=Z.default;var ee=a(154);t.DefaultScreenViewingComponentContext=ee.default;var te=a(156);t.DefaultScreenViewingDeltaRenderer=te.default;var ae=a(160);t.DefaultScreenViewingDeltaSource=ae.default;var ne=a(161);t.DefaultScreenViewingMessageHandler=ne.default;var re=a(162);t.DefaultScreenViewingSession=re.default;var ie=a(164);t.DefaultScreenViewingViewer=ie.default;var oe=a(86);t.DefaultSessionStateController=oe.default;var ce=a(88);t.DefaultSignalingClient=ce.default;var se=a(163);t.DefaultSignalingSession=se.default;var de=a(90);t.DefaultStatsCollector=de.default;var ue=a(118);t.DefaultTransceiverController=ue.default;var fe=a(21);t.DefaultVideoCaptureAndEncodeParameter=fe.default;var le=a(7);t.DefaultVideoStreamIdSet=le.default;var he=a(119);t.DefaultVideoStreamIndex=he.default;var be=a(29);t.DefaultVideoTile=be.default;var pe=a(120);t.DefaultVideoTileController=pe.default;var ve=a(123);t.DefaultVideoTileFactory=ve.default;var me=a(125);t.DefaultVolumeIndicatorAdapter=me.default;var ge=a(55);t.DefaultWebSocketAdapter=ge.default;var ye=a(71);t.DevicePermission=ye.default;var Se=a(122);t.DevicePixelRatioWindowSource=Se.default;var we=a(72);t.DeviceSelection=we.default;var ke=a(166);t.DragAndZoomPresentationPolicy=ke.default;var Ie=a(14);t.DragType=Ie.default;var Ce=a(96);t.FinishGatheringICECandidatesTask=Ce.default;var Te=a(15);t.FullJitterBackoff=Te.default;var _e=a(42);t.FullJitterBackoffFactory=_e.default;var Ee=a(136);t.FullJitterLimitedBackoff=Ee.default;var Oe=a(92);t.GlobalMetricReport=Oe.default;var Me=a(196);t.InitializeDefaultJPEGDecoderControllerTask=Me.default;var xe=a(9);t.IntervalScheduler=xe.default;var Ae=a(131);t.JPEGDecoder=Ae.default;var Pe=a(132);t.JPEGDecoderInput=Pe.default;var De=a(133);t.JPEGDecoderModule=De.default;var Re=a(97);t.JoinAndReceiveIndexTask=Re.default;var Ve=a(99);t.LeaveAndReceiveLeaveAckTask=Ve.default;var Le=a(100);t.ListenForVolumeIndicatorsTask=Le.default;var Fe=a(168);t.Log=Fe.default;var je=a(12);t.LogLevel=je.default;var Be=a(1);t.Maybe=Be.default;var Ne=a(43);t.MediaRecordingEvent=Ne.default;var Ue=a(37);t.MeetingSessionConfiguration=Ue.default;var He=a(22);t.MeetingSessionCredentials=He.default;var We=a(94);t.MeetingSessionLifecycleEvent=We.default;var Ge=a(95);t.MeetingSessionLifecycleEventCondition=Ge.default;var ze=a(197);t.MeetingSessionPOSTLogger=ze.default;var Ke=a(31);t.MeetingSessionStatus=Ke.default;var Je=a(10);t.MeetingSessionStatusCode=Je.default;var qe=a(109);t.MeetingSessionTURNCredentials=qe.default;var $e=a(38);t.MeetingSessionURLs=$e.default;var Xe=a(32);t.MeetingSessionVideoAvailability=Xe.default;var Qe=a(101);t.MonitorTask=Qe.default;var Ye=a(124);t.NScaleVideoUplinkBandwidthPolicy=Ye.default;var Ze=a(198);t.NoOpAudioVideoController=Ze.default;var et=a(169);t.NoOpDebugLogger=et.default;var tt=a(199);t.NoOpDeviceController=tt.default;var at=a(170);t.NoOpLogger=at.default;var nt=a(56);t.NoOpMediaStreamBroker=nt.default;var rt=a(200);t.NoOpTask=rt.default;var it=a(201);t.NoOpVideoElementFactory=it.default;var ot=a(202);t.NoVideoDownlinkBandwidthPolicy=ot.default;var ct=a(203);t.NoVideoUplinkBandwidthPolicy=ct.default;var st=a(67);t.None=st.default;var dt=a(204);t.OpenScreenSignalingSessionTask=dt.default;var ut=a(205);t.OpenScreenViewingConnectionTask=ut.default;var ft=a(104);t.OpenSignalingConnectionTask=ft.default;var lt=a(106);t.ParallelGroupTask=lt.default;var ht=a(54);t.PresentationBoxType=ht.default;var bt=a(159);t.PresentationElementFactory=bt.default;var pt=a(141);t.PromisedWebSocketClosureCode=pt.default;var vt=a(142);t.ProtocolScreenMessageDetail=vt.default;var mt=a(46);t.ProtocolScreenMessageDetailSerialization=mt.default;var gt=a(84);t.RealtimeState=gt.default;var yt=a(85);t.RealtimeVolumeIndicator=yt.default;var St=a(107);t.ReceiveAudioInputTask=St.default;var wt=a(108);t.ReceiveTURNCredentialsTask=wt.default;var kt=a(110);t.ReceiveVideoInputTask=kt.default;var It=a(111);t.ReceiveVideoStreamIndexTask=It.default;var Ct=a(140);t.ReconnectingPromisedWebSocket=Ct.default;var Tt=a(45);t.ReconnectingPromisedWebSocketFactory=Tt.default;var _t=a(102);t.ReconnectionHealthPolicy=_t.default;var Et=a(148);t.ResizeObserverAdapterFactory=Et.default;var Ot=a(146);t.RunnableTask=Ot.default;var Mt=a(75);t.SDPCandidateType=Mt.default;var xt=a(23);t.ScaleToFitPresentationPolicy=xt.default;var At=a(143);t.ScreenShareStream=At.default;var Pt=a(47);t.ScreenShareStreamFactory=Pt.default;var Dt=a(206);t.ScreenShareStreamingContainer=Dt.default;var Rt=a(48);t.ScreenShareStreamingEvent=Rt.default;var Vt=a(16);t.ScreenSharingMessageFlag=Vt.default;var Lt=a(49);t.ScreenSharingMessageFlagSerializer=Lt.default;var Ft=a(50);t.ScreenSharingMessageSerializer=Ft.default;var jt=a(11);t.ScreenSharingMessageType=jt.default;var Bt=a(51);t.ScreenSharingMessageTypeSerializer=Bt.default;var Nt=a(135);t.ScreenSharingSessionContainer=Nt.default;var Ut=a(151);t.ScreenSignalingSessionContainer=Ut.default;var Ht=a(52);t.ScreenSignalingSessionEventType=Ht.default;var Wt=a(155);t.ScreenViewingMessageDispatcher=Wt.default;var Gt=a(53);t.ScreenViewingPacketType=Gt.default;var zt=a(167);t.ScreenViewingSessionConnectionRequest=zt.default;var Kt=a(112);t.SerialGroupTask=Kt.default;var Jt=a(33);t.SessionStateControllerAction=Jt.default;var qt=a(87);t.SessionStateControllerDeferPriority=qt.default;var $t=a(34);t.SessionStateControllerState=$t.default;var Xt=a(35);t.SessionStateControllerTransitionResult=Xt.default;var Qt=a(113);t.SetLocalDescriptionTask=Qt.default;var Yt=a(114);t.SetRemoteDescriptionTask=Yt.default;var Zt=a(78);t.SignalingAndMetricsConnectionMonitor=Zt.default;var ea=a(105);t.SignalingClientConnectionRequest=ea.default;var ta=a(89);t.SignalingClientEvent=ta.default;var aa=a(3);t.SignalingClientEventType=aa.default;var na=a(98);t.SignalingClientJoin=na.default;var ra=a(116);t.SignalingClientSubscribe=ra.default;var ia=a(68);t.Some=ia.default;var oa=a(93);t.StreamMetricReport=oa.default;var ca=a(115);t.SubscribeAndReceiveSubscribeAckTask=ca.default;var sa=a(24);t.TaskStatus=sa.default;var da=a(5);t.TimeoutScheduler=da.default;var ua=a(117);t.TimeoutTask=ua.default;var fa=a(103);t.UnusableAudioWarningConnectionHealthPolicy=fa.default;var la=a(20);t.Versioning=la.default;var ha=a(207);t.VideoAdaptiveSubscribePolicy=ha.default;var ba=a(17);t.VideoLogEvent=ba.default;var pa=a(70);t.VideoTileState=pa.default;var va=a(138);t.WebMMediaRecording=va.default;var ma=a(137);t.WebMMediaRecordingFactory=ma.default;var ga=a(36);t.WebSocketReadyState=ga.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(7),r=function(){function e(e){this.selfAttendeeId=e,this.optimalReceiveSet=new n.default,this.subscribedReceiveSet=new n.default}return e.prototype.updateIndex=function(e){this.optimalReceiveSet=this.calculateOptimalReceiveSet(e)},e.prototype.updateAvailableBandwidth=function(e){},e.prototype.updateCalculatedOptimalReceiveSet=function(){},e.prototype.wantsResubscribe=function(){return!this.subscribedReceiveSet.equal(this.optimalReceiveSet)},e.prototype.chooseSubscriptions=function(){return this.subscribedReceiveSet=this.optimalReceiveSet.clone(),this.subscribedReceiveSet.clone()},e.prototype.calculateOptimalReceiveSet=function(e){return e.highestQualityStreamFromEachGroupExcludingSelf(this.selfAttendeeId)},e}();t.default=r},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(17),s=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="AttachMediaInputTask",a}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i,s,d=this;return o(this,(function(o){switch(o.label){case 0:return(e=this.context.transceiverController).setPeer(this.context.peer),e.setupLocalTransceivers(),(t=this.context.activeAudioInput)?(a=t.getAudioTracks(),this.context.browserBehavior.requiresUnifiedPlan()?(this.context.logger.info("attaching audio track to peer connection (unified-plan)"),[4,e.setAudioInput(a.length?a[0]:null)]):[3,2]):[3,4];case 1:return o.sent(),[3,3];case 2:this.context.logger.info("attaching audio track to peer connection (plan-b)"),n=this.context.peer.getSenders(),t.getAudioTracks().forEach((function(e){n.find((function(t){return t.track.id===e.id}))||(d.context.localAudioSender=d.context.peer.addTrack(e,t))})),o.label=3;case 3:return[3,6];case 4:return[4,e.setAudioInput(null)];case 5:o.sent(),this.context.logger.warn("no audio track"),o.label=6;case 6:return(r=this.context.activeVideoInput)?(i=r.getVideoTracks(),s=i.length?i[0]:null,this.context.browserBehavior.requiresUnifiedPlan()?(this.context.logger.info("attaching video track to peer connection (unified-plan)"),[4,e.setVideoInput(s)]):[3,8]):[3,10];case 7:return o.sent(),[3,9];case 8:this.context.logger.info("attaching video track to peer connection (plan-b)"),this.context.peer.getSenders().find((function(e){return e.track&&e.track.id===i[0].id}))||(this.context.localVideoSender&&(this.context.peer.removeTrack(this.context.localVideoSender),this.context.localVideoSender=null),this.context.localVideoSender=this.context.peer.addTrack(i[0],r)),o.label=9;case 9:return s&&(this.context.statsCollector.logVideoEvent(c.default.InputAttached,this.context.videoDeviceInformation),this.context.videoInputAttachedTimestampMs=Date.now()),[3,12];case 10:return[4,e.setVideoInput(null)];case 11:o.sent(),this.context.logger.info("no video track"),this.context.localVideoSender&&(this.context.logger.info("removing track from peer"),this.context.peer.removeTrack(this.context.localVideoSender),this.context.localVideoSender=null),o.label=12;case 12:return this.context.videoSubscriptions=e.updateVideoTransceivers(this.context.videoStreamIndex,this.context.videosToReceive),[2]}}))}))},t}(a(0).default);t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.logger=null,this.browserBehavior=null,this.signalingClient=null,this.meetingSessionConfiguration=null,this.peer=null,this.previousSdpOffer=null,this.sdpOfferInit=null,this.audioVideoController=null,this.realtimeController=null,this.videoTileController=null,this.mediaStreamBroker=null,this.audioMixController=null,this.activeAudioInput=null,this.activeVideoInput=null,this.transceiverController=null,this.indexFrame=null,this.iceCandidates=[],this.iceCandidateHandler=null,this.screenSharingSession=null,this.sdpAnswer=null,this.turnCredentials=null,this.reconnectController=null,this.removableObservers=[],this.videoStreamIndex=null,this.videoDownlinkBandwidthPolicy=null,this.videoUplinkBandwidthPolicy=null,this.lastKnownVideoAvailability=null,this.localVideoSender=null,this.localAudioSender=null,this.videoCaptureAndEncodeParameter=null,this.videosToReceive=null,this.videoSubscriptions=null,this.videosPaused=null,this.videoDuplexMode=null,this.volumeIndicatorAdapter=null,this.statsCollector=null,this.connectionMonitor=null,this.videoInputAttachedTimestampMs=0,this.audioDeviceInformation={},this.videoDeviceInformation={}};t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="CleanRestartedSessionTask",a}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){return this.context.peer&&this.context.peer.close(),this.context.transceiverController.reset(),this.context.localVideoSender=null,this.context.peer=null,this.context.iceCandidateHandler=null,this.context.iceCandidates=[],this.context.previousSdpOffer=null,[2]}))}))},t}(a(0).default);t.default=c},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=a(3),d=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="CleanStoppedSessionTask",a.taskCanceler=null,a}return r(t,e),t.prototype.cancel=function(){this.taskCanceler&&(this.taskCanceler.cancel(),this.taskCanceler=null)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r;return o(this,(function(i){switch(i.label){case 0:return i.trys.push([0,3,4,5]),this.context.signalingClient.ready()?(this.context.signalingClient.closeConnection(),[4,this.receiveWebSocketClosedEvent()]):[3,2];case 1:i.sent(),i.label=2;case 2:return[3,5];case 3:throw i.sent();case 4:try{for(e=c(this.context.removableObservers),t=e.next();!t.done;t=e.next())t.value.removeObserver()}catch(e){n={error:e}}finally{try{t&&!t.done&&(r=e.return)&&r.call(e)}finally{if(n)throw n.error}}return this.context.statsCollector.stop(),this.context.statsCollector=null,this.context.connectionMonitor.stop(),this.context.connectionMonitor=null,this.context.peer&&this.context.peer.close(),this.context.peer=null,this.context.localVideoSender=null,this.context.sdpAnswer=null,this.context.sdpOfferInit=null,this.context.indexFrame=null,this.context.iceCandidateHandler=null,this.context.iceCandidates=[],this.context.turnCredentials=null,this.context.videoSubscriptions=null,this.context.transceiverController.reset(),this.context.mediaStreamBroker.releaseMediaStream(this.context.activeAudioInput),this.context.activeAudioInput=null,this.context.mediaStreamBroker.releaseMediaStream(this.context.activeVideoInput),this.context.activeVideoInput=null,this.context.realtimeController.realtimeSetLocalAudioInput(null),(a=this.context.videoTileController.getLocalVideoTile())&&a.bindVideoStream("",!0,null,null,null,null),this.context.videoTileController.removeAllVideoTiles(),[7];case 5:return[2]}}))}))},t.prototype.receiveWebSocketClosedEvent=function(){var e=this;return new Promise((function(t,a){var n=new(function(){function e(e){this.signalingClient=e}return e.prototype.cancel=function(){this.signalingClient.removeObserver(this),a(new Error("CleanStoppedSessionTask got canceled while waiting for the WebSocket closed event"))},e.prototype.handleSignalingClientEvent=function(e){e.type===s.default.WebSocketClosed&&(this.signalingClient.removeObserver(this),t())},e}())(e.context.signalingClient);e.taskCanceler=n,e.context.signalingClient.registerObserver(n)}))},t}(a(0).default);t.default=d},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.connectionStartTimestampMs=0,this.consecutiveStatsWithNoPackets=0,this.lastPacketLossInboundTimestampMs=0,this.lastGoodSignalTimestampMs=0,this.lastWeakSignalTimestampMs=0,this.lastNoSignalTimestampMs=0,this.consecutiveMissedPongs=0,this.packetsReceivedInLastMinute=[],this.fractionPacketsLostInboundInLastMinute=[],this.audioSpeakerDelayMs=0,this.connectionStartTimestampMs=Date.now(),this.lastGoodSignalTimestampMs=Date.now()}return e.isTimestampRecent=function(e,t){return Date.now()<e+t},e.prototype.setConnectionStartTime=function(){this.connectionStartTimestampMs=Date.now(),this.lastGoodSignalTimestampMs=Date.now()},e.prototype.reset=function(){this.connectionStartTimestampMs=0,this.consecutiveStatsWithNoPackets=0,this.lastPacketLossInboundTimestampMs=0,this.lastGoodSignalTimestampMs=0,this.lastWeakSignalTimestampMs=0,this.lastNoSignalTimestampMs=0,this.consecutiveMissedPongs=0,this.packetsReceivedInLastMinute=[],this.fractionPacketsLostInboundInLastMinute=[],this.audioSpeakerDelayMs=0,this.connectionStartTimestampMs=Date.now(),this.lastGoodSignalTimestampMs=Date.now()},e.prototype.isConnectionStartRecent=function(t){return e.isTimestampRecent(this.connectionStartTimestampMs,t)},e.prototype.isLastPacketLossRecent=function(t){return e.isTimestampRecent(this.lastPacketLossInboundTimestampMs,t)},e.prototype.isGoodSignalRecent=function(t){return e.isTimestampRecent(this.lastGoodSignalTimestampMs,t)},e.prototype.isWeakSignalRecent=function(t){return e.isTimestampRecent(this.lastWeakSignalTimestampMs,t)},e.prototype.isNoSignalRecent=function(t){return e.isTimestampRecent(this.lastNoSignalTimestampMs,t)},e.prototype.clone=function(){var t=new e;return t.connectionStartTimestampMs=this.connectionStartTimestampMs,t.consecutiveStatsWithNoPackets=this.consecutiveStatsWithNoPackets,t.lastPacketLossInboundTimestampMs=this.lastPacketLossInboundTimestampMs,t.lastGoodSignalTimestampMs=this.lastGoodSignalTimestampMs,t.lastWeakSignalTimestampMs=this.lastWeakSignalTimestampMs,t.lastNoSignalTimestampMs=this.lastNoSignalTimestampMs,t.consecutiveMissedPongs=this.consecutiveMissedPongs,t.packetsReceivedInLastMinute=this.packetsReceivedInLastMinute.slice(0),t.fractionPacketsLostInboundInLastMinute=this.fractionPacketsLostInboundInLastMinute.slice(0),t.audioSpeakerDelayMs=this.audioSpeakerDelayMs,t},e.prototype.setConsecutiveMissedPongs=function(e){this.consecutiveMissedPongs=e},e.prototype.setConsecutiveStatsWithNoPackets=function(e){this.consecutiveStatsWithNoPackets=e},e.prototype.setLastPacketLossInboundTimestampMs=function(e){this.lastPacketLossInboundTimestampMs=e},e.prototype.setLastNoSignalTimestampMs=function(e){this.lastNoSignalTimestampMs=e},e.prototype.setLastWeakSignalTimestampMs=function(e){this.lastWeakSignalTimestampMs=e},e.prototype.setLastGoodSignalTimestampMs=function(e){this.lastGoodSignalTimestampMs=e},e.prototype.setAudioSpeakerDelayMs=function(e){this.audioSpeakerDelayMs=e},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.minHealth=0,this.maxHealth=1,this.initialHealth=1,this.connectionUnhealthyThreshold=10,this.noSignalThresholdTimeMs=1e4,this.connectionWaitTimeMs=1e4,this.zeroBarsNoSignalTimeMs=5e3,this.oneBarWeakSignalTimeMs=5e3,this.twoBarsTimeMs=5e3,this.threeBarsTimeMs=1e4,this.fourBarsTimeMs=2e4,this.fiveBarsTimeMs=6e4,this.cooldownTimeMs=6e4,this.pastSamplesToConsider=15,this.goodSignalTimeMs=15e3,this.fractionalLoss=.5,this.packetsExpected=50,this.maximumTimesToWarn=2,this.missedPongsLowerThreshold=1,this.missedPongsUpperThreshold=2,this.maximumAudioDelayMs=1e3,this.maximumAudioDelayDataPoints=10};t.default=n},function(e,t,a){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},r=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(66),c=function(){function e(e){this.logger=e}return Object.defineProperty(e.prototype,"mediaStream",{get:function(){return this._mediaStream},set:function(e){this._mediaStream=e},enumerable:!0,configurable:!0}),e.prototype.acquireAudioInputStream=function(){return r(this,void 0,void 0,(function(){return i(this,(function(e){return 0===this._mediaStream.getAudioTracks().length?[2,o.default.synthesizeAudioDevice(0)]:[2,this._mediaStream]}))}))},e.prototype.acquireVideoInputStream=function(){return r(this,void 0,void 0,(function(){return i(this,(function(e){return[2,this._mediaStream]}))}))},e.prototype.releaseMediaStream=function(e){this.logger.warn("release media stream called")},e.prototype.acquireDisplayInputStream=function(e){return r(this,void 0,void 0,(function(){return i(this,(function(t){return e&&e.video&&e.video.mandatory&&e.video.mandatory.chromeMediaSource&&e.video.mandatory.chromeMediaSourceId?[2,navigator.mediaDevices.getUserMedia(e)]:[2,navigator.mediaDevices.getDisplayMedia(e)]}))}))},e.prototype.bindToAudioVideoController=function(e){throw new Error("unsupported")},e.prototype.acquireScreenCaptureDisplayInputStream=function(e){return r(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.acquireDisplayInputStream(this.screenCaptureDisplayMediaConstraints(e))]}))}))},e.prototype.screenCaptureDisplayMediaConstraints=function(e){return{audio:!1,video:n(n({},!e&&{frameRate:{max:3}}),e&&{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:e,maxFrameRate:3}})}},e.prototype.toggleMediaStream=function(e){var t=!1;if(this.mediaStream)for(var a=0;a<this.mediaStream.getTracks().length;a++)this.mediaStream.getTracks()[a].enabled!==e&&(this.mediaStream.getTracks()[a].enabled=e,t=!0);return t},e.prototype.cleanup=function(){if(this.mediaStream)for(var e=0;e<this.mediaStream.getTracks().length;e++)this.mediaStream.getTracks()[e].stop();this.mediaStream=null},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=a(1),c=a(8),s=a(9),d=a(29),u=a(71),f=a(72),l=function(){function e(t){var a=this;this.logger=t,this.deviceInfoCache=null,this.activeDevices={audio:null,video:null},this.audioOutputDeviceId=null,this.deviceChangeObservers=new Set,this.deviceLabelTrigger=function(){return navigator.mediaDevices.getUserMedia({audio:!0,video:!0})},this.audioInputContext=null,this.audioInputDestinationNode=null,this.audioInputSourceNode=null,this.videoWidth=e.defaultVideoWidth,this.videoHeight=e.defaultVideoHeight,this.videoFrameRate=e.defaultVideoFrameRate,this.videoMaxBandwidthKbps=e.defaultVideoMaxBandwidthKbps,this.useWebAudio=!1,this.alreadyHandlingDeviceChange=!1,navigator.mediaDevices.addEventListener("devicechange",(function(){return n(a,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return[4,this.handleDeviceChange()];case 1:return e.sent(),[2]}}))}))}))}return e.prototype.listAudioInputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.listDevicesOfKind("audioinput")];case 1:return e=t.sent(),this.trace("listAudioInputDevices",null,e),[2,e]}}))}))},e.prototype.listVideoInputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.listDevicesOfKind("videoinput")];case 1:return e=t.sent(),this.trace("listVideoInputDevices",null,e),[2,e]}}))}))},e.prototype.listAudioOutputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.listDevicesOfKind("audiooutput")];case 1:return e=t.sent(),this.trace("listAudioOutputDevices",null,e),[2,e]}}))}))},e.prototype.chooseAudioInputDevice=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(a){switch(a.label){case 0:return[4,this.chooseInputDevice("audio",e,!1)];case 1:return t=a.sent(),this.trace("chooseAudioInputDevice",e,u.default[t]),[2,t]}}))}))},e.prototype.chooseVideoInputDevice=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(a){switch(a.label){case 0:return this.updateMaxBandwidthKbps(),[4,this.chooseInputDevice("video",e,!1)];case 1:return t=a.sent(),this.trace("chooseVideoInputDevice",e,u.default[t]),[2,t]}}))}))},e.prototype.chooseAudioOutputDevice=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){return this.audioOutputDeviceId=e,this.bindAudioOutput(),this.trace("chooseAudioOutputDevice",e,null),[2]}))}))},e.prototype.enableWebAudio=function(e){this.useWebAudio=e},e.prototype.addDeviceChangeObserver=function(e){this.logger.info("adding device change observer"),this.deviceChangeObservers.add(e),this.trace("addDeviceChangeObserver")},e.prototype.removeDeviceChangeObserver=function(e){this.logger.info("removing device change observer"),this.deviceChangeObservers.delete(e),this.trace("removeDeviceChangeObserver")},e.prototype.createAnalyserNodeForAudioInput=function(){if(!this.activeDevices.audio)return null;var t=e.createAudioContext(),a=t.createAnalyser();return t.createMediaStreamSource(this.activeDevices.audio.stream).connect(a),this.trace("createAnalyserNodeForAudioInput"),a},e.prototype.startVideoPreviewForVideoInput=function(e){var t=this;if(!this.activeDevices.video)return this.logger.warn("cannot bind video preview since video input device has not been chosen"),void this.trace("startVideoPreviewForVideoInput",e.id);this.releaseMediaStream(e.srcObject),d.default.disconnectVideoStreamFromVideoElement(e,!1),navigator.mediaDevices.getUserMedia(this.activeDevices.video.constraints).then((function(t){d.default.connectVideoStreamToVideoElement(t,e,!0)})).catch((function(a){t.logger.warn("Unable to reacquire video stream for preview to element "+e.id+": "+a)})),this.trace("startVideoPreviewForVideoInput",e.id)},e.prototype.stopVideoPreviewForVideoInput=function(e){var t=e.srcObject;t&&(this.releaseMediaStream(t),d.default.disconnectVideoStreamFromVideoElement(e,!1)),this.activeDevices.video&&this.releaseMediaStream(this.activeDevices.video.stream),this.trace("stopVideoPreviewForVideoInput",e.id)},e.prototype.setDeviceLabelTrigger=function(e){this.deviceLabelTrigger=e,this.trace("setDeviceLabelTrigger")},e.prototype.mixIntoAudioInput=function(e){var t=null;return this.enableWebAudio?(this.ensureAudioInputContext(),(t=this.audioInputContext.createMediaStreamSource(e)).connect(this.audioInputDestinationNode)):this.logger.warn("WebAudio is not enabled, mixIntoAudioInput will not work"),this.trace("mixIntoAudioInput",e.id),t},e.prototype.chooseVideoInputQuality=function(e,t,a,n){this.videoWidth=e,this.videoHeight=t,this.videoFrameRate=a,this.videoMaxBandwidthKbps=n,this.updateMaxBandwidthKbps()},e.prototype.acquireAudioInputStream=function(){return n(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return[4,this.acquireInputStream("audio")];case 1:return[2,e.sent()]}}))}))},e.prototype.acquireVideoInputStream=function(){return n(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return[4,this.acquireInputStream("video")];case 1:return[2,e.sent()]}}))}))},e.prototype.acquireDisplayInputStream=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){return e&&e.video&&e.video.mandatory&&e.video.mandatory.chromeMediaSource&&e.video.mandatory.chromeMediaSourceId?[2,navigator.mediaDevices.getUserMedia(e)]:[2,navigator.mediaDevices.getDisplayMedia(e)]}))}))},e.prototype.releaseMediaStream=function(e){var t,a;if(e){var n=null;this.audioInputDestinationNode&&e===this.audioInputDestinationNode.stream?(this.logger.info("stopping audio track"),n=this.audioInputSourceNode.mediaStream.getTracks(),this.audioInputSourceNode.disconnect()):n=e.getTracks();try{for(var r=i(n),o=r.next();!o.done;o=r.next()){var c=o.value;this.logger.info("stopping "+c.kind+" track"),c.stop()}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}for(var s in this.activeDevices)this.activeDevices[s]&&this.activeDevices[s].stream===e&&(this.activeDevices[s]=null)}},e.prototype.bindToAudioVideoController=function(e){this.boundAudioVideoController=e,this.bindAudioOutput()},e.createEmptyAudioDevice=function(){return e.synthesizeAudioDevice(0)},e.createEmptyVideoDevice=function(){return e.synthesizeVideoDevice("black")},e.synthesizeAudioDevice=function(t){var a=e.createAudioContext(),n=a.createMediaStreamDestination();if(t){var r=a.createGain();r.gain.value=.1,r.connect(n);var i=a.createOscillator();i.frequency.value=t,i.connect(r),i.start()}else{var o=a.createBufferSource();o.buffer=a.createBuffer(1,5*a.sampleRate,a.sampleRate),o.buffer.getChannelData(0)[0]=3e-4,o.loop=!0,o.connect(n),o.start()}return n.addEventListener("ended",(function(){a.close()})),n.stream},e.synthesizeVideoDevice=function(t){var a=document.createElement("canvas");a.width=480,a.height=a.width/16*9;var n=new s.default(1e3),r=a.getContext("2d");n.start((function(){"smpte"===t?e.fillSMPTEColorBars(a,0):(r.fillStyle=t,r.fillRect(0,0,a.width,a.height))}));var i=a.captureStream(5)||null;return i&&i.getVideoTracks()[0].addEventListener("ended",(function(){n.stop()})),i},e.fillSMPTEColorBars=function(e,t){for(var a=e.width,n=e.height,r=2*n/3,i=3*n/4,o=n,c=["#c0c0c0","#c0c000","#00c0c0","#00c000","#c000c0","#c00000","#0000c0"],s=["#0000c0","#000000","#c000c0","#000000","#00c0c0","#000000","#c0c0c0"],d=["#00214c","#ffffff","#32006a","#131313","#090909","#131313","#1d1d1d","#131313"],u=[0*a,1*a/4*(5/7),2*a/4*(5/7),3*a/4*(5/7),a*(5/7),a*(5/7+1/21),a*(5/7+2/21),a*(6/7),1*a],f=a/c.length,l=e.getContext("2d"),h=0;h<c.length;h++)l.fillStyle=c[h],l.fillRect(t+h*f,0,f,r),l.fillStyle=s[h],l.fillRect(t+h*f,r,f,i-r);for(h=0;h<d.length;h++)l.fillStyle=d[h],l.fillRect(t+u[h],i,u[h+1]-u[h],o-i)},e.prototype.updateMaxBandwidthKbps=function(){this.boundAudioVideoController&&this.boundAudioVideoController.setVideoMaxBandwidthKbps(this.videoMaxBandwidthKbps)},e.prototype.listDevicesOfKind=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return null!==this.deviceInfoCache?[3,2]:[4,this.updateDeviceInfoCacheFromBrowser()];case 1:t.sent(),t.label=2;case 2:return[2,this.listCachedDevicesOfKind(e)]}}))}))},e.prototype.updateDeviceInfoCacheFromBrowser=function(){return n(this,void 0,void 0,(function(){var e,t,a,n,o,c,s,d,u,f,l;return r(this,(function(r){switch(r.label){case 0:return!MediaDeviceInfo?(this.deviceInfoCache=[],[2]):[4,navigator.mediaDevices.enumerateDevices()];case 1:e=r.sent(),t=!0;try{for(a=i(e),n=a.next();!n.done;n=a.next())if(!n.value.label){t=!1;break}}catch(e){d={error:e}}finally{try{n&&!n.done&&(u=a.return)&&u.call(a)}finally{if(d)throw d.error}}if(t)return[3,6];r.label=2;case 2:return r.trys.push([2,5,,6]),this.logger.info("attempting to trigger media device labels since they are hidden"),[4,this.deviceLabelTrigger()];case 3:return o=r.sent(),[4,navigator.mediaDevices.enumerateDevices()];case 4:e=r.sent();try{for(c=i(o.getTracks()),s=c.next();!s.done;s=c.next())s.value.stop()}catch(e){f={error:e}}finally{try{s&&!s.done&&(l=c.return)&&l.call(c)}finally{if(f)throw f.error}}return[3,6];case 5:return r.sent(),this.logger.info("unable to get media device labels"),[3,6];case 6:return this.deviceInfoCache=e,[2]}}))}))},e.prototype.listCachedDevicesOfKind=function(e){var t,a,n=[];try{for(var r=i(this.deviceInfoCache),o=r.next();!o.done;o=r.next()){var c=o.value;c.kind===e&&n.push(c)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}return n},e.prototype.handleDeviceChange=function(){return n(this,void 0,void 0,(function(){var e,t,a,n,i,s,d=this;return r(this,(function(r){switch(r.label){case 0:return null===this.deviceInfoCache?[2]:this.alreadyHandlingDeviceChange?((new c.default).start((function(){d.handleDeviceChange()})),[2]):(this.alreadyHandlingDeviceChange=!0,e=this.listCachedDevicesOfKind("audioinput"),t=this.listCachedDevicesOfKind("videoinput"),a=this.listCachedDevicesOfKind("audiooutput"),[4,this.updateDeviceInfoCacheFromBrowser()]);case 1:return r.sent(),n=this.listCachedDevicesOfKind("audioinput"),i=this.listCachedDevicesOfKind("videoinput"),s=this.listCachedDevicesOfKind("audiooutput"),this.forEachObserver((function(r){d.areDeviceListsEqual(e,n)||o.default.of(r.audioInputsChanged).map((function(e){return e.bind(r)(n)})),d.areDeviceListsEqual(t,i)||o.default.of(r.videoInputsChanged).map((function(e){return e.bind(r)(i)})),d.areDeviceListsEqual(a,s)||o.default.of(r.audioOutputsChanged).map((function(e){return e.bind(r)(s)}))})),this.alreadyHandlingDeviceChange=!1,[2]}}))}))},e.prototype.forEachObserver=function(e){var t,a,n=this,r=function(t){(new c.default).start((function(){n.deviceChangeObservers.has(t)&&e(t)}))};try{for(var o=i(this.deviceChangeObservers),s=o.next();!s.done;s=o.next()){r(s.value)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}},e.prototype.areDeviceListsEqual=function(e,t){return JSON.stringify(e.map((function(e){return JSON.stringify(e)})).sort())===JSON.stringify(t.map((function(e){return JSON.stringify(e)})).sort())},e.prototype.deviceAsMediaStream=function(e){return e&&e.id?e:null},e.prototype.chooseInputDevice=function(t,a,i){return n(this,void 0,void 0,(function(){var n,o,c,s,d,l,h,b,p=this;return r(this,(function(r){switch(r.label){case 0:if(null===a&&"video"===t)return this.activeDevices[t]&&(this.releaseMediaStream(this.activeDevices[t].stream),delete this.activeDevices[t]),[2,u.default.PermissionGrantedByBrowser];if(n=this.calculateMediaStreamConstraints(t,a),this.activeDevices[t]&&this.activeDevices[t].matchesConstraints(n)&&this.activeDevices[t].stream.active)return this.logger.info("reusing existing "+t+" device"),[2,u.default.PermissionGrantedPreviously];o=this.activeDevices[t]?this.activeDevices[t].stream:null,"audio"===t&&this.releaseMediaStream(o),c=Date.now(),r.label=1;case 1:return r.trys.push([1,6,,7]),this.logger.info("requesting new "+t+" device with constraint "+n),d=this.deviceAsMediaStream(a),"audio"!==t||null!==a?[3,2]:((s=new f.default).stream=e.createEmptyAudioDevice(),s.constraints=null,[3,5]);case 2:return d?(this.logger.info("using media stream "+d.id+" for "+t+" device"),(s=new f.default).stream=d,s.constraints=n,[3,5]):[3,3];case 3:return[4,this.getDeviceFromBrowser(n)];case 4:(s=r.sent()).stream.getTracks()[0].addEventListener("ended",(function(){p.activeDevices[t].stream===s.stream&&(p.logger.warn(t+" input device which was active is no longer available, resetting to null device"),p.chooseInputDevice(t,null,!1))})),r.label=5;case 5:return[3,7];case 6:return l=r.sent(),this.logger.error("failed to get "+t+" device for constraints "+JSON.stringify(n)+": "+l.message),[2,Date.now()-c<e.permissionDeniedOriginDetectionThresholdMs?u.default.PermissionDeniedByBrowser:u.default.PermissionDeniedByUser];case 7:return this.logger.info("got "+t+" device for constraints "+JSON.stringify(n)),h="video"===t&&!i&&this.boundAudioVideoController&&this.boundAudioVideoController.videoTileController.hasStartedLocalVideoTile(),this.activeDevices[t]=s,h?(this.logger.info("restarting local video to switch to new device"),this.boundAudioVideoController.restartLocalVideo((function(){o&&o.active&&(p.logger.warn("previous media stream is not stopped during restart video"),p.releaseMediaStream(o))})),[3,13]):[3,8];case 8:return"video"!==t?[3,9]:(this.releaseMediaStream(o),[3,13]);case 9:return this.useWebAudio?(this.attachAudioInputStreamToAudioContext(this.activeDevices[t].stream),[3,13]):[3,10];case 10:return r.trys.push([10,12,,13]),[4,this.boundAudioVideoController.restartLocalAudio((function(){}))];case 11:return r.sent(),[3,13];case 12:return b=r.sent(),this.logger.info("cannot replace audio track due to: "+b.message),[3,13];case 13:return[2,Date.now()-c<e.permissionGrantedOriginDetectionThresholdMs?u.default.PermissionGrantedByBrowser:u.default.PermissionGrantedByUser]}}))}))},e.prototype.bindAudioOutput=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){return this.boundAudioVideoController?(e=this.deviceInfoFromDeviceId("audiooutput",this.audioOutputDeviceId),this.boundAudioVideoController.audioMixController.bindAudioDevice(e),[2]):[2]}))}))},e.prototype.calculateMediaStreamConstraints=function(t,a){var n={};""===a&&(a=null);var r=this.deviceAsMediaStream(a);return null===a?null:("string"==typeof a?n.deviceId={exact:a}:r?n.streamId=r.id:n=a,"video"===t&&(n.width=n.width||this.videoWidth,n.height=n.height||this.videoHeight,n.frameRate=n.frameRate||this.videoFrameRate),"audio"===t&&e.supportSampleRateConstraint()&&(n.sampleRate={ideal:e.defaultSampleRate}),"audio"===t&&e.supportSampleSizeConstraint()&&(n.sampleSize={ideal:e.defaultSampleSize}),"audio"===t&&e.supportChannelCountConstraint()&&(n.channelCount={ideal:e.defaultChannelCount}),"audio"===t&&(n.echoCancellation=!0,n.googEchoCancellation=!0,n.googAutoGainControl=!0,n.googNoiseSuppression=!0,n.googHighpassFilter=!0,n.googNoiseSuppression2=!0,n.googEchoCancellation2=!0,n.googAutoGainControl2=!0),"audio"===t?{audio:n}:{video:n})},e.prototype.getDeviceFromBrowser=function(e){return n(this,void 0,void 0,(function(){var t,a;return r(this,(function(n){switch(n.label){case 0:return t=new f.default,a=t,[4,navigator.mediaDevices.getUserMedia(e)];case 1:return a.stream=n.sent(),t.constraints=e,[4,this.handleDeviceChange()];case 2:return n.sent(),[2,t]}}))}))},e.prototype.deviceInfoFromDeviceId=function(e,t){var a,n;if(null===this.deviceInfoCache)return null;try{for(var r=i(this.deviceInfoCache),o=r.next();!o.done;o=r.next()){var c=o.value;if(c.kind===e&&c.deviceId===t)return c}}catch(e){a={error:e}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(a)throw a.error}}return null},e.prototype.acquireInputStream=function(e){return n(this,void 0,void 0,(function(){var t,a,n;return r(this,(function(r){switch(r.label){case 0:if("audio"===e&&this.useWebAudio)return this.ensureAudioInputContext(),[2,this.audioInputDestinationNode.stream];if(t=null,this.activeDevices[e])this.logger.info("checking whether existing "+e+" device can be reused"),a=this.activeDevices[e],t=a.constraints?a.constraints[e]:null;else{if("audio"!==e)throw this.logger.error("no "+e+" device chosen, stopping local video tile"),this.boundAudioVideoController.videoTileController.stopLocalVideoTile(),new Error("no "+e+" device chosen, stopping local video tile");this.logger.info("no "+e+" device chosen, creating empty "+e+" device")}return[4,this.chooseInputDevice(e,t,!0)];case 1:if((n=r.sent())===u.default.PermissionDeniedByBrowser||n===u.default.PermissionDeniedByUser)throw this.logger.error("unable to acquire "+e+" device"),new Error("unable to acquire "+e+" device");return[2,this.activeDevices[e].stream]}}))}))},e.prototype.ensureAudioInputContext=function(){this.audioInputContext||(this.audioInputContext=e.createAudioContext(),this.audioInputDestinationNode=this.audioInputContext.createMediaStreamDestination())},e.prototype.attachAudioInputStreamToAudioContext=function(e){this.ensureAudioInputContext(),this.audioInputSourceNode&&this.audioInputSourceNode.disconnect(),this.audioInputSourceNode=this.audioInputContext.createMediaStreamSource(e),this.audioInputSourceNode.connect(this.audioInputDestinationNode)},e.createAudioContext=function(){var t={};return e.supportSampleRateConstraint()&&(t.sampleRate=e.defaultSampleRate),new(window.AudioContext||window.webkitAudioContext)(t)},e.supportSampleRateConstraint=function(){return!!navigator.mediaDevices.getSupportedConstraints().sampleRate},e.supportSampleSizeConstraint=function(){return!!navigator.mediaDevices.getSupportedConstraints().sampleSize},e.supportChannelCountConstraint=function(){return!!navigator.mediaDevices.getSupportedConstraints().channelCount},e.prototype.trace=function(e,t,a){var n="API/DefaultDeviceController/"+e;void 0!==t&&(n+=" "+JSON.stringify(t)),void 0!==a&&(n+=" -> "+JSON.stringify(a)),this.logger.info(n)},e.permissionGrantedOriginDetectionThresholdMs=1e3,e.permissionDeniedOriginDetectionThresholdMs=500,e.defaultVideoWidth=960,e.defaultVideoHeight=540,e.defaultVideoFrameRate=15,e.defaultVideoMaxBandwidthKbps=1400,e.defaultSampleRate=48e3,e.defaultSampleSize=16,e.defaultChannelCount=1,e}();t.default=l},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=function(){function e(){this.isSome=!1,this.isNone=!0}return e.prototype.get=function(){throw new Error("value is null")},e.prototype.getOrElse=function(e){return e},e.prototype.map=function(t){return new e},e.prototype.flatMap=function(t){return new e},e.prototype.defaulting=function(e){return n.default.of(this.getOrElse(e))},e.of=function(){return new e},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=function(){function e(e){this.value=e,this.isSome=!0,this.isNone=!1}return e.prototype.map=function(e){return n.default.of(e(this.value))},e.prototype.flatMap=function(e){return e(this.value)},e.prototype.get=function(){return this.value},e.prototype.getOrElse=function(e){return this.value},e.prototype.defaulting=function(e){return n.default.of(this.getOrElse(e))},e.of=function(t){if(null==t)throw new Error("value is ${value}");return new e(t)},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(18),r=function(){function e(e){this._id=e}return e.prototype.id=function(){return this._id},e.prototype.base=function(){return""===this._id?"":this._id.split(e.MODALITY_SEPARATOR)[0]},e.prototype.modality=function(){if(!this._id)return"";var t=this._id.split(e.MODALITY_SEPARATOR);return 2===t.length?t[1]:""},e.prototype.hasModality=function(e){return""!==e&&this.modality()===e},e.prototype.withModality=function(t){var a=new e(this.base()+e.MODALITY_SEPARATOR+t);return""===t||""===this.base()||new e(a._id).modality()!==t?new e(this.base()):a},e.MODALITY_SEPARATOR=n.default.Modality[0],e.MODALITY_CONTENT=n.default.Modality.substr(1),e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.tileId=null,this.localTile=!1,this.localTileStarted=!1,this.isContent=!1,this.active=!1,this.paused=!1,this.poorConnection=!1,this.boundAttendeeId=null,this.boundVideoStream=null,this.boundVideoElement=null,this.nameplate=null,this.videoStreamContentWidth=null,this.videoStreamContentHeight=null,this.videoElementCSSWidthPixels=null,this.videoElementCSSHeightPixels=null,this.devicePixelRatio=0,this.videoElementPhysicalWidthPixels=null,this.videoElementPhysicalHeightPixels=null,this.streamId=null}return e.prototype.clone=function(){var t=new e;return t.tileId=this.tileId,t.localTile=this.localTile,t.isContent=this.isContent,t.active=this.active,t.paused=this.paused,t.poorConnection=this.poorConnection,t.boundAttendeeId=this.boundAttendeeId,t.boundVideoStream=this.boundVideoStream,t.boundVideoElement=this.boundVideoElement,t.nameplate=this.nameplate,t.videoStreamContentWidth=this.videoStreamContentWidth,t.videoStreamContentHeight=this.videoStreamContentHeight,t.videoElementCSSWidthPixels=this.videoElementCSSWidthPixels,t.videoElementCSSHeightPixels=this.videoElementCSSHeightPixels,t.devicePixelRatio=this.devicePixelRatio,t.videoElementPhysicalWidthPixels=this.videoElementPhysicalWidthPixels,t.videoElementPhysicalHeightPixels=this.videoElementPhysicalHeightPixels,t.streamId=this.streamId,t},e}();t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.PermissionGrantedByUser=0]="PermissionGrantedByUser",e[e.PermissionGrantedByBrowser=1]="PermissionGrantedByBrowser",e[e.PermissionDeniedByUser=2]="PermissionDeniedByUser",e[e.PermissionDeniedByBrowser=3]="PermissionDeniedByBrowser",e[e.PermissionGrantedPreviously=4]="PermissionGrantedPreviously"}(n=t.DevicePermission||(t.DevicePermission={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.prototype.matchesConstraints=function(e){return JSON.stringify(this.constraints)===JSON.stringify(e)},e}();t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="CreatePeerConnectionTask",a.removeTrackAddedEventListener=null,a.removeTrackRemovedEventListeners={},a.trackEvents=["ended","mute","unmute","isolationchange","overconstrained"],a.removeVideoTrackEventListeners={},a.trackAddedHandler=function(e){var t=e.track;a.context.logger.info("received track event: kind="+t.kind+" id="+t.id+" label="+t.label);var n=e.streams[0];"audio"===t.kind?a.context.audioMixController.bindAudioStream(n):"video"!==t.kind||a.trackIsVideoInput(t)||a.addRemoteVideoTrack(t,n)},a}return r(t,e),t.prototype.removeObserver=function(){for(var e in this.removeTrackAddedEventListener&&this.removeTrackAddedEventListener(),this.removeTrackRemovedEventListeners)this.removeTrackRemovedEventListeners[e]()},t.prototype.addPeerConnectionEventLogger=function(){var e=this,t=this.context.peer;t.addEventListener("connectionstatechange",(function(){e.context.logger.info("peer connection state changed: "+t.connectionState)})),t.addEventListener("negotiationneeded",(function(){e.context.logger.info("peer connection negotiation is needed")})),t.addEventListener("icegatheringstatechange",(function(){e.context.logger.info("peer connection ice gathering state changed: "+t.iceGatheringState)})),t.addEventListener("icecandidate",(function(t){e.context.logger.info("peer connection ice candidate: "+(t.candidate?t.candidate.candidate:"(null)"))})),t.addEventListener("iceconnectionstatechange",(function(){e.context.logger.info("peer connection ice connection state changed: "+t.iceConnectionState)}))},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(a){return this.context.removableObservers.push(this),(e={iceServers:[{urls:this.context.turnCredentials.uris,username:this.context.turnCredentials.username,credential:this.context.turnCredentials.password,credentialType:"password"}],iceTransportPolicy:"relay"}).bundlePolicy=this.context.browserBehavior.requiresBundlePolicy(),e.sdpSemantics=this.context.browserBehavior.requiresUnifiedPlan()?"unified-plan":"plan-b",this.logger.info("SDP semantics are "+e.sdpSemantics),this.context.peer?this.context.logger.info("reusing peer connection"):(this.context.logger.info("creating new peer connection"),this.context.peer=new RTCPeerConnection(e),this.addPeerConnectionEventLogger()),this.removeTrackAddedEventListener=function(){t.context.peer&&t.context.peer.removeEventListener("track",t.trackAddedHandler),t.removeTrackAddedEventListener=null},this.context.peer.addEventListener("track",this.trackAddedHandler),[2]}))}))},t.prototype.trackIsVideoInput=function(e){if(this.context.transceiverController.useTransceivers())return this.logger.info("getting video track type (unified-plan)"),this.context.transceiverController.trackIsVideoInput(e);if(this.logger.info("getting video track type (plan-b)"),this.context.activeVideoInput){var t=this.context.activeVideoInput.getVideoTracks();if(t&&t.length>0&&t[0].id===e.id)return!0}return!1},t.prototype.addRemoteVideoTrack=function(e,t){var a=this,n=t.id;this.context.browserBehavior.requiresUnifiedPlan()||(this.logger.info("redefining MediaStream as track array (plan-b)"),t=new MediaStream([e]),n=e.id);var r=this.context.videoStreamIndex.attendeeIdForTrack(n),i=this.context.videoTileController.removeVideoTilesByAttendeeId(r);i.length>0&&this.logger.warn("removing existing tiles "+i+" with same attendee id "+r);var o=this.context.videoTileController.addVideoTile(),c=this.context.videoStreamIndex.streamIdForTrack(n);void 0===c&&(this.logger.warn("stream not found for tile="+o.id()+" track="+n),c=null);for(var s,d,u,f=function(n){var r=l.trackEvents[n],i=t.getVideoTracks();if(i&&i.length){var s=i[0],d=function(){a.context.logger.info("received the "+r+" event for tile="+o.id()+" id="+e.id+" streamId="+c)};s.addEventListener(r,d),l.removeVideoTrackEventListeners[e.id]||(l.removeVideoTrackEventListeners[e.id]=[]),l.removeVideoTrackEventListeners[e.id].push((function(){s.removeEventListener(r,d)}))}},l=this,h=0;h<this.trackEvents.length;h++)f(h);e.getCapabilities?(s=(u=e.getCapabilities()).width,d=u.height):(s=(u=e.getSettings()).width,d=u.height);o.bindVideoStream(r,!1,t,s,d,c),this.logger.info("video track added, created tile="+o.id()+" track="+n+" streamId="+c);var b="removetrack",p=t;this.context.browserBehavior.requiresUnifiedPlan()||(this.logger.info("updating end event and target track (plan-b)"),b="ended",p=e);var v=function(){return a.removeRemoteVideoTrack(e,o.state())};this.removeTrackRemovedEventListeners[e.id]=function(){p.removeEventListener(b,v),delete a.removeTrackRemovedEventListeners[e.id]},p.addEventListener(b,v)},t.prototype.removeRemoteVideoTrack=function(e,t){var a,n;this.removeTrackRemovedEventListeners[e.id]();try{for(var r=c(this.removeVideoTrackEventListeners[e.id]),i=r.next();!i.done;i=r.next()){(0,i.value)()}}catch(e){a={error:e}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(a)throw a.error}}delete this.removeVideoTrackEventListeners[e.id],this.logger.info("video track ended, removing tile="+t.tileId+" id="+e.id+" stream="+t.streamId),t.streamId?this.context.videosPaused.remove(t.streamId):this.logger.warn("no stream found for tile="+t.tileId),this.context.videoTileController.removeVideoTile(t.tileId)},t}(a(0).default);t.default=s},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(10),s=a(13),d=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="CreateSDPTask",a}return r(t,e),t.prototype.cancel=function(){var e=new Error("canceling "+this.name());this.cancelPromise&&this.cancelPromise(e)},t.prototype.sessionUsesAudio=function(){return!0},t.prototype.sessionUsesVideo=function(){var e=this.context.videoTileController.hasStartedLocalVideoTile(),t=!!this.context.videosToReceive&&!this.context.videosToReceive.empty(),a=e||t;return this.context.logger.info("uses video: "+a+" (enabled: "+!0+", sending: "+e+", receiving: "+t+")"),a},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(a){switch(a.label){case 0:return e={offerToReceiveAudio:this.sessionUsesAudio(),offerToReceiveVideo:this.sessionUsesVideo()},this.logger.info("peer connection offerOptions: "+JSON.stringify(e)),[4,new Promise((function(a,n){return i(t,void 0,void 0,(function(){var t,r,i;return o(this,(function(o){switch(o.label){case 0:this.cancelPromise=function(e){n(e)},o.label=1;case 1:return o.trys.push([1,3,,4]),t=this.context,[4,this.context.peer.createOffer(e)];case 2:return t.sdpOfferInit=o.sent(),this.context.logger.info("peer connection created offer "+JSON.stringify(this.context.sdpOfferInit)),this.context.previousSdpOffer&&new s.default(this.context.sdpOfferInit.sdp).videoSendSectionHasDifferentSSRC(this.context.previousSdpOffer)&&(r=new Error("canceling "+this.name()+" due to the meeting status code: "+c.default.IncompatibleSDP),this.context.previousSdpOffer=null,n(r)),a(),[3,4];case 3:return i=o.sent(),n(i),[3,4];case 4:return[2]}}))}))}))];case 1:return a.sent(),[2]}}))}))},t}(a(0).default);t.default=d},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.Host="host",e.ServerReflexive="srflx",e.PeerReflexive="prflx",e.Relay="relay"}(n=t.SDPCandidateType||(t.SDPCandidateType={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(9),r=function(){function e(e,t,a){this.realtimeController=e,this.selfAttendeeId=t,this.hasBandwidthPriorityCallback=a,this.speakerScores={},this.speakerMuteState={},this.detectorCallbackToHandler=new Map,this.detectorCallbackToScoresTimer=new Map,this.detectorCallbackToActivityTimer=new Map,this.hasBandwidthPriority=!1,this.mostRecentUpdateTimestamp={}}return e.prototype.needUpdate=function(e){return!this.activeSpeakers||(0===this.speakerScores[e]&&this.activeSpeakers.includes(e)||this.speakerScores[e]>0&&!this.activeSpeakers.includes(e))},e.prototype.updateActiveSpeakers=function(e,t,a){if(this.needUpdate(a)){for(var n=[],r=Object.keys(this.speakerScores),i=0;i<r.length;i++){var o=r[i];n.push({attendeeId:o,activeScore:this.speakerScores[o]})}var c=n.sort((function(e,t){return t.activeScore-e.activeScore})).filter((function(e){return e.activeScore>0})).map((function(e){return e.attendeeId}));this.activeSpeakers=c,t(c);var s=c.length>0&&c[0]===this.selfAttendeeId&&e.prioritizeVideoSendBandwidthForActiveSpeaker();this.hasBandwidthPriority!==s&&(this.hasBandwidthPriority=s,this.hasBandwidthPriorityCallback(s))}},e.prototype.updateScore=function(e,t,a,n,r){var i=e.calculateScore(a,n,r);this.speakerScores[a]!==i&&(this.speakerScores[a]=i,this.updateActiveSpeakers(e,t,a))},e.prototype.subscribe=function(t,a,r,i){var o=this,c=function(e,n){if(!n)return o.speakerScores[e]=0,void o.updateActiveSpeakers(t,a,e);o.realtimeController.realtimeSubscribeToVolumeIndicator(e,(function(e,n,r,i){o.mostRecentUpdateTimestamp[e]=Date.now(),null!==r&&(o.speakerMuteState[e]=r),o.updateScore(t,a,e,n,r)}))};this.detectorCallbackToHandler.set(a,c);var s=new n.default(e.ACTIVITY_UPDATE_INTERVAL_MS);if(s.start((function(){for(var n in o.speakerScores){var r=o.mostRecentUpdateTimestamp[n]||0;Date.now()-r>e.ACTIVITY_WAIT_INTERVAL_MS&&o.updateScore(t,a,n,0,o.speakerMuteState[n])}})),this.detectorCallbackToActivityTimer.set(a,s),r&&i){var d=new n.default(i);d.start((function(){r(o.speakerScores)})),this.detectorCallbackToScoresTimer.set(a,d)}this.realtimeController.realtimeSubscribeToAttendeeIdPresence(c)},e.prototype.unsubscribe=function(e){var t=this.detectorCallbackToHandler.get(e);this.detectorCallbackToHandler.delete(e),this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(t);var a=this.detectorCallbackToActivityTimer.get(e);a&&(a.stop(),this.detectorCallbackToActivityTimer.delete(e));var n=this.detectorCallbackToScoresTimer.get(e);n&&(n.stop(),this.detectorCallbackToHandler.delete(e))},e.ACTIVITY_WAIT_INTERVAL_MS=1e3,e.ACTIVITY_UPDATE_INTERVAL_MS=200,e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.audioDevice=null,this.audioElement=null,this.audioStream=null}return e.prototype.bindAudioElement=function(e){return!!e&&(this.audioElement=e,this.audioElement.autoplay=!0,this.bindAudioMix())},e.prototype.unbindAudioElement=function(){this.audioElement&&(this.audioElement.srcObject=null,this.audioElement=null)},e.prototype.bindAudioStream=function(e){return!!e&&(this.audioStream=e,this.bindAudioMix())},e.prototype.bindAudioDevice=function(e){return!!e&&(this.audioDevice=e,this.bindAudioMix())},e.prototype.bindAudioMix=function(){if(this.audioElement&&(this.audioStream&&(this.audioElement.srcObject=this.audioStream),void 0!==this.audioElement.sinkId)){var e=this.audioDevice?this.audioDevice.deviceId:"";return e!==this.audioElement.sinkId&&this.audioElement.setSinkId(e),!0}return!1},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=function(){function e(e,t,a,n,r,i){var o=this;this.audioVideoController=e,this.realtimeController=t,this.videoTileController=a,this.connectionHealthData=n,this.pingPong=r,this.statsCollector=i,this.isActive=!1,this.hasSeenValidPacketMetricsBefore=!1,this.lastAvailableSendBandwidthKbps=0,this.lastAvailableRecvBandwidthKbps=0,this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange((function(e){o.isActive&&o.receiveSignalStrengthChange(e)}))}return e.prototype.start=function(){this.isActive=!0,this.pingPong.addObserver(this),this.pingPong.start(),this.audioVideoController.addObserver(this)},e.prototype.stop=function(){this.isActive=!1,this.pingPong.removeObserver(this),this.pingPong.stop(),this.audioVideoController.removeObserver(this)},e.prototype.receiveSignalStrengthChange=function(e){0===e?this.connectionHealthData.setLastNoSignalTimestampMs(Date.now()):e<=.5?this.connectionHealthData.setLastWeakSignalTimestampMs(Date.now()):this.connectionHealthData.setLastGoodSignalTimestampMs(Date.now()),this.updateConnectionHealth()},e.prototype.didReceivePong=function(e,t,a){this.connectionHealthData.setConsecutiveMissedPongs(0),this.statsCollector.logLatency("ping_pong",t),this.statsCollector.logLatency("ping_pong_clock_skew",a),this.updateConnectionHealth()},e.prototype.didMissPongs=function(){this.connectionHealthData.setConsecutiveMissedPongs(this.connectionHealthData.consecutiveMissedPongs+1),this.updateConnectionHealth()},e.prototype.metricsDidReceive=function(e){var t=0,a=0,n=e.getObservableMetrics(),r=n.audioPacketsReceived,i=n.audioPacketsReceivedFractionLoss,o=0,c=n.videoPacketSentPerSecond,s=n.videoUpstreamBitrate,d=n.availableSendBandwidth||n.availableOutgoingBitrate,u=n.availableReceiveBandwidth||n.availableIncomingBitrate,f=n.audioSpeakerDelayMs;"number"!=typeof d||isNaN(d)||this.updateAvailableSendBandwidth(d/1e3),"number"!=typeof u||isNaN(u)||this.updateAvailableReceiveBandwidth(u/1e3),"number"!=typeof s||isNaN(s)||(o=s/1e3),"number"!=typeof f||isNaN(f)||this.connectionHealthData.setAudioSpeakerDelayMs(f),this.monitorVideoUplinkHealth(o,c),"number"==typeof r&&"number"==typeof i&&(a=i,(t=r)<0||a<0||(this.addToMinuteWindow(this.connectionHealthData.packetsReceivedInLastMinute,t),this.addToMinuteWindow(this.connectionHealthData.fractionPacketsLostInboundInLastMinute,a),t>0?(this.hasSeenValidPacketMetricsBefore=!0,this.connectionHealthData.setConsecutiveStatsWithNoPackets(0)):this.hasSeenValidPacketMetricsBefore&&this.connectionHealthData.setConsecutiveStatsWithNoPackets(this.connectionHealthData.consecutiveStatsWithNoPackets+1),(0===t||a>0)&&this.connectionHealthData.setLastPacketLossInboundTimestampMs(Date.now()),this.updateConnectionHealth()))},e.prototype.addToMinuteWindow=function(e,t){e.unshift(t),e.length>60&&e.pop()},e.prototype.updateAvailableSendBandwidth=function(e){if(e!==this.lastAvailableSendBandwidthKbps){if(0===this.lastAvailableSendBandwidthKbps)return void(this.lastAvailableSendBandwidthKbps=e);var t=this.lastAvailableSendBandwidthKbps;this.lastAvailableSendBandwidthKbps=e,this.audioVideoController.forEachObserver((function(a){n.default.of(a.videoSendBandwidthDidChange).map((function(n){return n.bind(a)(e,t)}))}))}},e.prototype.updateAvailableReceiveBandwidth=function(e){if(e!==this.lastAvailableRecvBandwidthKbps){if(0===this.lastAvailableRecvBandwidthKbps)return void(this.lastAvailableRecvBandwidthKbps=e);var t=this.lastAvailableRecvBandwidthKbps;this.lastAvailableRecvBandwidthKbps=e,this.audioVideoController.forEachObserver((function(a){n.default.of(a.videoReceiveBandwidthDidChange).map((function(n){return n.bind(a)(e,t)}))}))}},e.prototype.updateConnectionHealth=function(){var e=this;this.audioVideoController.forEachObserver((function(t){n.default.of(t.connectionHealthDidChange).map((function(a){return a.bind(t)(e.connectionHealthData.clone())}))}))},e.prototype.monitorVideoUplinkHealth=function(e,t){this.videoTileController.hasStartedLocalVideoTile()&&this.audioVideoController.forEachObserver((function(a){n.default.of(a.videoSendHealthDidChange).map((function(n){return n.bind(a)(e,t)}))}))},e}();t.default=r},function(e,t,a){"use strict";e.exports=a(176)},function(e,t,a){"use strict";e.exports=f;var n,r=a(6),i=r.LongBits,o=r.base64,c=r.utf8;function s(e,t,a){this.fn=e,this.len=t,this.next=void 0,this.val=a}function d(){}function u(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function f(){this.len=0,this.head=new s(d,0,0),this.tail=this.head,this.states=null}function l(e,t,a){t[a]=255&e}function h(e,t){this.len=e,this.next=void 0,this.val=t}function b(e,t,a){for(;e.hi;)t[a++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[a++]=127&e.lo|128,e.lo=e.lo>>>7;t[a++]=e.lo}function p(e,t,a){t[a]=255&e,t[a+1]=e>>>8&255,t[a+2]=e>>>16&255,t[a+3]=e>>>24}f.create=r.Buffer?function(){return(f.create=function(){return new n})()}:function(){return new f},f.alloc=function(e){return new r.Array(e)},r.Array!==Array&&(f.alloc=r.pool(f.alloc,r.Array.prototype.subarray)),f.prototype._push=function(e,t,a){return this.tail=this.tail.next=new s(e,t,a),this.len+=t,this},h.prototype=Object.create(s.prototype),h.prototype.fn=function(e,t,a){for(;e>127;)t[a++]=127&e|128,e>>>=7;t[a]=e},f.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new h((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},f.prototype.int32=function(e){return e<0?this._push(b,10,i.fromNumber(e)):this.uint32(e)},f.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},f.prototype.uint64=function(e){var t=i.from(e);return this._push(b,t.length(),t)},f.prototype.int64=f.prototype.uint64,f.prototype.sint64=function(e){var t=i.from(e).zzEncode();return this._push(b,t.length(),t)},f.prototype.bool=function(e){return this._push(l,1,e?1:0)},f.prototype.fixed32=function(e){return this._push(p,4,e>>>0)},f.prototype.sfixed32=f.prototype.fixed32,f.prototype.fixed64=function(e){var t=i.from(e);return this._push(p,4,t.lo)._push(p,4,t.hi)},f.prototype.sfixed64=f.prototype.fixed64,f.prototype.float=function(e){return this._push(r.float.writeFloatLE,4,e)},f.prototype.double=function(e){return this._push(r.float.writeDoubleLE,8,e)};var v=r.Array.prototype.set?function(e,t,a){t.set(e,a)}:function(e,t,a){for(var n=0;n<e.length;++n)t[a+n]=e[n]};f.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(l,1,0);if(r.isString(e)){var a=f.alloc(t=o.length(e));o.decode(e,a,0),e=a}return this.uint32(t)._push(v,t,e)},f.prototype.string=function(e){var t=c.length(e);return t?this.uint32(t)._push(c.write,t,e):this._push(l,1,0)},f.prototype.fork=function(){return this.states=new u(this),this.head=this.tail=new s(d,0,0),this.len=0,this},f.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new s(d,0,0),this.len=0),this},f.prototype.ldelim=function(){var e=this.head,t=this.tail,a=this.len;return this.reset().uint32(a),a&&(this.tail.next=e.next,this.tail=t,this.len+=a),this},f.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),a=0;e;)e.fn(e.val,t,a),a+=e.len,e=e.next;return t},f._configure=function(e){n=e}},function(e,t,a){"use strict";e.exports=s;var n,r=a(6),i=r.LongBits,o=r.utf8;function c(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function s(e){this.buf=e,this.pos=0,this.len=e.length}var d,u="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new s(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new s(e);throw Error("illegal buffer")};function f(){var e=new i(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw c(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw c(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function l(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function h(){if(this.pos+8>this.len)throw c(this,8);return new i(l(this.buf,this.pos+=4),l(this.buf,this.pos+=4))}s.create=r.Buffer?function(e){return(s.create=function(e){return r.Buffer.isBuffer(e)?new n(e):u(e)})(e)}:u,s.prototype._slice=r.Array.prototype.subarray||r.Array.prototype.slice,s.prototype.uint32=(d=4294967295,function(){if(d=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return d;if(d=(d|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return d;if(d=(d|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return d;if(d=(d|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return d;if(d=(d|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return d;if((this.pos+=5)>this.len)throw this.pos=this.len,c(this,10);return d}),s.prototype.int32=function(){return 0|this.uint32()},s.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},s.prototype.bool=function(){return 0!==this.uint32()},s.prototype.fixed32=function(){if(this.pos+4>this.len)throw c(this,4);return l(this.buf,this.pos+=4)},s.prototype.sfixed32=function(){if(this.pos+4>this.len)throw c(this,4);return 0|l(this.buf,this.pos+=4)},s.prototype.float=function(){if(this.pos+4>this.len)throw c(this,4);var e=r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},s.prototype.double=function(){if(this.pos+8>this.len)throw c(this,4);var e=r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},s.prototype.bytes=function(){var e=this.uint32(),t=this.pos,a=this.pos+e;if(a>this.len)throw c(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,a):t===a?new this.buf.constructor(0):this._slice.call(this.buf,t,a)},s.prototype.string=function(){var e=this.bytes();return o.read(e,0,e.length)},s.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw c(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw c(this)}while(128&this.buf[this.pos++]);return this},s.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},s._configure=function(e){n=e;var t=r.Long?"toLong":"toNumber";r.merge(s.prototype,{int64:function(){return f.call(this)[t](!1)},uint64:function(){return f.call(this)[t](!0)},sint64:function(){return f.call(this).zzDecode()[t](!1)},fixed64:function(){return h.call(this)[t](!0)},sfixed64:function(){return h.call(this)[t](!1)}})}},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(1),i=a(8),o=a(9),c=a(3),s=a(2),d=function(){function e(e,t,a){this.signalingClient=e,this.intervalMs=t,this.logger=a,this.observerQueue=new Set,this.consecutivePongsUnaccountedFor=0,this.intervalScheduler=new o.default(this.intervalMs),this.pingId=0}return e.prototype.addObserver=function(e){this.logger.info("adding a ping-pong observer"),this.observerQueue.add(e)},e.prototype.removeObserver=function(e){this.logger.info("removing a ping-pong observer"),this.observerQueue.delete(e)},e.prototype.forEachObserver=function(e){var t,a,r=this,o=function(t){(new i.default).start((function(){r.observerQueue.has(t)&&e(t)}))};try{for(var c=n(this.observerQueue),s=c.next();!s.done;s=c.next()){o(s.value)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(a=c.return)&&a.call(c)}finally{if(t)throw t.error}}},e.prototype.start=function(){this.stop(),this.signalingClient.registerObserver(this),this.signalingClient.ready()&&this.startPingInterval()},e.prototype.stop=function(){this.stopPingInterval(),this.signalingClient.removeObserver(this)},e.prototype.startPingInterval=function(){var e=this;this.intervalScheduler.start((function(){e.ping()})),this.ping()},e.prototype.stopPingInterval=function(){this.intervalScheduler.stop(),this.pingId=0,this.consecutivePongsUnaccountedFor=0},e.prototype.ping=function(){var e=this;this.consecutivePongsUnaccountedFor>0&&(this.logger.warn("missed pong "+this.consecutivePongsUnaccountedFor+" time(s)"),this.forEachObserver((function(t){r.default.of(t.didMissPongs).map((function(a){return a.bind(t)(e.consecutivePongsUnaccountedFor)}))}))),this.consecutivePongsUnaccountedFor+=1,this.pingId=this.pingId+1&4294967295;var t=s.SdkPingPongFrame.create();t.pingId=this.pingId,t.type=s.SdkPingPongType.PING,this.pingTimestampLocalMs=this.signalingClient.pingPong(t),this.logger.debug((function(){return"sent ping "+e.pingId}))},e.prototype.pong=function(e){var t=s.SdkPingPongFrame.create();t.pingId=e,t.type=s.SdkPingPongType.PONG,this.signalingClient.pingPong(t)},e.prototype.handleSignalingClientEvent=function(e){switch(e.type){case c.default.WebSocketOpen:this.startPingInterval();break;case c.default.WebSocketFailed:case c.default.WebSocketError:case c.default.WebSocketClosing:case c.default.WebSocketClosed:this.logger.warn("stopped pinging ("+c.default[e.type]+")"),this.stopPingInterval();break;case c.default.ReceivedSignalFrame:if(e.message.type!==s.SdkSignalFrame.Type.PING_PONG)break;if(e.message.pingPong.type===s.SdkPingPongType.PONG){var t,a=e.message.pingPong.pingId;if(a!==this.pingId){this.logger.warn("unexpected ping id "+a+" (expected "+this.pingId+")");break}if(this.consecutivePongsUnaccountedFor=0,"number"!=typeof e.message.timestampMs)break;t=e.message.timestampMs,this.logger.debug((function(){return"received pong "+a+" with timestamp "+t}));var n=e.timestampMs-this.pingTimestampLocalMs,i=Math.round(t-n/2),o=this.pingTimestampLocalMs-i;this.logger.info("local clock skew estimate="+o+"ms from ping-pong time="+n+"ms"),this.forEachObserver((function(e){r.default.of(e.didReceivePong).map((function(t){return t.bind(e)(a,o,n)}))}))}else this.pong(e.message.pingPong.pingId)}},e}();t.default=d},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(84),i=a(85),o=function(){function e(){this.state=new r.default}return e.prototype.realtimeSetLocalAttendeeId=function(e,t){var a=this;this.wrap((function(){a.state.localAttendeeId=e,a.state.localExternalUserId=t}))},e.prototype.realtimeSetAttendeeIdPresence=function(e,t,a){var r=this;this.wrap((function(){var i,o;t&&(r.state.attendeeIdToExternalUserId[e]=a);try{for(var c=n(r.state.attendeeIdChangesCallbacks),s=c.next();!s.done;s=c.next()){(0,s.value)(e,t,a)}}catch(e){i={error:e}}finally{try{s&&!s.done&&(o=c.return)&&o.call(c)}finally{if(i)throw i.error}}}))},e.prototype.realtimeSubscribeToAttendeeIdPresence=function(e){var t=this;this.wrap((function(){t.state.attendeeIdChangesCallbacks.push(e)}))},e.prototype.realtimeUnsubscribeToAttendeeIdPresence=function(e){var t=this;this.wrap((function(){var a=t.state.attendeeIdChangesCallbacks.indexOf(e);-1!==a&&t.state.attendeeIdChangesCallbacks.splice(a,1)}))},e.prototype.realtimeSetLocalAudioInput=function(e){var t=this;this.wrap((function(){t.state.audioInput!==e&&(t.setAudioInputEnabled(!1),t.state.audioInput=e,t.setAudioInputEnabled(!t.state.muted))}))},e.prototype.realtimeSetCanUnmuteLocalAudio=function(e){var t=this;this.wrap((function(){var a,r;if(t.state.canUnmute!==e){t.state.canUnmute=e;try{for(var i=n(t.state.setCanUnmuteLocalAudioCallbacks),o=i.next();!o.done;o=i.next()){(0,o.value)(e)}}catch(e){a={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(a)throw a.error}}}}))},e.prototype.realtimeSubscribeToSetCanUnmuteLocalAudio=function(e){var t=this;this.wrap((function(){t.state.setCanUnmuteLocalAudioCallbacks.push(e)}))},e.prototype.realtimeUnsubscribeToSetCanUnmuteLocalAudio=function(e){var t=this;this.wrap((function(){var a=t.state.setCanUnmuteLocalAudioCallbacks.indexOf(e);-1!==a&&t.state.setCanUnmuteLocalAudioCallbacks.splice(a,1)}))},e.prototype.realtimeCanUnmuteLocalAudio=function(){var e=this,t=!1;return this.wrap((function(){t=e.state.canUnmute})),t},e.prototype.realtimeMuteLocalAudio=function(){var e=this;this.wrap((function(){var t,a;if(!e.state.muted){e.setAudioInputEnabled(!1),e.state.muted=!0,e.realtimeUpdateVolumeIndicator(e.state.localAttendeeId,null,null,null,e.state.localExternalUserId);try{for(var r=n(e.state.muteAndUnmuteLocalAudioCallbacks),i=r.next();!i.done;i=r.next()){(0,i.value)(!0)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}}}))},e.prototype.realtimeUnmuteLocalAudio=function(){var e=this,t=!1;return this.wrap((function(){var a,r;if(e.state.muted)if(e.state.canUnmute){e.setAudioInputEnabled(!0),e.state.muted=!1,e.realtimeUpdateVolumeIndicator(e.state.localAttendeeId,null,null,null,e.state.localExternalUserId);try{for(var i=n(e.state.muteAndUnmuteLocalAudioCallbacks),o=i.next();!o.done;o=i.next()){(0,o.value)(!1)}}catch(e){a={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(a)throw a.error}}t=!0}else t=!1;else t=!0})),t},e.prototype.realtimeSubscribeToMuteAndUnmuteLocalAudio=function(e){var t=this;this.wrap((function(){t.state.muteAndUnmuteLocalAudioCallbacks.push(e)}))},e.prototype.realtimeUnsubscribeToMuteAndUnmuteLocalAudio=function(e){var t=this;this.wrap((function(){var a=t.state.muteAndUnmuteLocalAudioCallbacks.indexOf(e);-1!==a&&t.state.muteAndUnmuteLocalAudioCallbacks.splice(a,1)}))},e.prototype.realtimeIsLocalAudioMuted=function(){var e=this,t=!1;return this.wrap((function(){t=e.state.muted})),t},e.prototype.realtimeSubscribeToVolumeIndicator=function(e,t){var a=this;this.wrap((function(){a.state.volumeIndicatorCallbacks.hasOwnProperty(e)||(a.state.volumeIndicatorCallbacks[e]=[]),a.state.volumeIndicatorCallbacks[e].push(t),a.sendVolumeIndicatorChange(e,!0,!0,!0,a.state.attendeeIdToExternalUserId[e])}))},e.prototype.realtimeUnsubscribeFromVolumeIndicator=function(e){var t=this;this.wrap((function(){delete t.state.volumeIndicatorCallbacks[e]}))},e.prototype.realtimeUpdateVolumeIndicator=function(e,t,a,n,r){var i=this;this.wrap((function(){a=i.applyLocalMuteOverride(e,a);var o=i.getVolumeIndicatorState(e),c=!1,s=!1,d=!1;null!==a&&o.muted!==a&&(o.muted=a,s=!0,o.muted&&0!==o.volume&&(o.volume=0,c=!0)),o.muted||null===t||(o.volume!==t&&(o.volume=t,c=!0),null===o.muted&&(o.muted=!1,s=!0)),null!==n&&o.signalStrength!==n&&(o.signalStrength=n,d=!0),i.sendVolumeIndicatorChange(e,c,s,d,r)}))},e.prototype.realtimeSubscribeToLocalSignalStrengthChange=function(e){var t=this;this.wrap((function(){t.state.localSignalStrengthChangeCallbacks.push(e),null!==t.state.localAttendeeId&&t.sendLocalSignalStrengthChange(t.state.localAttendeeId,!0)}))},e.prototype.realtimeUnsubscribeToLocalSignalStrengthChange=function(e){var t=this;this.wrap((function(){var a=t.state.localSignalStrengthChangeCallbacks.indexOf(e);-1!==a&&t.state.localSignalStrengthChangeCallbacks.splice(a,1)}))},e.prototype.realtimeSubscribeToFatalError=function(e){var t=this;this.wrap((function(){t.state.fatalErrorCallbacks.push(e)}))},e.prototype.realtimeUnsubscribeToFatalError=function(e){var t=this;this.wrap((function(){var a=t.state.fatalErrorCallbacks.indexOf(e);-1!==a&&t.state.fatalErrorCallbacks.splice(a,1)}))},e.prototype.setAudioInputEnabled=function(e){var t,a;if(this.state.audioInput)try{for(var r=n(this.state.audioInput.getTracks()),i=r.next();!i.done;i=r.next()){var o=i.value;o.enabled!==e&&(o.enabled=e)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}},e.prototype.applyLocalMuteOverride=function(e,t){var a=this.state.localAttendeeId,n=this.state.muted;return e!==a||null===this.state.audioInput?t:n},e.prototype.sendVolumeIndicatorChange=function(e,t,a,r,o){var c,s;if(this.sendLocalSignalStrengthChange(e,r),this.state.volumeIndicatorCallbacks.hasOwnProperty(e)){var d=this.getVolumeIndicatorState(e),u=new i.default;if(t&&(u.volume=d.volume),a&&(u.muted=d.muted),r&&(u.signalStrength=d.signalStrength),!this.stateIsEmpty(u))try{for(var f=n(this.state.volumeIndicatorCallbacks[e]),l=f.next();!l.done;l=f.next()){(0,l.value)(e,u.volume,u.muted,u.signalStrength,o)}}catch(e){c={error:e}}finally{try{l&&!l.done&&(s=f.return)&&s.call(f)}finally{if(c)throw c.error}}}},e.prototype.sendLocalSignalStrengthChange=function(e,t){var a,r;if(t&&e===this.state.localAttendeeId){var i=this.getVolumeIndicatorState(e).signalStrength;if(null!==i)try{for(var o=n(this.state.localSignalStrengthChangeCallbacks),c=o.next();!c.done;c=o.next()){(0,c.value)(i)}}catch(e){a={error:e}}finally{try{c&&!c.done&&(r=o.return)&&r.call(o)}finally{if(a)throw a.error}}}},e.prototype.getVolumeIndicatorState=function(e){return this.state.volumeIndicatorState.hasOwnProperty(e)||(this.state.volumeIndicatorState[e]=new i.default),this.state.volumeIndicatorState[e]},e.prototype.stateIsEmpty=function(e){return null===e.volume&&null===e.muted&&null===e.signalStrength},e.prototype.wrap=function(e){var t,a;try{e()}catch(e){try{try{for(var r=n(this.state.fatalErrorCallbacks),i=r.next();!i.done;i=r.next()){(0,i.value)(e)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}}catch(t){try{console.error(e),console.error(t)}catch(e){}}}},e}();t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.localAttendeeId=null,this.localExternalUserId=null,this.attendeeIdChangesCallbacks=[],this.canUnmute=!0,this.setCanUnmuteLocalAudioCallbacks=[],this.muted=!1,this.muteAndUnmuteLocalAudioCallbacks=[],this.audioInput=null,this.volumeIndicatorState={},this.attendeeIdToExternalUserId={},this.volumeIndicatorCallbacks={},this.localSignalStrengthChangeCallbacks=[],this.fatalErrorCallbacks=[]};t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.volume=null,this.muted=null,this.signalStrength=null};t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(33),r=a(87),i=a(34),o=a(35),c=function(){function e(e){this.logger=e,this.currentState=i.SessionStateControllerState.NotConnected,this.deferredAction=null,this.deferredWork=null}return e.prototype.perform=function(e,t){var a=this.currentState;if(a===i.SessionStateControllerState.NotConnected&&e===n.SessionStateControllerAction.Connect)this.transition(i.SessionStateControllerState.Connecting,e);else if(a===i.SessionStateControllerState.Connecting&&e===n.SessionStateControllerAction.Fail)this.transition(i.SessionStateControllerState.Disconnecting,e);else if(a===i.SessionStateControllerState.Connecting&&e===n.SessionStateControllerAction.FinishConnecting)this.transition(i.SessionStateControllerState.Connected,e);else if(a===i.SessionStateControllerState.Connected&&e===n.SessionStateControllerAction.Disconnect)this.transition(i.SessionStateControllerState.Disconnecting,e);else if(a===i.SessionStateControllerState.Connected&&e===n.SessionStateControllerAction.Reconnect)this.transition(i.SessionStateControllerState.Connecting,e);else if(a===i.SessionStateControllerState.Connected&&e===n.SessionStateControllerAction.Fail)this.transition(i.SessionStateControllerState.Disconnecting,e);else if(a===i.SessionStateControllerState.Connected&&e===n.SessionStateControllerAction.Update)this.transition(i.SessionStateControllerState.Updating,e);else if(a===i.SessionStateControllerState.Updating&&e===n.SessionStateControllerAction.Fail)this.transition(i.SessionStateControllerState.Disconnecting,e);else if(a===i.SessionStateControllerState.Updating&&e===n.SessionStateControllerAction.FinishUpdating)this.transition(i.SessionStateControllerState.Connected,e);else{if(a!==i.SessionStateControllerState.Disconnecting||e!==n.SessionStateControllerAction.FinishDisconnecting)return this.canDefer(e)?(this.logger.info("deferring transition from "+i.SessionStateControllerState[this.currentState]+" with "+n.SessionStateControllerAction[e]),this.deferAction(e,t),o.SessionStateControllerTransitionResult.DeferredTransition):(this.logger.warn("no transition found from "+i.SessionStateControllerState[this.currentState]+" with "+n.SessionStateControllerAction[e]),o.SessionStateControllerTransitionResult.NoTransitionAvailable);this.transition(i.SessionStateControllerState.NotConnected,e)}try{t()}catch(t){return this.logger.error("error during state "+i.SessionStateControllerState[this.currentState]+" with action "+n.SessionStateControllerAction[e]+": "+t),this.logger.info("rolling back transition to "+i.SessionStateControllerState[a]),this.currentState=a,o.SessionStateControllerTransitionResult.TransitionFailed}return this.performDeferredAction(),o.SessionStateControllerTransitionResult.Transitioned},e.prototype.state=function(){return this.currentState},e.prototype.transition=function(e,t){this.logger.info("transitioning from "+i.SessionStateControllerState[this.currentState]+" to "+i.SessionStateControllerState[e]+" with "+n.SessionStateControllerAction[t]),this.currentState=e},e.prototype.deferPriority=function(e){switch(e){case n.SessionStateControllerAction.Disconnect:return r.SessionStateControllerDeferPriority.VeryHigh;case n.SessionStateControllerAction.Fail:return r.SessionStateControllerDeferPriority.High;case n.SessionStateControllerAction.Reconnect:return r.SessionStateControllerDeferPriority.Medium;case n.SessionStateControllerAction.Update:return r.SessionStateControllerDeferPriority.Low;default:return r.SessionStateControllerDeferPriority.DoNotDefer}},e.prototype.deferAction=function(e,t){null!==this.deferredAction&&this.deferPriority(this.deferredAction)>this.deferPriority(e)||(this.deferredAction=e,this.deferredWork=t)},e.prototype.canDefer=function(e){return this.deferPriority(e)!==r.SessionStateControllerDeferPriority.DoNotDefer&&(this.currentState===i.SessionStateControllerState.Connecting||this.currentState===i.SessionStateControllerState.Updating)},e.prototype.performDeferredAction=function(){if(this.deferredAction){var e=this.deferredAction,t=this.deferredWork;this.deferredAction=null,this.deferredWork=null,this.logger.info("performing deferred action "+n.SessionStateControllerAction[e]),this.perform(e,t)!==o.SessionStateControllerTransitionResult.Transitioned&&this.logger.info("unable to perform deferred action "+n.SessionStateControllerAction[this.deferredAction]+" in state "+i.SessionStateControllerState[this.currentState])}},e}();t.default=c},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.DoNotDefer=0]="DoNotDefer",e[e.Low=1]="Low",e[e.Medium=2]="Medium",e[e.High=3]="High",e[e.VeryHigh=4]="VeryHigh"}(n=t.SessionStateControllerDeferPriority||(t.SessionStateControllerDeferPriority={})),t.default=n},function(e,t,a){"use strict";(function(e){var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(2),i=a(36),o=a(89),c=a(3),s=function(){function t(e,t){this.webSocket=e,this.logger=t,this.unloadHandler=null,this.observerQueue=new Set,this.connectionRequestQueue=[],this.resetConnection(),this.logger.debug((function(){return"signaling client init"}))}return t.prototype.registerObserver=function(e){this.logger.debug((function(){return"registering signaling client observer"})),this.observerQueue.add(e)},t.prototype.removeObserver=function(e){this.logger.debug((function(){return"removing signaling client observer"})),this.observerQueue.delete(e)},t.prototype.openConnection=function(e){this.logger.info("adding connection request to queue: "+e.url()),this.connectionRequestQueue.push(e),this.closeConnection()},t.prototype.pingPong=function(e){this.logger.debug((function(){return"sending ping"}));var t=r.SdkSignalFrame.create();return t.type=r.SdkSignalFrame.Type.PING_PONG,t.pingPong=e,this.sendMessage(t),t.timestampMs},t.prototype.join=function(e){this.logger.info("sending join");var t=r.SdkJoinFrame.create();t.protocolVersion=2,t.maxNumOfVideos=e.maxVideos,t.flags=r.SdkJoinFlags.HAS_STREAM_UPDATE,t.flags|=e.sendBitrates?r.SdkJoinFlags.SEND_BITRATES:0;var a=r.SdkSignalFrame.create();a.type=r.SdkSignalFrame.Type.JOIN,a.join=t,this.sendMessage(a)},t.prototype.subscribe=function(e){var t=r.SdkSubscribeFrame.create();if(t.sendStreams=[],t.sdpOffer=e.sdpOffer,t.audioCheckin=e.audioCheckin,t.audioHost=e.audioHost,t.audioMuted=e.audioMuted,e.connectionTypeHasVideo&&(t.receiveStreamIds=e.receiveStreamIds),t.duplex=r.SdkStreamServiceType.RX,!e.audioCheckin){var a=r.SdkStreamDescriptor.create();a.mediaType=r.SdkStreamMediaType.AUDIO,a.trackLabel="AmazonChimeExpressAudio",a.attendeeId=e.attendeeId,a.streamId=1,a.groupId=1,a.framerate=15,a.maxBitrateKbps=600,a.avgBitrateBps=4e5,t.sendStreams.push(a)}if(e.localVideoEnabled){t.duplex=r.SdkStreamServiceType.DUPLEX;var n=r.SdkStreamDescriptor.create();n.mediaType=r.SdkStreamMediaType.VIDEO,n.trackLabel="AmazonChimeExpressVideo",n.attendeeId=e.attendeeId,n.streamId=2,n.groupId=2,n.framerate=e.videoInputFrameRate,n.maxBitrateKbps=e.videoInputMaxBitrateKbps,t.sendStreams.push(n)}var i=r.SdkSignalFrame.create();i.type=r.SdkSignalFrame.Type.SUBSCRIBE,i.sub=t,this.sendMessage(i)},t.prototype.leave=function(){var e=r.SdkSignalFrame.create();e.type=r.SdkSignalFrame.Type.LEAVE,e.leave=r.SdkLeaveFrame.create(),this.sendMessage(e),this.logger.debug((function(){return"sent leave"}))},t.prototype.sendClientMetrics=function(e){var t=r.SdkSignalFrame.create();t.type=r.SdkSignalFrame.Type.CLIENT_METRIC,t.clientMetric=e,this.sendMessage(t)},t.prototype.closeConnection=function(){this.webSocket.readyState()!==i.default.None&&this.webSocket.readyState()!==i.default.Closed?(this.isClosing=!0,this.sendEvent(new o.default(this,c.default.WebSocketClosing,null)),this.webSocket.close(),this.deactivatePageUnloadHandler()):(this.logger.info("no existing connection needs closing"),this.serviceConnectionRequestQueue())},t.prototype.ready=function(){return this.webSocket.readyState()===i.default.Open&&!this.isClosing&&this.wasOpened},t.prototype.mute=function(e){var t=r.SdkSignalFrame.create();t.type=r.SdkSignalFrame.Type.AUDIO_CONTROL;var a=r.SdkAudioControlFrame.create();a.muted=e,t.audioControl=a,this.sendMessage(t)},t.prototype.pause=function(e){var t=r.SdkSignalFrame.create();t.type=r.SdkSignalFrame.Type.PAUSE,t.pause=r.SdkPauseResumeFrame.create(),t.pause.streamIds=e,this.sendMessage(t)},t.prototype.resume=function(e){var t=r.SdkSignalFrame.create();t.type=r.SdkSignalFrame.Type.RESUME,t.pause=r.SdkPauseResumeFrame.create(),t.pause.streamIds=e,this.sendMessage(t)},t.prototype.resetConnection=function(){this.webSocket.destroy(),this.wasOpened=!1},t.prototype.sendMessage=function(e){e.timestampMs=Date.now(),this.logger.debug((function(){return"sending: "+JSON.stringify(e)}));var t=this.prependWithFrameTypeRTC(r.SdkSignalFrame.encode(e).finish());if(this.ready()){if(!this.webSocket.send(t))return void this.sendEvent(new o.default(this,c.default.WebSocketSendMessageFailure,null));this.sendEvent(new o.default(this,c.default.WebSocketSentMessage,null))}else this.sendEvent(new o.default(this,c.default.WebSocketSkippedMessage,null))},t.prototype.receiveMessage=function(e){var t;try{t=r.SdkSignalFrame.decode(e)}catch(t){return this.logger.info("failed to decode: "+e),void this.sendEvent(new o.default(this,c.default.ProtocolDecodeFailure,null))}this.logger.debug((function(){return"received: "+JSON.stringify(t)})),this.webSocket.readyState()===i.default.Open?this.sendEvent(new o.default(this,c.default.ReceivedSignalFrame,t)):this.logger.info("skipping notification of message since WebSocket is not open: "+JSON.stringify(t))},t.prototype.stripFrameTypeRTC=function(e){var a=e[0];return a!==t.FRAME_TYPE_RTC&&2!==a&&this.logger.warn("expected FrameTypeRTC for message but got "+a),e.slice(1)},t.prototype.prependWithFrameTypeRTC=function(e){var a=new Uint8Array(e.length+1);return a[0]=t.FRAME_TYPE_RTC,a.set(e,1),a},t.prototype.serviceConnectionRequestQueue=function(){if(0!==this.connectionRequestQueue.length){var e=this.connectionRequestQueue.shift();this.logger.info("opening connection to "+e.url()),this.isClosing=!1,this.webSocket.create(e.url(),e.protocols()),this.setUpEventListeners(),this.sendEvent(new o.default(this,c.default.WebSocketConnecting,null))}else this.logger.info("no connection requests to service")},t.prototype.sendEvent=function(e){var t,a,r=this;switch(e.type){case c.default.WebSocketMessage:case c.default.ReceivedSignalFrame:case c.default.WebSocketSentMessage:this.logger.debug((function(){return"notifying event: "+c.default[e.type]}));break;case c.default.WebSocketSkippedMessage:this.logger.debug((function(){return"notifying event: "+c.default[e.type]+", websocket state="+i.default[r.webSocket.readyState()]}));break;default:this.logger.info("notifying event: "+c.default[e.type])}try{for(var o=n(this.observerQueue),s=o.next();!s.done;s=o.next()){s.value.handleSignalingClientEvent(e)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}},t.prototype.setUpEventListeners=function(){var e=this;this.webSocket.addEventListener("open",(function(){e.activatePageUnloadHandler(),e.wasOpened=!0,e.sendEvent(new o.default(e,c.default.WebSocketOpen,null))})),this.webSocket.addEventListener("message",(function(t){e.sendEvent(new o.default(e,c.default.WebSocketMessage,null)),e.receiveMessage(e.stripFrameTypeRTC(new Uint8Array(t.data)))})),this.webSocket.addEventListener("close",(function(){e.deactivatePageUnloadHandler(),e.resetConnection(),e.sendEvent(new o.default(e,c.default.WebSocketClosed,null)),e.serviceConnectionRequestQueue()})),this.webSocket.addEventListener("error",(function(){!e.isClosing||e.wasOpened?e.wasOpened?(e.logger.error("received error while connected"),e.sendEvent(new o.default(e,c.default.WebSocketError,null))):(e.logger.error("failed to connect"),e.sendEvent(new o.default(e,c.default.WebSocketFailed,null))):e.logger.info("ignoring error closing signaling while connecting")}))},t.prototype.activatePageUnloadHandler=function(){var t=this;this.unloadHandler=function(){t.leave()};var a=e;a.window&&a.window.addEventListener&&window.addEventListener("unload",this.unloadHandler)},t.prototype.deactivatePageUnloadHandler=function(){var t=e;t.window&&t.window.addEventListener&&window.removeEventListener("unload",this.unloadHandler),this.unloadHandler=null},t.FRAME_TYPE_RTC=5,t}();t.default=s}).call(this,a(19))},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(3),r=function(){function e(e,t,a){this.client=e,this.type=t,this.message=a,this.timestampMs=Date.now()}return e.prototype.isConnectionTerminated=function(){switch(this.type){case n.default.WebSocketFailed:case n.default.WebSocketError:case n.default.WebSocketClosing:case n.default.WebSocketClosed:return!0;default:return!1}},e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=a(4),o=a(27),c=a(28),s=a(91),d=a(93),u=a(1),f=a(94),l=a(95),h=a(9),b=a(2),p=a(25),v=a(17),m=function(){function e(t,a,n){void 0===n&&(n=e.INTERVAL_MS),this.audioVideoController=t,this.logger=a,this.interval=n,this.intervalScheduler=null,this.browserBehavior=new i.default,this.metricsAddTime=function(e,t,a){},this.metricsLogEvent=function(e,t){}}return e.prototype.toAttribute=function(e){return this.toSuffix(e).substring(1)},e.prototype.toSuffix=function(e){return e.toLowerCase()===e?"_"+e:e.toUpperCase()===e?"_"+e.toLowerCase():e.replace(/([A-Z][a-z]+)/g,(function(e){return"_"+e})).replace(/([A-Z][A-Z]+)/g,(function(e){return"_"+e})).toLowerCase()},e.prototype.logLatency=function(e,t,a){var n=this.toSuffix(e);this.logEventTime("meeting"+n,t,a)},e.prototype.logStateTimeout=function(e,t){var a=this.toSuffix(e);this.logEvent("meeting_session_state_timeout",n(n({},t),{state:"state"+a}))},e.prototype.logAudioEvent=function(e,t){var a="audio"+this.toSuffix(p.default[e]);this.logEvent(a,t)},e.prototype.logVideoEvent=function(e,t){var a="video"+this.toSuffix(v.default[e]);this.logEvent(a,t)},e.prototype.logEventTime=function(t,a,r){void 0===r&&(r={});var i=n(n({},r),{call_id:this.audioVideoController.configuration.meetingId,client_type:e.CLIENT_TYPE,metric_type:"latency"});this.logger.debug((function(){return"[DefaultStatsCollector] "+t+": "+JSON.stringify(i)})),this.metricsAddTime(t,a,i)},e.prototype.logMeetingSessionStatus=function(e){var t=""+e.statusCode();this.logEvent(t);var a={status:t,status_code:""+e.statusCode()};this.logEvent("meeting_session_status",a),e.isTerminal()&&this.logEvent("meeting_session_stopped",a),e.isAudioConnectionFailure()&&this.logEvent("meeting_session_audio_failed",a),e.isFailure()&&this.logEvent("meeting_session_failed",a)},e.prototype.logLifecycleEvent=function(e,t){var a={lifecycle_event:"lifecycle"+this.toSuffix(f.default[e]),lifecycle_event_code:""+e,lifecycle_event_condition:"condition"+this.toSuffix(l.default[t]),lifecycle_event_condition_code:""+t};this.logEvent("meeting_session_lifecycle",a)},e.prototype.logEvent=function(t,a){void 0===a&&(a={});var r=n(n({},a),{call_id:this.audioVideoController.configuration.meetingId,client_type:e.CLIENT_TYPE});this.logger.debug((function(){return"[DefaultStatsCollector] "+t+": "+JSON.stringify(r)})),this.metricsLogEvent(t,r)},e.prototype.start=function(e,t,a){var n=this;return!this.intervalScheduler&&(this.logger.info("Starting DefaultStatsCollector"),this.signalingClient=e,this.videoStreamIndex=t,this.clientMetricReport=a||new s.default(this.logger),this.intervalScheduler=new h.default(this.interval),this.intervalScheduler.start((function(){n.getStatsWrapper()})),!0)},e.prototype.stop=function(){this.logger.info("Stopping DefaultStatsCollector"),this.intervalScheduler&&this.intervalScheduler.stop(),this.intervalScheduler=null},e.prototype.updateMetricValues=function(e,t){var a,n=t?this.clientMetricReport.streamMetricReports[Number(e.ssrc)]:this.clientMetricReport.globalMetricReport;for(var r in a=t?this.clientMetricReport.getMetricMap(n.mediaType,n.direction):this.clientMetricReport.getMetricMap(),e)r in a&&(n.previousMetrics[r]=n.currentMetrics[r],n.currentMetrics[r]=e[r])},e.prototype.processRawMetricReports=function(e){var t,a;this.clientMetricReport.currentSsrcs={};var n=Date.now();try{for(var i=r(e),o=i.next();!o.done;o=i.next()){var c=o.value,s=this.isStreamRawMetricReport(c.type);if(s){if(!this.clientMetricReport.streamMetricReports[Number(c.ssrc)]){var u=new d.default;u.mediaType=this.getMediaType(c),u.direction=this.getDirectionType(c),this.videoStreamIndex.allStreams().empty()||(u.streamId=this.videoStreamIndex.streamIdForSSRC(Number(c.ssrc))),this.clientMetricReport.streamMetricReports[Number(c.ssrc)]=u}this.clientMetricReport.currentSsrcs[Number(c.ssrc)]=1}this.updateMetricValues(c,s)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}this.clientMetricReport.removeDestroyedSsrcs(),this.clientMetricReport.previousTimestampMs=this.clientMetricReport.currentTimestampMs,this.clientMetricReport.currentTimestampMs=n,this.clientMetricReport.print()},e.prototype.addMetricFrame=function(e,t,a,n){var r=a.type,i=a.transform,o=a.source,c=t.streamMetricFrames.length,s=t.streamMetricFrames[c-1];if(r){var d=b.SdkMetric.create();d.type=r,d.value=i(o||e,n),n?s.metrics.push(d):t.globalMetrics.push(d)}},e.prototype.addGlobalMetricsToProtobuf=function(e){var t=this.clientMetricReport.getMetricMap();for(var a in this.clientMetricReport.globalMetricReport.currentMetrics)this.addMetricFrame(a,e,t[a])},e.prototype.addStreamMetricsToProtobuf=function(e){for(var t in this.clientMetricReport.streamMetricReports){var a=this.clientMetricReport.streamMetricReports[t],n=b.SdkStreamMetricFrame.create();n.streamId=a.streamId,n.metrics=[],e.streamMetricFrames.push(n);var r=this.clientMetricReport.getMetricMap(a.mediaType,a.direction);for(var i in a.currentMetrics)this.addMetricFrame(i,e,r[i],Number(t))}},e.prototype.makeClientMetricProtobuf=function(){var e=b.SdkClientMetricFrame.create();return e.globalMetrics=[],e.streamMetricFrames=[],this.addGlobalMetricsToProtobuf(e),this.addStreamMetricsToProtobuf(e),e},e.prototype.sendClientMetricProtobuf=function(e){this.signalingClient.sendClientMetrics(e)},e.prototype.isStreamRawMetricReport=function(e){return"ssrc"===e||"inbound-rtp"===e||"outbound-rtp"===e},e.prototype.getMediaType=function(e){return"audio"===e.mediaType?c.default.AUDIO:c.default.VIDEO},e.prototype.getDirectionType=function(e){return-1!==e.id.toLowerCase().indexOf("send")||-1!==e.id.toLowerCase().indexOf("outbound")?o.default.UPSTREAM:o.default.DOWNSTREAM},e.prototype.isValidChromeRawMetric=function(e){return this.browserBehavior.hasChromiumWebRTC()&&("ssrc"===e.type||"VideoBwe"===e.type||"googCandidatePair"===e.type&&"true"===e.googWritable&&"true"===e.googReadable)},e.prototype.isValidStandardRawMetric=function(t){var a="inbound-rtp"===t.type||"outbound-rtp"===t.type||"candidate-pair"===t.type&&"succeeded"===t.state;return this.browserBehavior.hasFirefoxWebRTC()?-1===this.compareMajorVersion(e.FIREFOX_UPDATED_GET_STATS_VERSION)?a:a&&!1===t.isRemote:a},e.prototype.isValidSsrc=function(e){var t=!0;return this.isStreamRawMetricReport(e.type)&&this.getDirectionType(e)===o.default.DOWNSTREAM&&this.getMediaType(e)===c.default.VIDEO&&(t=this.videoStreamIndex.streamIdForSSRC(Number(e.ssrc))>0),t},e.prototype.isValidRawMetricReport=function(e){return(this.isValidChromeRawMetric(e)||this.isValidStandardRawMetric(e))&&this.isValidSsrc(e)},e.prototype.filterRawMetricReports=function(e){var t,a,n=[];try{for(var i=r(e),o=i.next();!o.done;o=i.next()){var c=o.value;this.isValidRawMetricReport(c)&&n.push(c)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return n},e.prototype.handleRawMetricReports=function(e){var t=this,a=this.filterRawMetricReports(e);this.logger.debug((function(){return"Filtered raw metrics : "+JSON.stringify(a)})),this.processRawMetricReports(a);var n=this.makeClientMetricProtobuf();this.sendClientMetricProtobuf(n),this.audioVideoController.forEachObserver((function(e){u.default.of(e.metricsDidReceive).map((function(a){return a.bind(e)(t.clientMetricReport.clone())}))}))},e.prototype.getStatsWrapper=function(){var e=this;if(this.audioVideoController.rtcPeerConnection){var t=[];this.browserBehavior.requiresPromiseBasedWebRTCGetStats()?this.audioVideoController.rtcPeerConnection.getStats().then((function(a){a.forEach((function(e){t.push(e)})),e.handleRawMetricReports(t)})).catch((function(t){e.logger.error(t.message)})):this.audioVideoController.rtcPeerConnection.getStats((function(a){a.result().forEach((function(e){var a={};e.names().forEach((function(t){a[t]=e.stat(t)})),a.id=e.id,a.type=e.type,a.timestamp=e.timestamp,t.push(a)})),e.handleRawMetricReports(t)}),(function(t){e.logger.error(t.message)}))}},e.prototype.compareMajorVersion=function(e){var t=parseInt(this.browserBehavior.version().split(".")[0]),a=parseInt(e.split(".")[0]);return a===t?0:a>t?1:-1},e.INTERVAL_MS=1e3,e.FIREFOX_UPDATED_GET_STATS_VERSION="66.0.0",e.CLIENT_TYPE="amazon-chime-sdk-js",e}();t.default=m},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(2),r=a(27),i=a(28),o=a(92),c=function(){function e(e){var t=this;this.logger=e,this.globalMetricReport=new o.default,this.streamMetricReports={},this.currentTimestampMs=0,this.previousTimestampMs=0,this.currentSsrcs={},this.identityValue=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport;return Number(n.currentMetrics[e])},this.decoderLossPercent=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport,r=n.currentMetrics.googDecodingNormal-(n.previousMetrics.googDecodingNormal||0),i=n.currentMetrics.googDecodingCTN-(n.previousMetrics.googDecodingCTN||0);if(i<=0)return 0;var o=i-r;return o<=0?0:100*o/i},this.packetLossPercent=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport,r=n.currentMetrics[e]-(n.previousMetrics[e]||0),i=n.currentMetrics.packetsLost-(n.previousMetrics.packetsLost||0),o=r+i;return o<=0||i<=0?0:100*i/o},this.countPerSecond=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport,r=(t.currentTimestampMs-t.previousTimestampMs)/1e3;if(r<=0)return 0;t.previousTimestampMs<=0&&(r=1);var i=n.currentMetrics[e]-(n.previousMetrics[e]||0);return i<=0?0:Math.trunc(i/r)},this.bitsPerSecond=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport,r=(t.currentTimestampMs-t.previousTimestampMs)/1e3;if(r<=0)return 0;t.previousTimestampMs<=0&&(r=1);var i=8*(n.currentMetrics[e]-(n.previousMetrics[e]||0));return i<=0?0:Math.trunc(i/r)},this.secondsToMilliseconds=function(e,a){var n=a?t.streamMetricReports[a]:t.globalMetricReport;return Number(1e3*n.currentMetrics[e])},this.globalMetricMap={googActualEncBitrate:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_ACTUAL_ENCODER_BITRATE},googAvailableSendBandwidth:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH},googRetransmitBitrate:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_RETRANSMIT_BITRATE},googAvailableReceiveBandwidth:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH},googTargetEncBitrate:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_TARGET_ENCODER_BITRATE},googBucketDelay:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_BUCKET_DELAY_MS},googRtt:{transform:this.identityValue,type:n.SdkMetric.Type.STUN_RTT_MS},packetsDiscardedOnSend:{transform:this.countPerSecond,type:n.SdkMetric.Type.SOCKET_DISCARDED_PPS},availableIncomingBitrate:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH},availableOutgoingBitrate:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH},currentRoundTripTime:{transform:this.identityValue,type:n.SdkMetric.Type.STUN_RTT_MS}},this.audioUpstreamMetricMap={googJitterReceived:{transform:this.identityValue,type:n.SdkMetric.Type.RTC_MIC_JITTER_MS},jitter:{transform:this.secondsToMilliseconds,type:n.SdkMetric.Type.RTC_MIC_JITTER_MS},packetsSent:{transform:this.countPerSecond,type:n.SdkMetric.Type.RTC_MIC_PPS},bytesSent:{transform:this.bitsPerSecond,type:n.SdkMetric.Type.RTC_MIC_BITRATE},googRtt:{transform:this.identityValue,type:n.SdkMetric.Type.RTC_MIC_RTT_MS},packetsLost:{transform:this.packetLossPercent,type:n.SdkMetric.Type.RTC_MIC_FRACTION_PACKET_LOST_PERCENT,source:"packetsSent"}},this.audioDownstreamMetricMap={packetsReceived:{transform:this.countPerSecond,type:n.SdkMetric.Type.RTC_SPK_PPS},packetsLost:{transform:this.packetLossPercent,type:n.SdkMetric.Type.RTC_SPK_FRACTION_PACKET_LOST_PERCENT,source:"packetsReceived"},googJitterReceived:{transform:this.identityValue,type:n.SdkMetric.Type.RTC_SPK_JITTER_MS},jitter:{transform:this.secondsToMilliseconds,type:n.SdkMetric.Type.RTC_SPK_JITTER_MS},googDecodingCTN:{transform:this.countPerSecond},googDecodingNormal:{transform:this.decoderLossPercent,type:n.SdkMetric.Type.RTC_SPK_FRACTION_DECODER_LOSS_PERCENT,source:"googDecodingCTN"},bytesReceived:{transform:this.bitsPerSecond,type:n.SdkMetric.Type.RTC_SPK_BITRATE},googCurrentDelayMs:{transform:this.identityValue,type:n.SdkMetric.Type.RTC_SPK_CURRENT_DELAY_MS},googJitterBufferMs:{transform:this.identityValue,type:n.SdkMetric.Type.RTC_SPK_JITTER_BUFFER_MS}},this.videoUpstreamMetricMap={googRtt:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_SENT_RTT_MS},googEncodeUsagePercent:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_ENCODE_USAGE_PERCENT},googNacksReceived:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_NACKS_RECEIVED},nackCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_NACKS_RECEIVED},googPlisReceived:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_PLIS_RECEIVED},pliCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_PLIS_RECEIVED},googFirsReceived:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_FIRS_RECEIVED},firCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_FIRS_RECEIVED},googAvgEncodeMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_AVERAGE_ENCODE_MS},googFrameRateInput:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_INPUT_FPS},framesEncoded:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_ENCODE_FPS},googFrameRateSent:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_SENT_FPS},framerateMean:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_SENT_FPS},packetsSent:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_SENT_PPS},packetsLost:{transform:this.packetLossPercent,type:n.SdkMetric.Type.VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT,source:"packetsSent"},bytesSent:{transform:this.bitsPerSecond,type:n.SdkMetric.Type.VIDEO_SENT_BITRATE},droppedFrames:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_DROPPED_FPS}},this.videoDownstreamMetricMap={googTargetDelayMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_TARGET_DELAY_MS},googDecodeMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_DECODE_MS},googFrameRateOutput:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_OUTPUT_FPS},packetsReceived:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_RECEIVED_PPS},packetsLost:{transform:this.packetLossPercent,type:n.SdkMetric.Type.VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT,source:"packetsReceived"},googRenderDelayMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_RENDER_DELAY_MS},googFrameRateReceived:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_RECEIVED_FPS},framerateMean:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_RECEIVED_FPS},framesDecoded:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_DECODE_FPS},googNacksSent:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_NACKS_SENT},nackCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_NACKS_SENT},googFirsSent:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_FIRS_SENT},firCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_FIRS_SENT},googPlisSent:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_PLIS_SENT},pliCount:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_PLIS_SENT},bytesReceived:{transform:this.bitsPerSecond,type:n.SdkMetric.Type.VIDEO_RECEIVED_BITRATE},googCurrentDelayMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_CURRENT_DELAY_MS},googJitterBufferMs:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_JITTER_BUFFER_MS},discardedPackets:{transform:this.countPerSecond,type:n.SdkMetric.Type.VIDEO_DISCARDED_PPS},googJitterReceived:{transform:this.identityValue,type:n.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS},jitter:{transform:this.secondsToMilliseconds,type:n.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS}},this.observableMetricSpec={audioPacketsReceived:{source:"packetsReceived",media:i.default.AUDIO,dir:r.default.DOWNSTREAM},audioPacketsReceivedFractionLoss:{source:"packetsLost",media:i.default.AUDIO,dir:r.default.DOWNSTREAM},audioDecoderLoss:{source:"googDecodingNormal",media:i.default.AUDIO,dir:r.default.DOWNSTREAM},videoUpstreamBitrate:{source:"bytesSent",media:i.default.VIDEO,dir:r.default.UPSTREAM},videoPacketSentPerSecond:{source:"packetsSent",media:i.default.VIDEO,dir:r.default.UPSTREAM},availableSendBandwidth:{source:"googAvailableSendBandwidth"},availableReceiveBandwidth:{source:"googAvailableReceiveBandwidth"},audioSpeakerDelayMs:{source:"googCurrentDelayMs",media:i.default.AUDIO,dir:r.default.DOWNSTREAM},availableIncomingBitrate:{source:"availableIncomingBitrate"},availableOutgoingBitrate:{source:"availableOutgoingBitrate"}}}return e.prototype.getMetricMap=function(e,t){switch(e){case i.default.AUDIO:switch(t){case r.default.UPSTREAM:return this.audioUpstreamMetricMap;case r.default.DOWNSTREAM:return this.audioDownstreamMetricMap}case i.default.VIDEO:switch(t){case r.default.UPSTREAM:return this.videoUpstreamMetricMap;case r.default.DOWNSTREAM:return this.videoDownstreamMetricMap}default:return this.globalMetricMap}},e.prototype.getObservableMetricValue=function(e){var t=this.observableMetricSpec[e],a=this.getMetricMap(t.media,t.dir)[t.source],n=a.transform,r=a.source;if(!t.hasOwnProperty("media"))return n(r||t.source);for(var i in this.streamMetricReports){var o=this.streamMetricReports[i];if(t.source in o.currentMetrics&&o.direction===t.dir&&o.mediaType===t.media)return n(r||t.source,Number(i))}return 0},e.prototype.getObservableMetrics=function(){var e={};for(var t in this.observableMetricSpec)e[t]=this.getObservableMetricValue(t);return e},e.prototype.clone=function(){var t=new e(this.logger);return t.globalMetricReport=this.globalMetricReport,t.streamMetricReports=this.streamMetricReports,t.currentTimestampMs=this.currentTimestampMs,t.previousTimestampMs=this.previousTimestampMs,t},e.prototype.print=function(){var e={globalMetricReport:this.globalMetricReport,streamMetricReports:this.streamMetricReports,currentTimestampMs:this.currentTimestampMs,previousTimestampMs:this.previousTimestampMs};this.logger.debug((function(){return"Client Metric Report: "+JSON.stringify(e)}))},e.prototype.removeDestroyedSsrcs=function(){for(var e in this.streamMetricReports)this.currentSsrcs[e]||delete this.streamMetricReports[e]},e}();t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.previousMetrics={},this.currentMetrics={}};t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.previousMetrics={},this.currentMetrics={}};t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Connecting=0]="Connecting",e[e.Started=1]="Started",e[e.Stopped=2]="Stopped"}(n=t.MeetingSessionLifecycleEvent||(t.MeetingSessionLifecycleEvent={})),t.default=n},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.ConnectingNew=0]="ConnectingNew",e[e.ReconnectingExisting=1]="ReconnectingExisting",e[e.StartedNew=2]="StartedNew",e[e.StartedExisting=3]="StartedExisting",e[e.StartedAfterReconnect=4]="StartedAfterReconnect",e[e.StoppedCleanly=5]="StoppedCleanly",e[e.StoppedWithFailure=6]="StoppedWithFailure"}(n=t.MeetingSessionLifecycleEventCondition||(t.MeetingSessionLifecycleEventCondition={})),t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(10),s=a(13),d=function(e){function t(a,n){void 0===n&&(n=t.CHROME_VPN_TIMEOUT_MS);var r=e.call(this,a.logger)||this;return r.context=a,r.chromeVpnTimeoutMs=n,r.taskName="FinishGatheringICECandidatesTask",r}return r(t,e),t.prototype.removeEventListener=function(){this.context.peer&&this.context.peer.removeEventListener("icecandidate",this.context.iceCandidateHandler)},t.prototype.cancel=function(){var e=new Error("canceling "+this.name());this.context.browserBehavior.requiresIceCandidateGatheringTimeoutWorkaround()&&(this.chromeVpnTimeoutMs<this.context.meetingSessionConfiguration.connectionTimeoutMs&&Date.now()-this.startTimestampMs>this.chromeVpnTimeoutMs&&(e=new Error("canceling "+this.name()+" due to the meeting status code: "+c.default.ICEGatheringTimeoutWorkaround)));this.cancelPromise&&this.cancelPromise(e)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e=this;return o(this,(function(t){switch(t.label){case 0:if(this.context.peer||this.logAndThrow("session does not have peer connection; bypass ice gathering"),this.context.browserBehavior.requiresCheckForSdpConnectionAttributes()){if(new s.default(this.context.peer.localDescription.sdp).hasCandidatesForAllMLines())return this.context.logger.info("ice gathering already complete; bypass gathering, current local description "+this.context.peer.localDescription.sdp),[2]}else this.context.logger.info("iOS device does not require checking for connection attributes in SDP, current local description "+this.context.peer.localDescription.sdp);return"complete"===this.context.peer.iceGatheringState&&new s.default(this.context.peer.localDescription.sdp).hasCandidates()?(this.context.logger.info("ice gathering state is complete and candidates are in SDP; bypass gathering"),[2]):[4,new Promise((function(t,a){e.cancelPromise=function(t){e.removeEventListener(),a(t)},e.context.iceCandidateHandler=function(n){if(e.context.logger.info("ice candidate: "+(n.candidate?n.candidate.candidate:"(null)")+" state: "+e.context.peer.iceGatheringState),n.candidate&&(s.default.isRTPCandidate(n.candidate.candidate)&&e.context.iceCandidates.push(n.candidate),e.context.turnCredentials&&e.context.iceCandidates.length>=1))return e.context.logger.info("gathered at least one relay candidate"),e.removeEventListener(),void t();"complete"===e.context.peer.iceGatheringState&&(e.context.logger.info("done gathering ice candidates"),e.removeEventListener(),new s.default(e.context.peer.localDescription.sdp).hasCandidates()&&0!==e.context.iceCandidates.length?t():a(new Error("no ice candidates were gathered")))},e.context.peer.addEventListener("icecandidate",e.context.iceCandidateHandler),e.startTimestampMs=Date.now()}))];case 1:return t.sent(),[2]}}))}))},t.CHROME_VPN_TIMEOUT_MS=5e3,t}(a(0).default);t.default=d},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(3),s=a(98),d=a(2),u=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="JoinAndReceiveIndexTask",a.taskCanceler=null,a.maxVideos=16,a}return r(t,e),t.prototype.cancel=function(){this.taskCanceler&&(this.taskCanceler.cancel(),this.taskCanceler=null)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(a){switch(a.label){case 0:return[4,new Promise((function(e,a){var n=new(function(){function t(e){this.signalingClient=e}return t.prototype.cancel=function(){this.signalingClient.removeObserver(this),a(new Error("JoinAndReceiveIndexTask got canceled while waiting for SdkIndexFrame"))},t.prototype.handleSignalingClientEvent=function(t){if(t.type===c.default.ReceivedSignalFrame&&t.message.type===d.SdkSignalFrame.Type.INDEX){this.signalingClient.removeObserver(this);var a=t.message.index;e(a)}},t}())(t.context.signalingClient);t.context.signalingClient.registerObserver(n),t.taskCanceler=n,t.context.signalingClient.join(new s.default(t.maxVideos,!0))}))];case 1:return e=a.sent(),this.context.logger.info("received first index "+JSON.stringify(e)),this.context.indexFrame=e,[2]}}))}))},t}(a(0).default);t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){this.maxVideos=e,this.sendBitrates=t};t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(3),s=a(2),d=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="LeaveAndReceiveLeaveAckTask",a.taskCanceler=null,a}return r(t,e),t.prototype.cancel=function(){this.taskCanceler&&(this.taskCanceler.cancel(),this.taskCanceler=null)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return this.context.signalingClient.ready()?(this.context.signalingClient.leave(),this.context.logger.info("sent leave"),[4,this.receiveLeaveAck()]):[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.receiveLeaveAck=function(){var e=this;return new Promise((function(t,a){var n=new(function(){function e(e,t){this.signalingClient=e,this.logger=t}return e.prototype.cancel=function(){this.signalingClient.removeObserver(this),a(new Error("LeaveAndReceiveLeaveAckTask got canceled while waiting for IndexFrame"))},e.prototype.handleSignalingClientEvent=function(e){if(e.isConnectionTerminated())return this.signalingClient.removeObserver(this),this.logger.info("LeaveAndReceiveLeaveAckTask connection terminated"),void t();e.type===c.default.ReceivedSignalFrame&&e.message.type===s.SdkSignalFrame.Type.LEAVE_ACK&&(this.signalingClient.removeObserver(this),this.logger.info("got leave ack"),t())},e}())(e.context.signalingClient,e.context.logger);e.taskCanceler=n,e.context.signalingClient.registerObserver(n)}))},t}(a(0).default);t.default=d},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(3),s=a(2),d=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="ListenForVolumeIndicatorsTask",a.realtimeMuteAndUnmuteHandler=function(e){a.context.signalingClient.mute(e)},a}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){return this.context.removableObservers.push(this),this.context.signalingClient.registerObserver(this),this.context.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler),[2]}))}))},t.prototype.removeObserver=function(){this.context.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler),this.context.signalingClient.removeObserver(this)},t.prototype.handleSignalingClientEvent=function(e){if(e.type===c.default.ReceivedSignalFrame)if(e.message.type===s.SdkSignalFrame.Type.AUDIO_STREAM_ID_INFO){var t=e.message.audioStreamIdInfo;this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioStreamIdInfo(t)}else if(e.message.type===s.SdkSignalFrame.Type.AUDIO_METADATA){var a=e.message.audioMetadata;this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioMetadata(a)}},t}(a(0).default);t.default=d},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},o=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(102),d=a(103),u=a(1),f=a(31),l=a(10),h=a(3),b=a(25),p=a(17),v=function(e){function t(t,a,n){var r=e.call(this,t.logger)||this;return r.context=t,r.initialConnectionHealthData=n,r.taskName="MonitorTask",r.prevSignalStrength=1,r.checkAndSendWeakSignalEvent=function(e){var t=e<1,a=r.prevSignalStrength<1,n=t?a?null:b.default.RedmicStartLoss:a?b.default.RedmicEndLoss:null;n&&r.context.statsCollector.logAudioEvent(n),r.prevSignalStrength=e},r.realtimeFatalErrorCallback=function(e){r.logger.error("realtime error: "+e+": "+e.stack),r.context.audioVideoController.handleMeetingSessionStatus(new f.default(l.default.RealtimeApiFailed))},r.reconnectionHealthPolicy=new s.default(t.logger,i({},a),r.initialConnectionHealthData.clone()),r.unusableAudioWarningHealthPolicy=new d.default(i({},a),r.initialConnectionHealthData.clone()),r}return r(t,e),t.prototype.removeObserver=function(){this.context.audioVideoController.removeObserver(this),this.context.realtimeController.realtimeUnsubscribeToFatalError(this.realtimeFatalErrorCallback),this.context.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent),this.context.signalingClient.removeObserver(this)},t.prototype.run=function(){return o(this,void 0,void 0,(function(){return c(this,(function(e){return this.context.removableObservers.push(this),this.context.audioVideoController.addObserver(this),this.context.realtimeController.realtimeSubscribeToFatalError(this.realtimeFatalErrorCallback),this.context.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent),this.context.connectionMonitor.start(),this.context.statsCollector.start(this.context.signalingClient,this.context.videoStreamIndex),this.context.signalingClient.registerObserver(this),[2]}))}))},t.prototype.videoSendHealthDidChange=function(e,a){if(0!==this.context.videoInputAttachedTimestampMs&&this.context.videoTileController.hasStartedLocalVideoTile()&&this.context.lastKnownVideoAvailability.canStartLocalVideo){var n=null!==this.context.activeVideoInput?this.context.activeVideoInput.getTracks():null;if(n&&n[0]){var r=Date.now()-this.context.videoInputAttachedTimestampMs;a>0||e>0?(this.context.statsCollector.logVideoEvent(p.default.SendingSuccess,this.context.videoDeviceInformation),this.context.statsCollector.logLatency("video_start_sending",r,this.context.videoDeviceInformation),this.context.videoInputAttachedTimestampMs=0):r>t.DEFAULT_TIMEOUT_FOR_START_SENDING_VIDEO_MS&&(this.context.statsCollector.logVideoEvent(p.default.SendingFailed,this.context.videoDeviceInformation),this.context.videoInputAttachedTimestampMs=0)}}},t.prototype.videoReceiveBandwidthDidChange=function(e,t){if(this.context.videoDownlinkBandwidthPolicy){this.logger.debug((function(){return"receiving bandwidth changed from prev="+t+" Kbps to curr="+e+" Kbps"})),this.context.videoDownlinkBandwidthPolicy.updateAvailableBandwidth(e);var a=this.context.videoDownlinkBandwidthPolicy.wantsResubscribe();a&&(this.context.videosToReceive=this.context.videoDownlinkBandwidthPolicy.chooseSubscriptions(),this.logger.info("trigger resubscribe for down="+a+"; videosToReceive=["+this.context.videosToReceive.array()+"]"),this.context.audioVideoController.update())}},t.prototype.connectionHealthDidChange=function(e){0===e.consecutiveMissedPongs&&this.context.reconnectController&&this.context.reconnectController.setLastActiveTimestampMs(Date.now()),this.reconnectionHealthPolicy.update(e);var t=this.reconnectionHealthPolicy.healthIfChanged();null!==t&&(this.logger.info("reconnection health is now: "+t),0===t&&this.context.audioVideoController.handleMeetingSessionStatus(new f.default(l.default.ConnectionHealthReconnect))),this.unusableAudioWarningHealthPolicy.update(e);var a=this.unusableAudioWarningHealthPolicy.healthIfChanged();null!==a&&(this.logger.info("unusable audio warning is now: "+a),0===a&&(this.context.videoTileController.haveVideoTilesWithStreams()?this.context.audioVideoController.forEachObserver((function(e){u.default.of(e.connectionDidSuggestStopVideo).map((function(t){return t.bind(e)()}))})):this.context.audioVideoController.forEachObserver((function(e){u.default.of(e.connectionDidBecomePoor).map((function(t){return t.bind(e)()}))}))))},t.prototype.handleSignalingClientEvent=function(e){if(e.type===h.default.ReceivedSignalFrame){var t=f.default.fromSignalFrame(e.message);t.statusCode()!==l.default.OK&&this.context.audioVideoController.handleMeetingSessionStatus(t)}},t.DEFAULT_TIMEOUT_FOR_START_SENDING_VIDEO_MS=3e4,t}(a(0).default);t.default=v},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(a,n,r){var i=e.call(this,n,r)||this;return i.logger=a,i.audioDelayPointsOverMaximum=0,t.CONNECTION_UNHEALTHY_THRESHOLD=n.connectionUnhealthyThreshold,t.CONNECTION_WAIT_TIME_MS=n.connectionWaitTimeMs,t.MISSED_PONGS_THRESHOLD=n.missedPongsUpperThreshold,t.MAXIMUM_AUDIO_DELAY_MS=n.maximumAudioDelayMs,t.MAXIMUM_AUDIO_DELAY_DATA_POINTS=n.maximumAudioDelayDataPoints,i}return r(t,e),t.prototype.health=function(){if(this.currentData.isConnectionStartRecent(t.CONNECTION_WAIT_TIME_MS))return 1;var e=this.currentData.consecutiveStatsWithNoPackets>=t.CONNECTION_UNHEALTHY_THRESHOLD,a=this.currentData.consecutiveMissedPongs>=t.MISSED_PONGS_THRESHOLD;this.currentData.audioSpeakerDelayMs>t.MAXIMUM_AUDIO_DELAY_MS?this.audioDelayPointsOverMaximum+=1:this.audioDelayPointsOverMaximum=0;var n=this.audioDelayPointsOverMaximum>t.MAXIMUM_AUDIO_DELAY_DATA_POINTS;return n&&(this.audioDelayPointsOverMaximum=0),e||a||n?(this.logger.warn("reconnection recommended due to: no packets received: "+e+", missed pongs: "+a+", bad audio delay: "+n),0):1},t}(a(26).default);t.default=i},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,a){var n=e.call(this,t,a)||this;return n.coolDownTimeMs=t.cooldownTimeMs,n.pastSamplesToConsider=t.pastSamplesToConsider,n.fractionalLoss=t.fractionalLoss,n.packetsExpected=t.packetsExpected,n.maximumTimesToWarn=t.maximumTimesToWarn,n.lastWarnTimestampMs=0,n.warnCount=0,n}return r(t,e),t.prototype.calculateFractionalLoss=function(){if(this.currentData.packetsReceivedInLastMinute.length<this.pastSamplesToConsider)return 0;for(var e=this.pastSamplesToConsider,t=e*this.packetsExpected,a=0,n=0;n<e;n++)a+=this.currentData.packetsReceivedInLastMinute[n];return Math.min(Math.max(1-a/t,0),1)},t.prototype.health=function(){return Date.now()-this.lastWarnTimestampMs<this.coolDownTimeMs?1:this.calculateFractionalLoss()>=this.fractionalLoss?0!==this.currentHealth&&(this.lastWarnTimestampMs=Date.now(),this.warnCount++,this.warnCount>this.maximumTimesToWarn)?1:0:1},t}(a(26).default);t.default=i},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(105),s=a(3),d=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="OpenSignalingConnectionTask",a.taskCanceler=null,a}return r(t,e),t.prototype.cancel=function(){this.taskCanceler&&(this.taskCanceler.cancel(),this.taskCanceler=null)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(a){switch(a.label){case 0:return e=this.context.meetingSessionConfiguration,this.context.signalingClient.openConnection(new c.default(e.urls.signalingURL,e.credentials.joinToken)),[4,new Promise((function(e,a){var n=new(function(){function t(e){this.signalingClient=e}return t.prototype.cancel=function(){this.signalingClient.removeObserver(this),a(new Error("OpenSignalingConnectionTask got canceled while waiting to open signaling connection"))},t.prototype.handleSignalingClientEvent=function(t){switch(t.type){case s.default.WebSocketOpen:this.signalingClient.removeObserver(this),e();break;case s.default.WebSocketFailed:this.signalingClient.removeObserver(this),a(new Error("WebSocket connection failed"))}},t}())(t.context.signalingClient);t.context.signalingClient.registerObserver(n),t.taskCanceler=n}))];case 1:return a.sent(),[2]}}))}))},t}(a(0).default);t.default=d},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.signalingURL=e,this.sessionToken=t}return e.prototype.url=function(){return this.signalingURL+"?X-Chime-Control-Protocol-Version=3"},e.prototype.protocols=function(){return["_aws_wt_session",this.sessionToken]},e}();t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){function t(t,a,n){var r,i,o=e.call(this,t)||this;o.taskName=a,o.tasksToRunParallel=n;try{for(var s=c(n),d=s.next();!d.done;d=s.next()){d.value.setParent(o)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return o}return r(t,e),t.prototype.cancel=function(){var e,t;try{for(var a=c(this.tasksToRunParallel),n=a.next();!n.done;n=a.next()){var r=n.value;this.logger.info("canceling parallel group task "+this.name()+" subtask "+r.name()),r.cancel()}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i,s,d,u,f;return o(this,(function(o){switch(o.label){case 0:e=[];try{for(t=c(this.tasksToRunParallel),a=t.next();!a.done;a=t.next())n=a.value,this.logger.info("parallel group task "+this.name()+" running subtask "+n.name()),e.push(n.run())}catch(e){u={error:e}}finally{try{a&&!a.done&&(f=t.return)&&f.call(t)}finally{if(u)throw u.error}}r=[],i=0,o.label=1;case 1:if(!(i<e.length))return[3,7];o.label=2;case 2:return o.trys.push([2,4,,5]),[4,e[i]];case 3:return o.sent(),[3,5];case 4:return s=o.sent(),r.push("task "+this.tasksToRunParallel[i].name()+" failed: "+s.message),[3,5];case 5:this.logger.info("parallel group task "+this.name()+" completed subtask "+this.tasksToRunParallel[i].name()),o.label=6;case 6:return i++,[3,1];case 7:return r.length>0&&(d=r.join(", "),this.logAndThrow("parallel group task "+this.name()+" failed for tasks: "+d)),this.logger.info("parallel group task "+this.name()+" completed"),[2]}}))}))},t}(a(0).default);t.default=s},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="ReceiveAudioInputTask",a}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n;return o(this,(function(r){switch(r.label){case 0:if(this.context.activeAudioInput)return this.context.logger.info("an active audio input exists"),[2];e=null,r.label=1;case 1:return r.trys.push([1,3,,4]),[4,this.context.mediaStreamBroker.acquireAudioInputStream()];case 2:return e=r.sent(),[3,4];case 3:return r.sent(),this.context.logger.warn("could not acquire audio input from current device"),[3,4];case 4:if(e)for(this.context.activeAudioInput=e,this.context.realtimeController.realtimeSetLocalAudioInput(e),t=e.getAudioTracks(),a=0;a<t.length;a++)n=t[a],this.logger.info("using audio device label="+n.label+" id="+n.id),this.context.audioDeviceInformation.current_mic_name=n.label,this.context.audioDeviceInformation.current_mic_id=n.id,this.context.audioDeviceInformation.is_default_input_device=-1!==n.label.indexOf("Default")||-1!==n.label.indexOf("default")?"true":"false";else this.context.logger.warn("an audio input is not available");return[2]}}))}))},t}(a(0).default);t.default=c},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(18),s=a(109),d=a(20),u=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="ReceiveTURNCredentialsTask",a.url=t.meetingSessionConfiguration.urls.turnControlURL,a.meetingId=t.meetingSessionConfiguration.meetingId,a.joinToken=t.meetingSessionConfiguration.credentials.joinToken,a}return r(t,e),t.prototype.cancel=function(){var e=new Error("canceling "+this.name());this.cancelPromise&&this.cancelPromise(e)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a=this;return o(this,(function(n){switch(n.label){case 0:return e={method:"POST",mode:"cors",cache:"no-cache",credentials:"omit",headers:{"Content-Type":"application/json","X-Chime-Auth-Token":"_aws_wt_session="+this.joinToken.replace(c.default.Modality,"")},redirect:"follow",referrer:"no-referrer",body:JSON.stringify({meetingId:this.meetingId})},this.context.logger.info("requesting TURN credentials from "+this.url),[4,new Promise((function(t,n){return i(a,void 0,void 0,(function(){var a,r,i;return o(this,(function(o){switch(o.label){case 0:this.cancelPromise=function(e){n(e)},o.label=1;case 1:return o.trys.push([1,4,,5]),[4,fetch(d.default.urlWithVersion(this.url),e)];case 2:return a=o.sent(),this.context.logger.info("received TURN credentials"),r=t,[4,a.json()];case 3:return r.apply(void 0,[o.sent()]),[3,5];case 4:return i=o.sent(),n(i),[3,5];case 5:return[2]}}))}))}))];case 1:return t=n.sent(),this.context.turnCredentials=new s.default,this.context.turnCredentials.password=t.password,this.context.turnCredentials.ttl=t.ttl,this.context.turnCredentials.uris=t.uris.map((function(e){return a.context.meetingSessionConfiguration.urls.urlRewriter(e)})),this.context.turnCredentials.username=t.username,[2]}}))}))},t}(a(0).default);t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){this.username=null,this.password=null,this.ttl=null,this.uris=null};t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(2),s=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="ReceiveVideoInputTask",a}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i,s,d;return o(this,(function(o){switch(o.label){case 0:if(e=this.context.videoDuplexMode===c.SdkStreamServiceType.RX||this.context.videoDuplexMode===c.SdkStreamServiceType.DUPLEX,this.context.videoTileController.hasStartedLocalVideoTile()?this.context.videoDuplexMode=e?c.SdkStreamServiceType.DUPLEX:c.SdkStreamServiceType.TX:this.context.videoDuplexMode=e?c.SdkStreamServiceType.RX:0,this.context.videoCaptureAndEncodeParameter=this.context.videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters(),!this.context.videoTileController.hasStartedLocalVideoTile())return this.context.logger.info("a video input is not enabled"),this.context.activeVideoInput&&this.stopVideoInput(),[2];t=this.context.videoTileController.getLocalVideoTile(),a=null,o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.context.mediaStreamBroker.acquireVideoInputStream()];case 2:return a=o.sent(),[3,4];case 3:return o.sent(),this.context.logger.warn("could not acquire video input from current device"),[3,4];case 4:if(this.context.activeVideoInput=a,a)for(n=a.getVideoTracks(),r=this.context.meetingSessionConfiguration.credentials.attendeeId,i=n[0].getSettings(),t.bindVideoStream(r,!0,a,i.width,i.height,null),s=0;s<n.length;s++)d=n[s],this.logger.info("using video device label="+d.label+" id="+d.id),this.context.videoDeviceInformation.current_camera_name=d.label,this.context.videoDeviceInformation.current_camera_id=d.id;return[2]}}))}))},t.prototype.stopVideoInput=function(){this.context.mediaStreamBroker.releaseMediaStream(this.context.activeVideoInput),this.context.activeVideoInput=null},t}(a(0).default);t.default=s},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=a(1),d=a(32),u=a(3),f=a(2),l=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="ReceiveVideoStreamIndexTask",a}return r(t,e),t.prototype.removeObserver=function(){this.context.signalingClient.removeObserver(this)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){return this.handleIndexFrame(this.context.indexFrame),this.context.signalingClient.registerObserver(this),this.context.removableObservers.push(this),[2]}))}))},t.prototype.handleSignalingClientEvent=function(e){if(e.type===u.default.ReceivedSignalFrame&&e.message.type===f.SdkSignalFrame.Type.INDEX){var t=e.message.index;this.context.logger.info("received new index "+JSON.stringify(t)),this.handleIndexFrame(t)}},t.prototype.handleIndexFrame=function(e){if(e){var t=this.context,a=t.videoStreamIndex,n=t.videoDownlinkBandwidthPolicy,r=t.videoUplinkBandwidthPolicy;a.integrateIndexFrame(e),n.updateIndex(a),r.updateIndex(a),this.resubscribe(n,r),this.updateVideoAvailability(e),this.handleIndexVideosPausedAtSource()}},t.prototype.resubscribe=function(e,t){var a=e.wantsResubscribe(),n=(this.context.videoDuplexMode===f.SdkStreamServiceType.TX||this.context.videoDuplexMode===f.SdkStreamServiceType.DUPLEX)&&t.wantsResubscribe(),r=a||n;this.logger.info("should resubscribe: "+r+" (downlink: "+a+" uplink: "+n+")"),r&&(this.context.videosToReceive=e.chooseSubscriptions(),this.context.videoCaptureAndEncodeParameter=t.chooseCaptureAndEncodeParameters(),this.logger.info("trigger resubscribe for up="+n+" down="+a+"; videosToReceive=["+this.context.videosToReceive.array()+"] captureParams="+JSON.stringify(this.context.videoCaptureAndEncodeParameter)),this.context.audioVideoController.update())},t.prototype.updateVideoAvailability=function(e){if(this.context.videosToReceive){var t=new d.default;t.remoteVideoAvailable=!this.context.videosToReceive.empty(),t.canStartLocalVideo=!e.atCapacity,this.context.lastKnownVideoAvailability&&this.context.lastKnownVideoAvailability.equal(t)||(this.context.lastKnownVideoAvailability=t.clone(),this.context.audioVideoController.forEachObserver((function(e){s.default.of(e.videoAvailabilityDidChange).map((function(a){return a.bind(e)(t.clone())}))})))}else this.logger.error("videosToReceive must be set in the meeting context.")},t.prototype.handleIndexVideosPausedAtSource=function(){var e,t,a=this.context.videoStreamIndex.streamsPausedAtSource();try{for(var n=c(this.context.videoTileController.getAllVideoTiles()),r=n.next();!r.done;r=n.next()){var i=r.value,o=i.state();a.contain(o.streamId)?i.markPoorConnection()&&this.logger.info("marks the tile "+o.tileId+" as having a poor connection"):i.unmarkPoorConnection()&&this.logger.info("unmarks the tile "+o.tileId+" as having a poor connection")}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}},t}(a(0).default);t.default=l},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=a(0),d=a(24),u=function(e){function t(t,a,n){var r,i,o=e.call(this,t)||this;o.taskName=a,o.tasksToRunSerially=n,o.currentTask=null;try{for(var s=c(n),d=s.next();!d.done;d=s.next()){d.value.setParent(o)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return o}return r(t,e),t.prototype.cancel=function(){this.currentTask&&(this.logger.info("canceling serial group task "+this.name()+" subtask "+this.currentTask.name()),this.currentTask.cancel())},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i,s;return o(this,(function(o){switch(o.label){case 0:o.trys.push([0,8,9,10]),e=c(this.tasksToRunSerially),t=e.next(),o.label=1;case 1:if(t.done)return[3,7];a=t.value,this.getStatus()===d.default.CANCELED&&this.logAndThrow("serial group task "+this.name()+" was canceled"),o.label=2;case 2:return o.trys.push([2,4,5,6]),this.logger.info("serial group task "+this.name()+" running subtask "+a.name()),this.currentTask=a,[4,a.run()];case 3:return o.sent(),this.logger.info("serial group task "+this.name()+" completed subtask "+a.name()),[3,6];case 4:return n=o.sent(),this.logAndThrow("serial group task "+this.name()+" was canceled due to subtask "+this.currentTask.name()+" error: "+n.message),[3,6];case 5:return this.currentTask=null,[7];case 6:return t=e.next(),[3,1];case 7:return[3,10];case 8:return r=o.sent(),i={error:r},[3,10];case 9:try{t&&!t.done&&(s=e.return)&&s.call(e)}finally{if(i)throw i.error}return[7];case 10:return this.logger.info("serial group task "+this.name()+" completed"),[2]}}))}))},t}(s.default);t.default=u},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="SetLocalDescriptionTask",a}return r(t,e),t.prototype.cancel=function(){var e=new Error("canceling "+this.name());this.cancelPromise&&this.cancelPromise(e)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a=this;return o(this,(function(n){switch(n.label){case 0:return e=this.context.peer,t=this.context.sdpOfferInit,this.logger.info("local description is >>>"+t.sdp+"<<<"),[4,new Promise((function(n,r){return i(a,void 0,void 0,(function(){var a;return o(this,(function(i){switch(i.label){case 0:this.cancelPromise=function(e){r(e)},i.label=1;case 1:return i.trys.push([1,3,,4]),[4,e.setLocalDescription(t)];case 2:return i.sent(),n(),[3,4];case 3:return a=i.sent(),r(a),[3,4];case 4:return[2]}}))}))}))];case 1:return n.sent(),this.context.logger.info("set local description"),[2]}}))}))},t}(a(0).default);t.default=c},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(13),s=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="SetRemoteDescriptionTask",a}return r(t,e),t.prototype.cancel=function(){this.cancelICEPromise&&this.cancelICEPromise()},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i,s;return o(this,(function(o){switch(o.label){case 0:this.context.peer||this.logAndThrow("session does not have peer connection; bypass set remote description"),e=this.context.sdpAnswer,e=new c.default(e).withoutServerReflexiveCandidates().sdp,this.context.browserBehavior.requiresUnifiedPlan()||(this.logger.info("checking for no videos (plan-b)"),this.context.videosToReceive.empty()&&this.context.peer.remoteDescription&&(this.logger.info("have no videos and have remote description (plan-b)"),t=this.context.peer.localDescription.sdp,n=a=e,(r=new c.default(t)).hasVideo()&&(this.logger.info("offer has video (plan-b): >>>"+r.sdp+"<<<"),i=new c.default(a),this.logger.info("existing answer (plan-b): >>>"+i.sdp+"<<<"),i.hasVideo()||(this.logger.info("copying inactive video from offer into answer (plan-b); sdp answer before is >>>"+a+"<<<"),n=i.copyVideo(t).sdp)),e=n)),this.logger.info("remote description is >>>"+e+"<<<"),s={type:"answer",sdp:e,toJSON:null},o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.createICEConnectionCompletedPromise(s)];case 2:return o.sent(),[3,4];case 3:throw o.sent();case 4:return[2]}}))}))},t.prototype.createICEConnectionCompletedPromise=function(e){var t=this;return new Promise((function(a,n){return i(t,void 0,void 0,(function(){var t,r,i=this;return o(this,(function(o){switch(o.label){case 0:t=function(){"connected"!==i.context.peer.iceConnectionState&&"completed"!==i.context.peer.iceConnectionState||(i.context.peer.removeEventListener("iceconnectionstatechange",t),a())},this.cancelICEPromise=function(){i.context.peer&&i.context.peer.removeEventListener("iceconnectionstatechange",t),n(new Error(i.name()+" got canceled while waiting for the ICE connection state"))},this.context.peer.addEventListener("iceconnectionstatechange",t),o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.context.peer.setRemoteDescription(e)];case 2:return o.sent(),this.logger.info("set remote description, waiting for ICE connection"),t(),[3,4];case 3:return r=o.sent(),n(r),[3,4];case 4:return[2]}}))}))}))},t}(a(0).default);t.default=s},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(13),s=a(3),d=a(116),u=a(2),f=function(e){function t(t){var a=e.call(this,t.logger)||this;return a.context=t,a.taskName="SubscribeAndReceiveSubscribeAckTask",a.taskCanceler=null,a}return r(t,e),t.prototype.cancel=function(){this.taskCanceler&&(this.taskCanceler.cancel(),this.taskCanceler=null)},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t,a,n,r,i;return o(this,(function(o){switch(o.label){case 0:return e="",this.context.peer&&this.context.peer.localDescription&&(e=this.context.browserBehavior.requiresUnifiedPlanMunging()?new c.default(this.context.peer.localDescription.sdp).withUnifiedPlanFormat().sdp:this.context.peer.localDescription.sdp),t=0,a=0,this.context.videoCaptureAndEncodeParameter&&(t=this.context.videoCaptureAndEncodeParameter.captureFrameRate(),a=this.context.videoCaptureAndEncodeParameter.encodeBitrates()[0]),n=this.context.videoDuplexMode===u.SdkStreamServiceType.TX||this.context.videoDuplexMode===u.SdkStreamServiceType.DUPLEX,this.context.previousSdpOffer=new c.default(e),r=new d.default(this.context.meetingSessionConfiguration.credentials.attendeeId,e,this.context.meetingSessionConfiguration.urls.audioHostURL,this.context.realtimeController.realtimeIsLocalAudioMuted(),!1,this.context.videoSubscriptions,n,t,a,!0),this.context.logger.info("sending subscribe: "+JSON.stringify(r)),this.context.signalingClient.subscribe(r),[4,this.receiveSubscribeAck()];case 1:return i=o.sent(),this.context.logger.info("got subscribe ack: "+JSON.stringify(i)),this.context.sdpAnswer=i.sdpAnswer,this.context.videoStreamIndex.integrateSubscribeAckFrame(i),[2]}}))}))},t.prototype.receiveSubscribeAck=function(){var e=this;return new Promise((function(t,a){var n=new(function(){function e(e){this.signalingClient=e}return e.prototype.cancel=function(){this.signalingClient.removeObserver(this),a(new Error("SubscribeAndReceiveSubscribeAckTask got canceled while waiting for SdkSubscribeAckFrame"))},e.prototype.handleSignalingClientEvent=function(e){if(e.type===s.default.ReceivedSignalFrame&&e.message.type===u.SdkSignalFrame.Type.SUBSCRIBE_ACK){this.signalingClient.removeObserver(this);var a=e.message.suback;t(a)}},e}())(e.context.signalingClient);e.context.signalingClient.registerObserver(n),e.taskCanceler=n}))},t}(a(0).default);t.default=f},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,a,n,r,i,o,c,s,d){this.attendeeId=e,this.sdpOffer=t,this.audioHost=a,this.audioMuted=n,this.audioCheckin=r,this.receiveStreamIds=i,this.localVideoEnabled=o,this.videoInputFrameRate=c,this.videoInputMaxBitrateKbps=s,this.connectionTypeHasVideo=d};t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(5),s=function(e){function t(t,a,n){var r=e.call(this,t)||this;return r.taskToRunBeforeTimeout=a,r.timeoutMs=n,r.taskName="Timeout"+r.timeoutMs+"ms",a.setParent(r),r}return r(t,e),t.prototype.cancel=function(){this.logger.info("canceling timeout task "+this.name()+" subtask "+this.taskToRunBeforeTimeout),this.taskToRunBeforeTimeout.cancel()},t.prototype.run=function(){return i(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(a){switch(a.label){case 0:(e=new c.default(this.timeoutMs)).start((function(){t.logger.info("timeout reached for task "+t.name()),t.taskToRunBeforeTimeout.cancel()})),a.label=1;case 1:return a.trys.push([1,,3,4]),[4,this.taskToRunBeforeTimeout.run()];case 2:return a.sent(),[3,4];case 3:return e.stop(),[7];case 4:return this.logger.info("timeout task "+this.name()+" completed"),[2]}}))}))},t}(a(0).default);t.default=s},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=a(4),c=function(){function e(e){this.logger=e,this._localCameraTransceiver=null,this._localAudioTransceiver=null,this.videoSubscriptions=[],this.defaultMediaStream=null,this.peer=null,this.browserBehavior=new o.default}return e.setVideoSendingBitrateKbpsForSender=function(e,t,a){return n(this,void 0,void 0,(function(){var n,o,c,s,d;return r(this,(function(r){switch(r.label){case 0:if(!e||t<=0)return[2];(n=e.getParameters()).encodings||(n.encodings=[{}]);try{for(o=i(n.encodings),c=o.next();!c.done;c=o.next())c.value.maxBitrate=1e3*t}catch(e){s={error:e}}finally{try{c&&!c.done&&(d=o.return)&&d.call(o)}finally{if(s)throw s.error}}return[4,e.setParameters(n)];case 1:return r.sent(),a.info("set video send bandwidth to "+t+"kbps"),[2]}}))}))},e.replaceAudioTrackForSender=function(e,t){return n(this,void 0,void 0,(function(){return r(this,(function(a){switch(a.label){case 0:return e?[4,e.replaceTrack(t)]:[2,!1];case 1:return a.sent(),[2,!0]}}))}))},e.prototype.localAudioTransceiver=function(){return this._localAudioTransceiver},e.prototype.localVideoTransceiver=function(){return this._localCameraTransceiver},e.prototype.setVideoSendingBitrateKbps=function(t){return n(this,void 0,void 0,(function(){var a;return r(this,(function(n){switch(n.label){case 0:return this._localCameraTransceiver&&"sendrecv"===this._localCameraTransceiver.direction?(a=this._localCameraTransceiver.sender,[4,e.setVideoSendingBitrateKbpsForSender(a,t,this.logger)]):[2];case 1:return n.sent(),[2]}}))}))},e.prototype.setPeer=function(e){this.peer=e},e.prototype.reset=function(){this._localCameraTransceiver=null,this._localAudioTransceiver=null,this.videoSubscriptions=[],this.defaultMediaStream=null,this.peer=null},e.prototype.useTransceivers=function(){return!(!this.peer||!this.browserBehavior.requiresUnifiedPlan())&&void 0!==this.peer.getTransceivers},e.prototype.trackIsVideoInput=function(e){return!!this._localCameraTransceiver&&(e===this._localCameraTransceiver.sender.track||e===this._localCameraTransceiver.receiver.track)},e.prototype.setupLocalTransceivers=function(){this.useTransceivers()&&(this.defaultMediaStream||"undefined"==typeof MediaStream||(this.defaultMediaStream=new MediaStream),this._localAudioTransceiver||(this._localAudioTransceiver=this.peer.addTransceiver("audio",{direction:"inactive",streams:[this.defaultMediaStream]})),this._localCameraTransceiver||(this._localCameraTransceiver=this.peer.addTransceiver("video",{direction:"inactive",streams:[this.defaultMediaStream]})))},e.prototype.replaceAudioTrack=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this._localAudioTransceiver&&"sendrecv"===this._localAudioTransceiver.direction?[4,this._localAudioTransceiver.sender.replaceTrack(e)]:(this.logger.info("audio transceiver direction is not set up or not activated"),[2,!1]);case 1:return t.sent(),[2,!0]}}))}))},e.prototype.setAudioInput=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,this.setTransceiverInput(this._localAudioTransceiver,e)];case 1:return t.sent(),[2]}}))}))},e.prototype.setVideoInput=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,this.setTransceiverInput(this._localCameraTransceiver,e)];case 1:return t.sent(),[2]}}))}))},e.prototype.updateVideoTransceivers=function(e,t){var a=this;if(!this.useTransceivers())return t.array();var n=this.peer.getTransceivers();return this.videoSubscriptions=[0],t=t.clone(),this.unsubscribeTransceivers(n,e,t),this.subscribeTransceivers(n,t),this.logger.debug((function(){return a.debugDumpTransceivers()})),this.videoSubscriptions},e.prototype.unsubscribeTransceivers=function(e,t,a){var n,r;try{for(var o=i(e),c=o.next();!c.done;c=o.next()){var s=c.value;if(s!==this._localCameraTransceiver&&this.transceiverIsVideo(s)){var d=t.streamIdForTrack("v_"+s.mid);void 0!==d&&a.contain(d)?(s.direction="recvonly",this.videoSubscriptions.push(d),a.remove(d)):(s.direction="inactive",this.videoSubscriptions.push(0))}}}catch(e){n={error:e}}finally{try{c&&!c.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}},e.prototype.subscribeTransceivers=function(e,t){var a,n,r,o;if(0!==t.size()){var c=t.array(),s=1;try{for(var d=i(e),u=d.next();!u.done;u=d.next()){if((p=u.value)!==this._localCameraTransceiver&&this.transceiverIsVideo(p)){if("inactive"===p.direction){p.direction="recvonly";var f=c.shift();if(this.videoSubscriptions[s]=f,0===c.length)break}s+=1}}}catch(e){a={error:e}}finally{try{u&&!u.done&&(n=d.return)&&n.call(d)}finally{if(a)throw a.error}}try{for(var l=i(c),h=l.next();!h.done;h=l.next()){var b=h.value,p=this.peer.addTransceiver("video",{direction:"recvonly",streams:[this.defaultMediaStream]});this.videoSubscriptions.push(b),this.logger.info("adding transceiver mid: "+p.mid+" subscription: "+b+" direction: recvonly")}}catch(e){r={error:e}}finally{try{h&&!h.done&&(o=l.return)&&o.call(l)}finally{if(r)throw r.error}}}},e.prototype.transceiverIsVideo=function(e){return e.receiver&&e.receiver.track&&"video"===e.receiver.track.kind||e.sender&&e.sender.track&&"video"===e.sender.track.kind},e.prototype.debugDumpTransceivers=function(){var e,t,a="",n=0;try{for(var r=i(this.peer.getTransceivers()),o=r.next();!o.done;o=r.next()){var c=o.value;this.transceiverIsVideo(c)&&(a+="transceiver index="+n+" mid="+c.mid+" subscription="+this.videoSubscriptions[n]+" direction="+c.direction+"\n",n+=1)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return a},e.prototype.setTransceiverInput=function(e,t){return n(this,void 0,void 0,(function(){return r(this,(function(a){switch(a.label){case 0:return e?(e.direction=t?"sendrecv":"inactive",[4,e.sender.replaceTrack(t)]):[2];case 1:return a.sent(),[2]}}))}))},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(2),i=a(7),o=function(){function e(e){this.logger=e,this.currentIndex=null,this.currentSubscribeAck=null,this.trackToStreamMap=null,this.streamToAttendeeMap=null,this.ssrcToStreamMap=null}return e.prototype.integrateIndexFrame=function(e){this.currentIndex=e,this.streamToAttendeeMap=null,this.ssrcToStreamMap=null},e.prototype.integrateSubscribeAckFrame=function(e){this.currentSubscribeAck=e,this.trackToStreamMap=null},e.prototype.allStreams=function(){var e,t,a=new i.default;if(this.currentIndex)try{for(var r=n(this.currentIndex.sources),o=r.next();!o.done;o=r.next()){var c=o.value;a.add(c.streamId)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return a},e.prototype.allVideoSendingAttendeesExcludingSelf=function(e){var t,a,i=new Set;if(this.currentIndex&&this.currentIndex.sources.length)try{for(var o=n(this.currentIndex.sources),c=o.next();!c.done;c=o.next()){var s=c.value;s.attendeeId!==e&&s.mediaType===r.SdkStreamMediaType.VIDEO&&i.add(s.attendeeId)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}return i},e.prototype.streamSelectionUnderBandwidthConstraint=function(e,t,a,o){var c,s,d,u,f=new Set;if(this.currentIndex)try{for(var l=n(this.currentIndex.sources),h=l.next();!h.done;h=l.next()){var b=h.value;b.attendeeId!==e&&b.mediaType===r.SdkStreamMediaType.VIDEO&&(t.has(b.attendeeId)||a.has(b.attendeeId)||f.add(b.attendeeId))}}catch(e){c={error:e}}finally{try{h&&!h.done&&(s=l.return)&&s.call(l)}finally{if(c)throw c.error}}var p=this.buildAttendeeToSortedStreamDescriptorMapExcludingSelf(e),v=new Map,m=0;p.forEach((function(e,t){v.set(t,e[0]),m+=e[0].maxBitrateKbps})),m=this.trySelectHighBitrateForAttendees(p,t,m,o,v),this.trySelectHighBitrateForAttendees(p,f,m,o,v);var g=new i.default;try{for(var y=n(v.values()),S=y.next();!S.done;S=y.next()){var w=S.value;g.add(w.streamId)}}catch(e){d={error:e}}finally{try{S&&!S.done&&(u=y.return)&&u.call(y)}finally{if(d)throw d.error}}return g},e.prototype.highestQualityStreamFromEachGroupExcludingSelf=function(e){var t,a,o,c,s=new i.default;if(this.currentIndex){var d=new Map;try{for(var u=n(this.currentIndex.sources),f=u.next();!f.done;f=u.next()){(b=f.value).attendeeId!==e&&b.mediaType===r.SdkStreamMediaType.VIDEO&&((!d.has(b.groupId)||b.maxBitrateKbps>d.get(b.groupId).maxBitrateKbps)&&d.set(b.groupId,b))}}catch(e){t={error:e}}finally{try{f&&!f.done&&(a=u.return)&&a.call(u)}finally{if(t)throw t.error}}try{for(var l=n(d.values()),h=l.next();!h.done;h=l.next()){var b=h.value;s.add(b.streamId)}}catch(e){o={error:e}}finally{try{h&&!h.done&&(c=l.return)&&c.call(l)}finally{if(o)throw o.error}}}return s},e.prototype.numberOfVideoPublishingParticipantsExcludingSelf=function(e){return this.highestQualityStreamFromEachGroupExcludingSelf(e).array().length},e.prototype.attendeeIdForTrack=function(e){var t=this.streamIdForTrack(e);if(void 0===t)return this.logger.warn("track "+e+" does not correspond to a known stream"),"";if(!this.streamToAttendeeMap){if(!this.currentIndex)return"";this.streamToAttendeeMap=this.buildStreamToAttendeeMap(this.currentIndex)}var a=this.streamToAttendeeMap.get(t);return a||(this.logger.info("track "+e+" (stream "+t+") does not correspond to a known attendee"),"")},e.prototype.streamIdForTrack=function(e){if(!this.trackToStreamMap){if(!this.currentSubscribeAck)return;this.trackToStreamMap=this.buildTrackToStreamMap(this.currentSubscribeAck)}return this.trackToStreamMap.get(e)},e.prototype.streamIdForSSRC=function(e){if(!this.ssrcToStreamMap){if(!this.currentSubscribeAck)return;this.ssrcToStreamMap=this.buildSSRCToStreamMap(this.currentSubscribeAck)}return this.ssrcToStreamMap.get(e)},e.prototype.streamsPausedAtSource=function(){var e,t,a=new i.default;if(this.currentIndex)try{for(var r=n(this.currentIndex.pausedAtSourceIds),o=r.next();!o.done;o=r.next()){var c=o.value;a.add(c)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return a},e.prototype.buildTrackToStreamMap=function(e){var t,a,r=new Map;this.logger.debug((function(){return"trackMap "+JSON.stringify(e.tracks)}));try{for(var i=n(e.tracks),o=i.next();!o.done;o=i.next()){var c=o.value;c.trackLabel.length>0&&c.streamId>0&&r.set(c.trackLabel,c.streamId)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return r},e.prototype.buildSSRCToStreamMap=function(e){var t,a,r=new Map;this.logger.debug((function(){return"ssrcMap "+JSON.stringify(e.tracks)}));try{for(var i=n(e.tracks),o=i.next();!o.done;o=i.next()){var c=o.value;c.trackLabel.length>0&&c.streamId>0&&r.set(c.ssrc,c.streamId)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return r},e.prototype.buildStreamToAttendeeMap=function(e){var t,a,r=new Map;try{for(var i=n(e.sources),o=i.next();!o.done;o=i.next()){var c=o.value;r.set(c.streamId,c.attendeeId)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return r},e.prototype.trySelectHighBitrateForAttendees=function(e,t,a,r,i){var o,c,s,d;try{for(var u=n(t),f=u.next();!f.done;f=u.next()){var l=f.value;if(a>=r)break;if(e.has(l)){var h=e.get(l);try{for(var b=(s=void 0,n(h.reverse())),p=b.next();!p.done;p=b.next()){var v=p.value;if(a-i.get(l).maxBitrateKbps+v.maxBitrateKbps<r){a=a-i.get(l).maxBitrateKbps+v.maxBitrateKbps,i.set(l,v);break}}}catch(e){s={error:e}}finally{try{p&&!p.done&&(d=b.return)&&d.call(b)}finally{if(s)throw s.error}}}}}catch(e){o={error:e}}finally{try{f&&!f.done&&(c=u.return)&&c.call(u)}finally{if(o)throw o.error}}return a},e.prototype.buildAttendeeToSortedStreamDescriptorMapExcludingSelf=function(e){var t,a,i=new Map;if(this.currentIndex)try{for(var o=n(this.currentIndex.sources),c=o.next();!c.done;c=o.next()){var s=c.value;s.attendeeId!==e&&s.mediaType===r.SdkStreamMediaType.VIDEO&&(i.has(s.attendeeId)?i.get(s.attendeeId).push(s):i.set(s.attendeeId,[s]))}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}return i.forEach((function(e,t){e.sort((function(e,t){return e.maxBitrateKbps>t.maxBitrateKbps?1:e.maxBitrateKbps<t.maxBitrateKbps?-1:0}))})),i},e}();t.default=o},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=a(121),i=a(122),o=a(1),c=function(){function e(e,t,a){this.tileFactory=e,this.audioVideoController=t,this.logger=a,this.tileMap=new Map,this.nextTileId=1,this.currentLocalTile=null,this.currentPausedTilesByIds=new Set,this.devicePixelRatioMonitor=new r.default(new i.default,a)}return e.prototype.bindVideoElement=function(e,t){var a=this.getVideoTile(e);null!==a?a.bindVideoElement(t):this.logger.warn("Ignoring video element binding for unknown tile id "+e)},e.prototype.unbindVideoElement=function(e){this.bindVideoElement(e,null)},e.prototype.startLocalVideoTile=function(){var e=this.findOrCreateLocalVideoTile();return this.currentLocalTile.stateRef().localTileStarted=!0,this.audioVideoController.update(),e.id()},e.prototype.stopLocalVideoTile=function(){this.currentLocalTile&&(this.currentLocalTile.stateRef().localTileStarted=!1,this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId,!0,null,null,null,null),this.audioVideoController.update())},e.prototype.hasStartedLocalVideoTile=function(){return!(!this.currentLocalTile||!this.currentLocalTile.stateRef().localTileStarted)},e.prototype.removeLocalVideoTile=function(){this.currentLocalTile&&this.removeVideoTile(this.currentLocalTile.id())},e.prototype.getLocalVideoTile=function(){return this.currentLocalTile},e.prototype.pauseVideoTile=function(e){var t=this.getVideoTile(e);t&&(this.currentPausedTilesByIds.has(e)||(this.audioVideoController.pauseReceivingStream(t.stateRef().streamId),this.currentPausedTilesByIds.add(e)),t.pause())},e.prototype.unpauseVideoTile=function(e){var t=this.getVideoTile(e);t&&(this.currentPausedTilesByIds.has(e)&&(this.audioVideoController.resumeReceivingStream(t.stateRef().streamId),this.currentPausedTilesByIds.delete(e)),t.unpause())},e.prototype.getVideoTile=function(e){return this.tileMap.has(e)?this.tileMap.get(e):null},e.prototype.getVideoTileArea=function(e){var t=e.state(),a=0,n=0;return t.boundVideoElement&&(a=t.boundVideoElement.clientHeight*t.devicePixelRatio,n=t.boundVideoElement.clientWidth*t.devicePixelRatio),a*n},e.prototype.getAllRemoteVideoTiles=function(){var e=this,t=new Array;return this.tileMap.forEach((function(a,n){e.currentLocalTile&&n===e.currentLocalTile.id()||t.push(a)})),t},e.prototype.getAllVideoTiles=function(){return Array.from(this.tileMap.values())},e.prototype.addVideoTile=function(e){void 0===e&&(e=!1);var t=this.nextTileId;this.nextTileId+=1;var a=this.tileFactory.makeTile(t,e,this,this.devicePixelRatioMonitor);return this.tileMap.set(t,a),a},e.prototype.removeVideoTile=function(e){if(this.tileMap.has(e)){var t=this.tileMap.get(e);this.currentLocalTile===t&&(this.currentLocalTile=null),t.destroy(),this.tileMap.delete(e),this.audioVideoController.forEachObserver((function(t){o.default.of(t.videoTileWasRemoved).map((function(a){return a.bind(t)(e)}))}))}},e.prototype.removeVideoTilesByAttendeeId=function(e){var t,a,r=[];try{for(var i=n(this.getAllVideoTiles()),o=i.next();!o.done;o=i.next()){var c=o.value.state();c.boundAttendeeId===e&&(this.removeVideoTile(c.tileId),r.push(c.tileId))}}catch(e){t={error:e}}finally{try{o&&!o.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return r},e.prototype.removeAllVideoTiles=function(){var e,t,a=Array.from(this.tileMap.keys());try{for(var r=n(a),i=r.next();!i.done;i=r.next()){var o=i.value;this.removeVideoTile(o)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}},e.prototype.sendTileStateUpdate=function(e){this.audioVideoController.forEachObserver((function(t){o.default.of(t.videoTileDidUpdate).map((function(a){return a.bind(t)(e)}))}))},e.prototype.haveVideoTilesWithStreams=function(){var e,t;try{for(var a=n(this.getAllVideoTiles()),r=a.next();!r.done;r=a.next()){if(r.value.state().boundVideoStream)return!0}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}return!1},e.prototype.captureVideoTile=function(e){var t=this.getVideoTile(e);return t?t.capture():null},e.prototype.findOrCreateLocalVideoTile=function(){return this.currentLocalTile||(this.currentLocalTile=this.addVideoTile(!0),this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId,!0,null,null,null,null)),this.currentLocalTile},e}();t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){var a=this;if(this.devicePixelRatioSource=e,this.mediaQueryListener=function(){a.observerQueue.forEach((function(e){e.devicePixelRatioChanged(a.devicePixelRatioSource.devicePixelRatio())}))},this.observerQueue=new Set,"undefined"!=typeof window){var n=matchMedia("(resolution: "+this.devicePixelRatioSource.devicePixelRatio()+"dppx)");"function"==typeof n.addEventListener?n.addEventListener("change",this.mediaQueryListener):"function"==typeof n.addListener?n.addListener(this.mediaQueryListener):t.warn("ignoring DefaultDevicePixelRatioMonitor")}}return e.prototype.registerObserver=function(e){this.observerQueue.add(e),e.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio())},e.prototype.removeObserver=function(e){this.observerQueue.delete(e)},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.prototype.devicePixelRatio=function(){return"undefined"!=typeof window&&window&&window.devicePixelRatio?window.devicePixelRatio:1},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(29),r=function(){function e(){}return e.prototype.makeTile=function(e,t,a,r){return new n.default(e,t,a,r)},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(21),r=function(){function e(e){this.selfAttendeeId=e,this.numParticipants=0,this.idealMaxBandwidthKbps=1400,this.hasBandwidthPriority=!1,this.optimalParameters=new n.default(0,0,0,0,!1),this.parametersInEffect=new n.default(0,0,0,0,!1)}return e.prototype.updateIndex=function(e){this.numParticipants=e.numberOfVideoPublishingParticipantsExcludingSelf(this.selfAttendeeId)+1,this.optimalParameters=new n.default(this.captureWidth(),this.captureHeight(),this.captureFrameRate(),this.maxBandwidthKbps(),!1)},e.prototype.wantsResubscribe=function(){return!this.parametersInEffect.equal(this.optimalParameters)},e.prototype.chooseCaptureAndEncodeParameters=function(){return this.parametersInEffect=this.optimalParameters.clone(),this.parametersInEffect.clone()},e.prototype.captureWidth=function(){var e=640;return this.numParticipants>4&&(e=320),e},e.prototype.captureHeight=function(){var e=360;return this.numParticipants>4&&(e=180),e},e.prototype.captureFrameRate=function(){return 15},e.prototype.maxBandwidthKbps=function(){if(this.hasBandwidthPriority)return Math.trunc(this.idealMaxBandwidthKbps);var e=0;return e=this.numParticipants<=2?this.idealMaxBandwidthKbps:this.numParticipants<=4?2*this.idealMaxBandwidthKbps/3:(544/11+14880/(11*this.numParticipants))/600*this.idealMaxBandwidthKbps,Math.trunc(e)},e.prototype.setIdealMaxBandwidthKbps=function(e){this.idealMaxBandwidthKbps=e},e.prototype.setHasBandwidthPriority=function(e){this.hasBandwidthPriority=e},e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,a,n){this.logger=e,this.realtimeController=t,this.minVolumeDecibels=a,this.maxVolumeDecibels=n,this.streamIdToAttendeeId={},this.streamIdToExternalUserId={},this.warnedAboutMissingStreamIdMapping={}}return e.prototype.sendRealtimeUpdatesForAudioStreamIdInfo=function(e){var t,a;try{for(var r=n(e.streams),i=r.next();!i.done;i=r.next()){var o=i.value,c=!!o.attendeeId,s=!!o.externalUserId,d=o.hasOwnProperty("muted");if(c){this.streamIdToAttendeeId[o.audioStreamId]=o.attendeeId;var u=s?o.externalUserId:null;this.streamIdToExternalUserId[o.audioStreamId]=u,this.realtimeController.realtimeSetAttendeeIdPresence(o.attendeeId,!0,u)}if(d){var f=this.streamIdToAttendeeId[o.audioStreamId];u=this.streamIdToExternalUserId[o.audioStreamId];this.realtimeController.realtimeUpdateVolumeIndicator(f,null,o.muted,null,u)}if(!c&&!d){f=this.streamIdToAttendeeId[o.audioStreamId],u=this.streamIdToExternalUserId[o.audioStreamId];delete this.streamIdToAttendeeId[o.audioStreamId],delete this.streamIdToExternalUserId[o.audioStreamId],delete this.warnedAboutMissingStreamIdMapping[o.audioStreamId],this.realtimeController.realtimeSetAttendeeIdPresence(f,!1,u)}}}catch(e){t={error:e}}finally{try{i&&!i.done&&(a=r.return)&&a.call(r)}finally{if(t)throw t.error}}},e.prototype.sendRealtimeUpdatesForAudioMetadata=function(e){var t,a,r=null,i=null;try{for(var o=n(e.attendeeStates),c=o.next();!c.done;c=o.next()){var s=c.value,d=this.attendeeIdForStreamId(s.audioStreamId);s.hasOwnProperty("volume")&&(null===r&&(r={}),null!==d&&(r[d]=this.normalizedVolume(s))),s.hasOwnProperty("signalStrength")&&(null===i&&(i={}),null!==d&&(i[d]=this.normalizedSignalStrength(s)))}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}this.applyRealtimeUpdatesForAudioMetadata(r,i)},e.prototype.normalizedVolume=function(e){var t=1-(-e.volume-this.maxVolumeDecibels)/(this.minVolumeDecibels-this.maxVolumeDecibels);return Math.min(Math.max(t,0),1)},e.prototype.normalizedSignalStrength=function(t){var a=t.signalStrength/e.MAX_SIGNAL_STRENGTH_LEVELS;return Math.min(Math.max(a,0),1)},e.prototype.applyRealtimeUpdatesForAudioMetadata=function(t,a){for(var n in this.streamIdToAttendeeId){var r=this.streamIdToAttendeeId[n],i=this.streamIdToExternalUserId[n],o=null,c=null;null!==t&&(o=t.hasOwnProperty(r)?t[r]:e.IMPLICIT_VOLUME),null!==a&&(c=a.hasOwnProperty(r)?a[r]:e.IMPLICIT_SIGNAL_STRENGTH),null===o&&null===c||this.realtimeController.realtimeUpdateVolumeIndicator(r,o,null,c,i)}},e.prototype.attendeeIdForStreamId=function(e){if(0===e)return null;var t=this.streamIdToAttendeeId[e];return t||(this.warnedAboutMissingStreamIdMapping[e]||(this.warnedAboutMissingStreamIdMapping[e]=!0,this.logger.warn("volume indicator stream id "+e+" seen before being defined")),null)},e.MAX_SIGNAL_STRENGTH_LEVELS=2,e.IMPLICIT_VOLUME=0,e.IMPLICIT_SIGNAL_STRENGTH=1,e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t,a,n,r,i){this.audioVideoController=e,this.videoTileController=t,this.realtimeController=a,this.audioMixController=n,this.deviceController=r,this.contentShareController=i}return e.prototype.addObserver=function(e){this.audioVideoController.addObserver(e),this.trace("addObserver")},e.prototype.removeObserver=function(e){this.audioVideoController.removeObserver(e),this.trace("removeObserver")},e.prototype.start=function(){this.audioVideoController.start(),this.trace("start")},e.prototype.stop=function(){this.audioVideoController.stop(),this.trace("stop")},e.prototype.bindAudioElement=function(e){var t=this.audioMixController.bindAudioElement(e);return this.trace("bindAudioElement",e.id,t),t},e.prototype.unbindAudioElement=function(){this.audioMixController.unbindAudioElement(),this.trace("unbindAudioElement")},e.prototype.bindVideoElement=function(e,t){this.videoTileController.bindVideoElement(e,t),this.trace("bindVideoElement",{tileId:e,videoElementId:t.id})},e.prototype.unbindVideoElement=function(e){this.videoTileController.unbindVideoElement(e),this.trace("unbindVideoElement",e)},e.prototype.startLocalVideoTile=function(){var e=this.videoTileController.startLocalVideoTile();return this.trace("startLocalVideoTile",null,e),e},e.prototype.stopLocalVideoTile=function(){this.videoTileController.stopLocalVideoTile(),this.trace("stopLocalVideoTile")},e.prototype.hasStartedLocalVideoTile=function(){var e=this.videoTileController.hasStartedLocalVideoTile();return this.trace("hasStartedLocalVideoTile",null,e),e},e.prototype.removeLocalVideoTile=function(){this.videoTileController.removeLocalVideoTile(),this.trace("removeLocalVideoTile")},e.prototype.getLocalVideoTile=function(){var e=this.videoTileController.getLocalVideoTile();return this.trace("getLocalVideoTile"),e},e.prototype.pauseVideoTile=function(e){this.videoTileController.pauseVideoTile(e),this.trace("pauseVideoTile",e)},e.prototype.unpauseVideoTile=function(e){this.videoTileController.unpauseVideoTile(e),this.trace("unpauseVideoTile",e)},e.prototype.getVideoTile=function(e){var t=this.videoTileController.getVideoTile(e);return this.trace("getVideoTile",e),t},e.prototype.getAllRemoteVideoTiles=function(){var e=this.videoTileController.getAllRemoteVideoTiles();return this.trace("getAllRemoteVideoTiles"),e},e.prototype.getAllVideoTiles=function(){var e=this.videoTileController.getAllVideoTiles();return this.trace("getAllVideoTiles"),e},e.prototype.addVideoTile=function(){var e=this.videoTileController.addVideoTile();return this.trace("addVideoTile",null,e.state()),e},e.prototype.removeVideoTile=function(e){this.videoTileController.removeVideoTile(e),this.trace("removeVideoTile",e)},e.prototype.removeVideoTilesByAttendeeId=function(e){var t=this.videoTileController.removeVideoTilesByAttendeeId(e);return this.trace("removeVideoTilesByAttendeeId",e,t),t},e.prototype.removeAllVideoTiles=function(){this.videoTileController.removeAllVideoTiles(),this.trace("removeAllVideoTiles")},e.prototype.captureVideoTile=function(e){var t=this.videoTileController.captureVideoTile(e);return this.trace("captureVideoTile",e),t},e.prototype.realtimeSubscribeToAttendeeIdPresence=function(e){this.realtimeController.realtimeSubscribeToAttendeeIdPresence(e),this.trace("realtimeSubscribeToAttendeeIdPresence")},e.prototype.realtimeUnsubscribeToAttendeeIdPresence=function(e){this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(e),this.trace("realtimeUnsubscribeToAttendeeIdPresence")},e.prototype.realtimeSetCanUnmuteLocalAudio=function(e){this.realtimeController.realtimeSetCanUnmuteLocalAudio(e),this.trace("realtimeSetCanUnmuteLocalAudio",e)},e.prototype.realtimeSubscribeToSetCanUnmuteLocalAudio=function(e){this.realtimeController.realtimeSubscribeToSetCanUnmuteLocalAudio(e),this.trace("realtimeSubscribeToSetCanUnmuteLocalAudio")},e.prototype.realtimeUnsubscribeToSetCanUnmuteLocalAudio=function(e){this.realtimeController.realtimeUnsubscribeToSetCanUnmuteLocalAudio(e)},e.prototype.realtimeCanUnmuteLocalAudio=function(){var e=this.realtimeController.realtimeCanUnmuteLocalAudio();return this.trace("realtimeCanUnmuteLocalAudio",null,e),e},e.prototype.realtimeMuteLocalAudio=function(){this.realtimeController.realtimeMuteLocalAudio(),this.trace("realtimeMuteLocalAudio")},e.prototype.realtimeUnmuteLocalAudio=function(){var e=this.realtimeController.realtimeUnmuteLocalAudio();return this.trace("realtimeUnmuteLocalAudio"),e},e.prototype.realtimeSubscribeToMuteAndUnmuteLocalAudio=function(e){this.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(e),this.trace("realtimeSubscribeToMuteAndUnmuteLocalAudio")},e.prototype.realtimeUnsubscribeToMuteAndUnmuteLocalAudio=function(e){this.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(e)},e.prototype.realtimeIsLocalAudioMuted=function(){var e=this.realtimeController.realtimeIsLocalAudioMuted();return this.trace("realtimeIsLocalAudioMuted"),e},e.prototype.realtimeSubscribeToVolumeIndicator=function(e,t){this.realtimeController.realtimeSubscribeToVolumeIndicator(e,t),this.trace("realtimeSubscribeToVolumeIndicator",e)},e.prototype.realtimeUnsubscribeFromVolumeIndicator=function(e){this.realtimeController.realtimeUnsubscribeFromVolumeIndicator(e),this.trace("realtimeUnsubscribeFromVolumeIndicator",e)},e.prototype.realtimeSubscribeToLocalSignalStrengthChange=function(e){this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(e),this.trace("realtimeSubscribeToLocalSignalStrengthChange")},e.prototype.realtimeUnsubscribeToLocalSignalStrengthChange=function(e){this.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(e)},e.prototype.realtimeSubscribeToFatalError=function(e){this.realtimeController.realtimeSubscribeToFatalError(e)},e.prototype.realtimeUnsubscribeToFatalError=function(e){this.realtimeController.realtimeUnsubscribeToFatalError(e)},e.prototype.subscribeToActiveSpeakerDetector=function(e,t,a,n){this.audioVideoController.activeSpeakerDetector.subscribe(e,t,a,n),this.trace("subscribeToActiveSpeakerDetector")},e.prototype.unsubscribeFromActiveSpeakerDetector=function(e){this.audioVideoController.activeSpeakerDetector.unsubscribe(e),this.trace("unsubscribeFromActiveSpeakerDetector")},e.prototype.listAudioInputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.deviceController.listAudioInputDevices()];case 1:return e=t.sent(),this.trace("listAudioInputDevices",null,e),[2,e]}}))}))},e.prototype.listVideoInputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.deviceController.listVideoInputDevices()];case 1:return e=t.sent(),this.trace("listVideoInputDevices",null,e),[2,e]}}))}))},e.prototype.listAudioOutputDevices=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,this.deviceController.listAudioOutputDevices()];case 1:return e=t.sent(),this.trace("listAudioOutputDevices",null,e),[2,e]}}))}))},e.prototype.chooseAudioInputDevice=function(e){var t=this.deviceController.chooseAudioInputDevice(e);return this.trace("chooseAudioInputDevice",e),t},e.prototype.chooseVideoInputDevice=function(e){var t=this.deviceController.chooseVideoInputDevice(e);return this.trace("chooseVideoInputDevice",e),t},e.prototype.chooseAudioOutputDevice=function(e){var t=this.deviceController.chooseAudioOutputDevice(e);return this.trace("chooseAudioOutputDevice",e),t},e.prototype.addDeviceChangeObserver=function(e){this.deviceController.addDeviceChangeObserver(e),this.trace("addDeviceChangeObserver")},e.prototype.removeDeviceChangeObserver=function(e){this.deviceController.removeDeviceChangeObserver(e),this.trace("removeDeviceChangeObserver")},e.prototype.createAnalyserNodeForAudioInput=function(){var e=this.deviceController.createAnalyserNodeForAudioInput();return this.trace("createAnalyserNodeForAudioInput"),e},e.prototype.startVideoPreviewForVideoInput=function(e){this.deviceController.startVideoPreviewForVideoInput(e),this.trace("startVideoPreviewForVideoInput",e.id)},e.prototype.stopVideoPreviewForVideoInput=function(e){this.deviceController.stopVideoPreviewForVideoInput(e),this.trace("stopVideoPreviewForVideoInput",e.id)},e.prototype.setDeviceLabelTrigger=function(e){this.deviceController.setDeviceLabelTrigger(e),this.trace("setDeviceLabelTrigger")},e.prototype.mixIntoAudioInput=function(e){var t=this.deviceController.mixIntoAudioInput(e);return this.trace("mixIntoAudioInput",e.id),t},e.prototype.chooseVideoInputQuality=function(e,t,a,n){this.deviceController.chooseVideoInputQuality(e,t,a,n),this.trace("chooseVideoInputQuality",{width:e,height:t,frameRate:a,maxBandwidthKbps:n})},e.prototype.enableWebAudio=function(e){this.deviceController.enableWebAudio(e),this.trace("enableWebAudio",e)},e.prototype.startContentShare=function(e){var t=this.contentShareController.startContentShare(e);return this.trace("startContentShare"),t},e.prototype.startContentShareFromScreenCapture=function(e){var t=this.contentShareController.startContentShareFromScreenCapture(e);return this.trace("startContentShareFromScreenCapture"),t},e.prototype.pauseContentShare=function(){this.contentShareController.pauseContentShare(),this.trace("pauseContentShare")},e.prototype.unpauseContentShare=function(){this.contentShareController.unpauseContentShare(),this.trace("unpauseContentShare")},e.prototype.stopContentShare=function(){this.contentShareController.stopContentShare(),this.trace("stopContentShare")},e.prototype.addContentShareObserver=function(e){this.contentShareController.addContentShareObserver(e),this.trace("addContentShareObserver")},e.prototype.removeContentShareObserver=function(e){this.contentShareController.removeContentShareObserver(e),this.trace("removeContentShareObserver")},e.prototype.trace=function(e,t,a){var n="API/DefaultAudioVideoFacade/"+this.audioVideoController.configuration.meetingId+"/"+this.audioVideoController.configuration.credentials.attendeeId+"/"+e;void 0!==t&&(n+=" "+JSON.stringify(t)),void 0!==a&&(n+=" -> "+JSON.stringify(a)),this.audioVideoController.logger.info(n)},e}();t.default=i},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=a(1),c=a(37),s=a(22),d=a(8),u=a(18),f=function(){function e(e,t){this.mediaStreamBroker=e,this.audioVideo=t,this.observerQueue=new Set,this.audioVideo.addObserver(this)}return e.createContentShareMeetingSessionConfigure=function(e){var t=new c.default;return t.meetingId=e.meetingId,t.urls=e.urls,t.credentials=new s.default,t.credentials.attendeeId=e.credentials.attendeeId+u.default.Modality,t.credentials.joinToken=e.credentials.joinToken+u.default.Modality,t},e.prototype.startContentShare=function(e){return n(this,void 0,void 0,(function(){var t,a=this;return r(this,(function(n){if(!e)return[2];for(this.mediaStreamBroker.mediaStream=e,t=0;t<this.mediaStreamBroker.mediaStream.getTracks().length;t++)this.mediaStreamBroker.mediaStream.getTracks()[t].addEventListener("ended",(function(){a.stopContentShare()}));return this.audioVideo.start(),this.mediaStreamBroker.mediaStream.getVideoTracks().length>0&&this.audioVideo.videoTileController.startLocalVideoTile(),[2]}))}))},e.prototype.startContentShareFromScreenCapture=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(a){switch(a.label){case 0:return[4,this.mediaStreamBroker.acquireScreenCaptureDisplayInputStream(e)];case 1:return t=a.sent(),[4,this.startContentShare(t)];case 2:return a.sent(),[2]}}))}))},e.prototype.pauseContentShare=function(){this.mediaStreamBroker.toggleMediaStream(!1)&&this.forEachContentShareObserver((function(e){o.default.of(e.contentShareDidPause).map((function(t){return t.bind(e)()}))}))},e.prototype.unpauseContentShare=function(){this.mediaStreamBroker.toggleMediaStream(!0)&&this.forEachContentShareObserver((function(e){o.default.of(e.contentShareDidUnpause).map((function(t){return t.bind(e)()}))}))},e.prototype.stopContentShare=function(){this.audioVideo.stop(),this.mediaStreamBroker.cleanup()},e.prototype.addContentShareObserver=function(e){this.observerQueue.add(e)},e.prototype.removeContentShareObserver=function(e){this.observerQueue.delete(e)},e.prototype.forEachContentShareObserver=function(e){var t,a,n=this,r=function(t){(new d.default).start((function(){n.observerQueue.has(t)&&e(t)}))};try{for(var o=i(this.observerQueue),c=o.next();!c.done;c=o.next()){r(c.value)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(a=o.return)&&a.call(o)}finally{if(t)throw t.error}}},e.prototype.audioVideoDidStart=function(){this.forEachContentShareObserver((function(e){o.default.of(e.contentShareDidStart).map((function(t){return t.bind(e)()}))}))},e.prototype.audioVideoDidStop=function(e){this.mediaStreamBroker.cleanup(),this.forEachContentShareObserver((function(e){o.default.of(e.contentShareDidStop).map((function(t){return t.bind(e)()}))}))},e}();t.default=f},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.webSocket=e}return Object.defineProperty(e.prototype,"url",{get:function(){return this.webSocket.url},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onopen",{get:function(){return this.webSocket.onopen},set:function(e){this.webSocket.onopen=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onerror",{get:function(){return this.webSocket.onerror},set:function(e){this.webSocket.onerror=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onclose",{get:function(){return this.webSocket.onclose},set:function(e){this.webSocket.onclose=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onmessage",{get:function(){return this.webSocket.onmessage},set:function(e){this.webSocket.onmessage=e},enumerable:!0,configurable:!0}),e.prototype.addEventListener=function(e,t,a){this.webSocket.addEventListener(e,t,a)},e.prototype.removeEventListener=function(e,t,a){this.webSocket.removeEventListener(e,t,a)},e.prototype.dispatchEvent=function(e){return this.webSocket.dispatchEvent(e)},e.prototype.send=function(e){this.webSocket.send(e)},e.prototype.close=function(e,t){this.webSocket.close(e,t)},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(14),r=function(){function e(t,a,n){this.window=t,this.element=a;var r={isMouseDown:!1};this.mouseDownEventListener=e.mouseDownEventListener(r,n,a),this.mouseMoveEventListener=e.mouseMoveEventListener(r,n,a),this.mouseUpEventListener=e.mouseUpEventListener(r,n,a),a.addEventListener("mousedown",this.mouseDownEventListener),t.addEventListener("mousemove",this.mouseMoveEventListener),t.addEventListener("mouseup",this.mouseUpEventListener)}return e.prototype.unobserve=function(){this.element.removeEventListener("mousedown",this.mouseDownEventListener),this.window.removeEventListener("mousemove",this.mouseMoveEventListener),this.window.removeEventListener("mouseup",this.mouseUpEventListener)},e.elementRelativeCoords=function(e,t){return[e.clientX-t.getBoundingClientRect().left,e.clientY-t.getBoundingClientRect().top]},e.mouseDownEventListener=function(t,a,r){return function(i){t.isMouseDown=!0;var o=e.elementRelativeCoords(i,r);a(t.last={type:n.default.BEGIN,coords:o,last:t.last})}},e.mouseMoveEventListener=function(t,a,r){return function(i){t.isMouseDown&&a(t.last={type:n.default.DRAG,coords:e.elementRelativeCoords(i,r),last:t.last})}},e.mouseUpEventListener=function(t,a,r){return function(i){t.isMouseDown&&(t.isMouseDown=!1,a(t.last={type:n.default.END,coords:e.elementRelativeCoords(i,r),last:t.last}))}},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(131),r=function(){function e(e,t,a,r){this.decoder=null,this.controller=null,this.controller=t,this.decoder=new n.default(e,a,r)}return e.prototype.free=function(){this.decoder.free(),this.decoder=null,this.controller=null},e.prototype.decodeToImageData=function(e){if(this.controller.isInputTooLarge(e.length))throw new Error("buffer too large for jpeg decoder input buffer: "+e.length+" bytes");var t=this.controller.newInternalInputView(),a=e,n=a.length,r=0;for(r=0;r<n;r++)t[r]=a[r];if(!this.decoder.decode(this.controller.inputPointer(),e.length))throw new Error("jpeg decoder failed for input: "+e);var i=this.decoder.width(),o=this.decoder.height(),c=i*o*4,s=this.controller.newInternalOutputView(this.decoder.outputPointer(),c);return new ImageData(s,i,o)},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,a){this.pointer=0,this.module=null,this.module=e,this.pointer=this.module.wasm().jpegdecoder_new(t,a)}return e.prototype.free=function(){this.module.wasm().__wbg_jpegdecoder_free(this.pointer),this.pointer=0,this.module=null},e.prototype.outputPointer=function(){return this.module.wasm().jpegdecoder_output_ptr(this.pointer)},e.prototype.decode=function(e,t){return 0!==this.module.wasm().jpegdecoder_decode(this.pointer,e,t)},e.prototype.width=function(){return this.module.wasm().jpegdecoder_width(this.pointer)},e.prototype.height=function(){return this.module.wasm().jpegdecoder_height(this.pointer)},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.pointer=0,this.module=null,this.module=e,this.pointer=this.module.wasm().jpegdecoderinput_new(t)}return e.prototype.free=function(){this.module.wasm().__wbg_jpegdecoderinput_free(this.pointer),this.pointer=0,this.module=null},e.prototype.inputPointer=function(){return this.module.wasm().jpegdecoderinput_input_ptr(this.pointer)},e}();t.default=n},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e){this.logger=e,e.debug((function(){return"\nThe JPEGDecoder WebAssembly module uses this software:\njpeg-decoder by Ulf Nilsson, Copyright (c) 2016 The jpeg-decoder Developers, MIT License\nhttps://github.com/kaksmet/jpeg-decoder\n".trim()}))}return e.prototype.module=function(){return new Uint8Array("".match(/../g).map((function(e){return parseInt(e,16)})))},e.prototype.init=function(){return n(this,void 0,void 0,(function(){var e,t,a=this;return r(this,(function(n){switch(n.label){case 0:return e={wbg:{__wbindgen_throw:function(e,t){var n=new Uint8Array(a.wasm().memory.buffer).subarray(e,e+t),r=String.fromCharCode.apply(null,n);throw a.logger.error(r),new Error(r)}}},[4,WebAssembly.instantiate(this.module(),e)];case 1:return t=n.sent(),this.wasmInternal=t.instance.exports,this.wasmInternal.__wbindgen_start(),[2]}}))}))},e.prototype.wasm=function(){return this.wasmInternal},e.prototype.free=function(){this.wasmInternal=null},e}();t.default=i},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(135),o=a(146),c=function(){function e(e,t,a){this.configuration=e,this.logger=t,this.mediaStreamBroker=a;var n=this.configuration.urls.screenSharingURL;this.screenSharingSession=new i.default(this.mediaStreamBroker,this.logger,this.configuration.screenSharingSessionOptions).screenSharingSessionFactory().create(n,this.configuration.credentials.joinToken)}return e.prototype.open=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return this.logger.warn("ScreenShareFacade has been deprecated and will be removed beginning with version 2.0.0. Instead use the startContentShareFromScreenCapture() and stopContentShare() methods on the AudioVideoFacade."),[4,new o.default(this.logger,(function(){return e.screenSharingSession.open(e.configuration.screenSharingTimeoutMs)}),"DefaultScreenShareFacadeOpen").run()];case 1:return t.sent(),[2]}}))}))},e.prototype.close=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return[4,new o.default(this.logger,(function(){return e.screenSharingSession.close(e.configuration.screenSharingTimeoutMs)}),"DefaultScreenShareFacadeClose").run()];case 1:return t.sent(),[2]}}))}))},e.prototype.start=function(e){return n(this,void 0,void 0,(function(){var t=this;return r(this,(function(a){switch(a.label){case 0:return[4,new o.default(this.logger,(function(){return t.screenSharingSession.start(e)}),"DefaultScreenShareFacadeStart").run()];case 1:return a.sent(),[2]}}))}))},e.prototype.stop=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return[4,new o.default(this.logger,(function(){return e.screenSharingSession.stop()}),"DefaultScreenShareFacadeStop").run()];case 1:return t.sent(),[2]}}))}))},e.prototype.pause=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return[4,new o.default(this.logger,(function(){return e.screenSharingSession.pause()}),"DefaultScreenShareFacadePause").run()];case 1:return t.sent(),[2]}}))}))},e.prototype.unpause=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return[4,new o.default(this.logger,(function(){return e.screenSharingSession.unpause()}),"DefaultScreenShareFacadeUnpause").run()];case 1:return t.sent(),[2]}}))}))},e.prototype.registerObserver=function(e){this.screenSharingSession.registerObserver(e)},e.prototype.unregisterObserver=function(e){this.screenSharingSession.deregisterObserver(e)},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var r=a(42),i=a(39),o=a(1),c=a(137),s=a(44),d=a(45),u=a(46),f=a(47),l=a(49),h=a(50),b=a(51),p=a(144),v=function(){function e(e,t,a){void 0===a&&(a={}),this.mediaStreamBroker=e,this.logger=t,this.options=a,this.screenSharingSessionFactoryMemo=null,this.backoffFactoryMemo=null}return e.prototype.screenSharingSessionFactory=function(){return this.screenSharingSessionFactoryMemo=this.screenSharingSessionFactoryMemo||new p.default(this.displayMediaConstraints,this.reconnectingPromisedWebSocketFactory(),this.messageSerialization(),this.mediaStreamBroker,this.screenSharingStreamFactory(),this.mediaRecordingFactory(),this.logger),this.screenSharingSessionFactoryMemo},e.prototype.displayMediaConstraints=function(e){return{audio:!1,video:n(n({},!e&&{frameRate:{max:3}}),e&&{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:e,maxFrameRate:3}})}},e.prototype.screenSharingStreamFactory=function(){return new f.default},e.prototype.mediaRecordingFactory=function(){var e={};return o.default.of(this.options.bitRate).map((function(t){return e.videoBitsPerSecond=t})),new c.default(e)},e.prototype.reconnectingPromisedWebSocketFactory=function(){return new d.default(this.promisedWebSocketFactory(),this.backOffFactory(),o.default.of(this.options.reconnectRetryLimit).getOrElse(5))},e.prototype.backOffFactory=function(){return this.backoffFactoryMemo=this.backoffFactoryMemo||new r.default(1e3,100,300),this.backoffFactoryMemo},e.prototype.promisedWebSocketFactory=function(){return new s.default(this.domWebSocketFactory())},e.prototype.domWebSocketFactory=function(){return new i.default},e.prototype.messageSerialization=function(){return new h.default(this.typeSerialization(),this.flagSerialization(),this.screenSignalingSerialization())},e.prototype.typeSerialization=function(){return new b.default},e.prototype.flagSerialization=function(){return new l.default},e.prototype.screenSignalingSerialization=function(){return new u.default},e}();t.default=v},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,a,n,r){var i=e.call(this,t,a,n)||this;return i.limit=r,i.attempts=0,i}return r(t,e),t.prototype.nextBackoffAmountMs=function(){if(this.attempts++,this.attempts>this.limit)throw new Error("retry limit exceeded");return e.prototype.nextBackoffAmountMs.call(this)},t}(a(15).default);t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(138),r=function(){function e(e){void 0===e&&(e={}),this.mediaRecordingOptions=e}return e.prototype.create=function(e){return new n.default(e,this.mediaRecordingOptions)},e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var r=a(4),i=a(1),o=a(43),c=function(){function e(t,a,r){void 0===a&&(a={}),void 0===r&&(r=e.browser),this.mediaStream=t,this.browser=r,this.delegate=null,this.listeners=new Map,this.options=n(n({},a),e.options)}return e.prototype.key=function(){var e=this;if(!this.delegate||"paused"!==this.delegate.state){var t=this.delegate,a=null===t?this.mediaStream:this.mediaStream.clone();this.delegate=new MediaRecorder(a,this.options),this.delegate.addEventListener("dataavailable",(function(t){e.dispatchEvent(t)})),this.delegate.stream.getTracks().forEach((function(t){t.addEventListener("ended",(function(){var a=new CustomEvent(o.default.EndedEvent,{detail:t});e.dispatchEvent(a)}))})),null!==t&&(this.browser.hasChromiumWebRTC()&&t.stream.getTracks().forEach((function(e){return e.stop()})),t.stop()),this.delegate.start(this.timeSliceMs)}},e.prototype.start=function(e){this.timeSliceMs=e,this.key()},e.prototype.stop=function(){var e=this;return new Promise((function(t,a){null===e.delegate&&a(new Error("not started")),e.delegate.addEventListener("stop",(function(){t()})),e.delegate.stream.getTracks().forEach((function(e){e.stop()})),e.delegate.stop()}))},e.prototype.pause=function(){var e=this;return new Promise((function(t,a){null===e.delegate&&a(new Error("not started")),e.delegate.addEventListener("pause",(function(){t()})),e.delegate.pause()}))},e.prototype.unpause=function(){var e=this;return new Promise((function(t,a){null===e.delegate&&a(new Error("not started")),t(),e.delegate.resume()}))},Object.defineProperty(e.prototype,"recordingState",{get:function(){return this.delegate.state},enumerable:!0,configurable:!0}),e.prototype.addEventListener=function(e,t){var a=this;i.default.of(this.listeners.get(e)).defaulting(new Set).map((function(e){return e.add(t)})).map((function(t){return a.listeners.set(e,t)}))},e.prototype.dispatchEvent=function(e){return i.default.of(this.listeners.get(e.type)).map((function(t){t.forEach((function(t){return t(e)}))})),e.defaultPrevented},e.prototype.removeEventListener=function(e,t){i.default.of(this.listeners.get(e)).map((function(e){return e.delete(t)}))},e.browser=new r.default,e.options={mimeType:"video/webm; codecs=vp8"},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(1),o=a(5),c=function(){function e(e){this.webSocket=e,this.callbacks=new Map}return Object.defineProperty(e.prototype,"url",{get:function(){return this.webSocket.url},enumerable:!0,configurable:!0}),e.prototype.open=function(e){return n(this,void 0,void 0,(function(){var t,a=this;return r(this,(function(n){return t=new Promise((function(e,t){a.webSocket.onclose=function(e){a.dispatchEvent(e)},a.webSocket.onmessage=function(e){a.dispatchEvent(e)},a.webSocket.onopen=function(t){a.dispatchEvent(t),e(t)},a.webSocket.onerror=function(e){a.dispatchEvent(e),t(e)}})),[2,this.withTimeout(t,e)]}))}))},e.prototype.close=function(e,t,a){return n(this,void 0,void 0,(function(){var n,i=this;return r(this,(function(r){return n=new Promise((function(e,n){i.webSocket.onclose=function(t){i.dispatchEvent(t),e(t)},i.webSocket.onerror=function(e){i.dispatchEvent(e),n(e)},i.webSocket.close(t,a)})),[2,this.withTimeout(n,e)]}))}))},e.prototype.send=function(e){this.webSocket.send(e)},e.prototype.onMessage=function(e){return this.addEventListener("message",e),this},e.prototype.onClose=function(e){return this.addEventListener("close",e),this},e.prototype.dispatchEvent=function(e){return i.default.of(this.callbacks.get(e.type)).map((function(t){return t.forEach((function(t){return t(e)}))})),e.defaultPrevented},e.prototype.addEventListener=function(e,t){var a=this;i.default.of(this.callbacks.get(e)).defaulting(new Set).map((function(e){return e.add(t)})).map((function(t){return a.callbacks.set(e,t)}))},e.prototype.removeEventListener=function(e,t){i.default.of(this.callbacks.get(e)).map((function(e){return e.delete(t)}))},e.prototype.withTimeout=function(e,t){return n(this,void 0,void 0,(function(){var a;return r(this,(function(n){return a=new Promise((function(e,a){new o.default(t).start((function(){a(new Error("Promise timed out after "+t+"ms"))}))})),[2,Promise.race([e,a])]}))}))},e}();t.default=c},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(1),o=a(5),c=a(141),s=function(){function e(e,t,a,n,r){this.url=e,this.protocols=t,this.binaryType=a,this.webSocketFactory=n,this.backoff=r,this.callbacks=new Map,this.timeoutScheduler=null,this.webSocket=null}return e.prototype.close=function(e,t,a){return n(this,void 0,void 0,(function(){var n;return r(this,(function(r){return null===this.webSocket?[2,Promise.reject(new Error("closed"))]:(this.willCloseWebSocket(),n=this.webSocket,this.webSocket=null,[2,n.close(e,t,a)])}))}))},e.prototype.open=function(t){return n(this,void 0,void 0,(function(){var a=this;return r(this,(function(n){return null!==this.webSocket?[2,Promise.reject(new Error("opened"))]:(this.webSocket=this.webSocketFactory.create(this.url,this.protocols,this.binaryType),this.webSocket.addEventListener("close",(function(n){if(e.normalClosureCodes.indexOf(n.code)<=-1)try{var r=a.backoff.nextBackoffAmountMs();a.timeoutScheduler=new o.default(r),a.timeoutScheduler.start((function(){a.timeoutScheduler.stop(),a.open(t).catch((function(e){a.dispatchEvent(new CustomEvent("reconnect_error",{detail:e}))})).then((function(){}))})),a.dispatchEvent(new CustomEvent("reconnect"))}catch(e){a.dispatchEvent(n)}else a.dispatchEvent(n);a.webSocket=null})),this.webSocket.addEventListener("message",(function(e){a.dispatchEvent(e)})),this.webSocket.addEventListener("open",(function(e){a.didOpenWebSocket(),a.dispatchEvent(e)})),[2,this.webSocket.open(t).catch((function(e){throw a.webSocket=null,e}))])}))}))},e.prototype.send=function(e){if(null===this.webSocket)throw new Error("closed");this.webSocket.send(e)},e.prototype.dispatchEvent=function(e){return i.default.of(this.callbacks.get(e.type)).map((function(t){return t.forEach((function(t){return t(e)}))})),e.defaultPrevented},e.prototype.addEventListener=function(e,t){var a=this;i.default.of(this.callbacks.get(e)).defaulting(new Set).map((function(e){return e.add(t)})).map((function(t){return a.callbacks.set(e,t)}))},e.prototype.removeEventListener=function(e,t){i.default.of(this.callbacks.get(e)).map((function(e){return e.delete(t)}))},e.prototype.didOpenWebSocket=function(){i.default.of(this.timeoutScheduler).map((function(e){return e.stop()})),this.backoff.reset(),this.timeoutScheduler=null},e.prototype.willCloseWebSocket=function(){this.didOpenWebSocket()},e.normalClosureCodes=Array.of(c.default.Normal,c.default.EmptyCloseFrame),e}();t.default=s},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Normal=1e3]="Normal",e[e.EmptyCloseFrame=1005]="EmptyCloseFrame"}(n=t.PromisedWebSocketClosureCode||(t.PromisedWebSocketClosureCode={})),t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.message=e}return Object.defineProperty(e.prototype,"attendeeId",{get:function(){return this.message.attendeeId},enumerable:!0,configurable:!0}),e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(43),r=a(16),i=a(11),o=a(48),c=function(){function e(e){this.mediaRecording=e,this.listeners=new Map}return e.prototype.key=function(){return this.mediaRecording.key()},e.prototype.start=function(e){var t=this;this.mediaRecording.addEventListener("dataavailable",(function(e){t.onDataAvailable(e)})),this.mediaRecording.addEventListener(n.default.EndedEvent,(function(){t.dispatchEvent(new CustomEvent(o.default.EndedEvent))}));var a={type:i.default.StreamStart,flags:[r.default.Local],data:new Uint8Array([])};this.dispatchEvent(this.newMessageEvent(a)),this.mediaRecording.start(e)},e.prototype.stop=function(){var e=this;return this.mediaRecording.stop().then((function(){var t={type:i.default.StreamEnd,flags:[r.default.Local],data:new Uint8Array([])};e.dispatchEvent(e.newMessageEvent(t))}))},e.prototype.pause=function(){var e=this;return this.mediaRecording.pause().then((function(){var t={type:i.default.StreamPause,flags:[r.default.Local],data:new Uint8Array([])};e.dispatchEvent(e.newMessageEvent(t))}))},e.prototype.unpause=function(){var e=this;return this.mediaRecording.unpause().then((function(){var t={type:i.default.StreamUnpause,flags:[r.default.Local],data:new Uint8Array([])};e.dispatchEvent(e.newMessageEvent(t))}))},e.prototype.addEventListener=function(e,t){this.listeners.has(e)||this.listeners.set(e,new Set),this.listeners.get(e).add(t)},e.prototype.dispatchEvent=function(e){return this.listeners.has(e.type)&&this.listeners.get(e.type).forEach((function(t){t(e)})),e.defaultPrevented},e.prototype.removeEventListener=function(e,t){this.listeners.has(e)&&this.listeners.get(e).delete(t)},e.prototype.onDataAvailable=function(e){if(0!==e.data.size){var t={type:i.default.WebM,flags:[r.default.Broadcast],data:e.data};this.dispatchEvent(this.newMessageEvent(t))}},e.prototype.newMessageEvent=function(e){return new CustomEvent(o.default.MessageEvent,{detail:e})},e}();t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(145),r=function(){function e(e,t,a,n,r,i,o,c){void 0===c&&(c=100),this.mediaConstraintsProvider=e,this.webSocketFactory=t,this.messageSerialization=a,this.mediaStreamBroker=n,this.screenShareStreamFactory=r,this.mediaRecordingFactory=i,this.logger=o,this.timeSliceMs=c}return e.prototype.create=function(t,a){var r=[e.SessionKey,a],i=this.webSocketFactory.create(t,r,e.BinaryType);return new n.default(i,this.mediaConstraintsProvider,this.timeSliceMs,this.messageSerialization,this.mediaStreamBroker,this.screenShareStreamFactory,this.mediaRecordingFactory,this.logger)},e.SessionKey="_aws_wt_session",e.BinaryType="arraybuffer",e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(4),o=a(1),c=a(5),s=a(48),d=a(16),u=a(11),f=function(){function e(e,t,a,n,r,c,s,d,u){var f=this;void 0===u&&(u=new i.default),this.webSocket=e,this.constraintsProvider=t,this.timeSliceMs=a,this.messageSerialization=n,this.mediaStreamBroker=r,this.screenShareStreamFactory=c,this.mediaRecordingFactory=s,this.logger=d,this.browserBehavior=u,this.observerQueue=new Set,this.stream=null,this.webSocket.addEventListener("message",(function(e){f.didReceiveMessageEvent(e),f.logger.debug((function(){return"dispatched message event"}))})),this.webSocket.addEventListener("close",(function(e){f.logger.info("screen sharing connection closed"),f.stop().catch((function(){})),f.observerQueue.forEach((function(t){o.default.of(t.didClose).map((function(a){return a.bind(t)(e)}))}))})),this.webSocket.addEventListener("reconnect",(function(e){f.logger.info("screen sharing connection reconnecting"),f.stop().catch((function(){})),f.observerQueue.forEach((function(t){o.default.of(t.willReconnect).map((function(a){return a.bind(t)(e)}))}))})),this.webSocket.addEventListener("reconnect_error",(function(e){f.logger.info("reconnect attempt failed"),f.observerQueue.forEach((function(t){o.default.of(t.didFailReconnectAttempt).map((function(a){return a.bind(t)(e)}))}))})),this.webSocket.addEventListener("open",(function(e){f.logger.info("screen sharing connection opened"),f.observerQueue.forEach((function(t){o.default.of(t.didOpen).map((function(a){return a.bind(t)(e)}))}))}))}return e.prototype.open=function(e){return this.logger.info("opening screen sharing connection to "+this.webSocket.url),this.webSocket.open(e)},e.prototype.close=function(e){var t=this;return this.webSocket.close(e).then((function(e){return t.observerQueue.forEach((function(t){o.default.of(t.didClose).map((function(a){return a.bind(t)(e)}))})),e}))},e.prototype.start=function(e,t){return n(this,void 0,void 0,(function(){var a,n,i=this;return r(this,(function(r){switch(r.label){case 0:if(null==t&&(t=3e3),null!==this.stream)throw new Error("started");if(this.browserBehavior.screenShareUnsupported())throw new Error("Safari browser does not support screen sharing");return[4,this.mediaStreamBroker.acquireDisplayInputStream(this.constraintsProvider(e))];case 1:return a=r.sent(),t>0?[4,this.ping(t)]:[3,3];case 2:r.sent(),r.label=3;case 3:return(n=this.screenShareStreamFactory.create(this.mediaRecordingFactory.create(a))).addEventListener(s.default.MessageEvent,(function(e){try{i.send(e.detail),i.logger.debug((function(){return"dispatched screen sharing stream message event"}))}catch(e){i.logger.error(e)}})),n.addEventListener(s.default.EndedEvent,(function(){i.logger.info("stream ended"),i.stop().then((function(){}))})),n.start(this.timeSliceMs),this.stream=n,this.observerQueue.forEach((function(e){o.default.of(e.didStartScreenSharing).map((function(t){return t.bind(e)()}))})),this.logger.info("screen sharing stream started"),[2]}}))}))},e.prototype.stop=function(){var e=this;return new Promise((function(t,a){if(null===e.stream)return a(new Error("not started"));e.stream.stop().then((function(){e.observerQueue.forEach((function(e){o.default.of(e.didStopScreenSharing).map((function(t){return t.bind(e)()}))}))})).then((function(){e.logger.info("screen sharing stream stopped")})).finally((function(){e.stream=null})).then(t)}))},e.prototype.pause=function(){var e=this;return new Promise((function(t,a){if(null===e.stream)return a(new Error("not started"));e.stream.pause().then((function(){e.observerQueue.forEach((function(e){o.default.of(e.didPauseScreenSharing).map((function(t){return t.bind(e)()}))}))})),e.logger.info("screen sharing stream paused"),t()}))},e.prototype.unpause=function(){var e=this;return new Promise((function(t,a){if(null===e.stream)return a(new Error("not started"));e.stream.unpause().then((function(){e.observerQueue.forEach((function(e){o.default.of(e.didUnpauseScreenSharing).map((function(t){return t.bind(e)()}))}))})),e.logger.info("screen sharing stream unpaused"),t()}))},e.prototype.ping=function(e){return n(this,void 0,void 0,(function(){var t,a,n,i=this;return r(this,(function(r){return t=this,a=new Promise((function(e){var a={didReceiveHeartbeatResponse:function(){t.deregisterObserver(this),e()}},n={type:u.default.HeartbeatRequestType,flags:[d.default.Local],data:new Uint8Array([])};i.registerObserver(a),i.send(n)})),n=new Promise((function(t,a){new c.default(e).start((function(){a(new Error("ping timed out after "+e+"ms"))}))})),[2,Promise.race([a,n])]}))}))},e.prototype.registerObserver=function(e){return this.observerQueue.add(e),this},e.prototype.deregisterObserver=function(e){return this.observerQueue.delete(e),this},e.prototype.didReceiveMessageEvent=function(e){switch(this.logger.debug((function(){return"didReceiveMessageEvent: "+new Uint8Array(e.data)})),this.messageSerialization.deserialize(new Uint8Array(e.data)).type){case u.default.HeartbeatResponseType:return this.didReceiveHeartbeatResponseMessage();case u.default.HeartbeatRequestType:return this.didReceiveHeartbeatRequestMessage();case u.default.StreamStop:return this.didReceiveStreamStopMessage();case u.default.KeyRequest:return this.didReceiveKeyRequest();default:return this.didReceiveUnknownMessage()}},e.prototype.didReceiveHeartbeatResponseMessage=function(){this.logger.info("received heartbeat response message"),this.observerQueue.forEach((function(e){o.default.of(e.didReceiveHeartbeatResponse).map((function(t){return t.bind(e)()}))}))},e.prototype.didReceiveKeyRequest=function(){this.logger.info("received key request message"),this.stream.key()},e.prototype.didReceiveStreamStopMessage=function(){this.logger.debug((function(){return"received stream stop message"})),this.observerQueue.forEach((function(e){o.default.of(e.didReceiveStreamStopMessage).map((function(t){return t.bind(e)()}))})),this.stop().then((function(){}))},e.prototype.didReceiveUnknownMessage=function(){this.logger.debug((function(){return"received unknown message"})),this.observerQueue.forEach((function(e){o.default.of(e.didReceiveUnknownMessage).map((function(t){return t.bind(e)()}))}))},e.prototype.didReceiveHeartbeatRequestMessage=function(){this.logger.debug((function(){return"received heartbeat request"})),this.observerQueue.forEach((function(e){o.default.of(e.didReceiveHeartbeatRequest).map((function(t){return t.bind(e)()}))}));var e={type:u.default.HeartbeatResponseType,flags:[d.default.Local],data:new Uint8Array([])};try{this.send(e),this.observerQueue.forEach((function(e){o.default.of(e.didSendHeartbeatResponse).map((function(t){return t.bind(e)()}))}))}catch(e){this.logger.error(e)}},e.prototype.send=function(e){try{return this.webSocket.send(this.messageSerialization.serialize(e)),this.logger.debug((function(){return"sent screen sharing message"})),this.observerQueue.forEach((function(t){o.default.of(t.didSendScreenSharingMessage).map((function(a){return a.bind(t)(e.type)}))})),e}catch(e){throw this.observerQueue.forEach((function(t){o.default.of(t.didFailSend).map((function(a){return a.bind(t)(e)}))})),e}},e}();t.default=f},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,a,n){void 0===n&&(n="RunnableTask");var r=e.call(this,t)||this;return r.fn=a,r.taskName=n,r}return r(t,e),t.prototype.run=function(){return this.fn().then((function(){}))},t}(a(0).default);t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(42),r=a(39),i=a(129),o=a(1),c=a(44),s=a(45),d=a(148),u=a(151),f=a(154),l=a(165),h=a(167),b=function(){function e(e,t){this.configuration=e,this.logger=t;var a=new s.default(new c.default(new r.default),new n.default(1e3,100,300),o.default.of(e.screenSharingSessionOptions.reconnectRetryLimit).getOrElse(5));this.screenViewing=new l.default(new f.default(new d.default,(function(e,t,a){return new i.default(e,a,t)}),a,new u.default(a,t).screenSignalingSessionFactory(),this.logger,{},window))}return e.prototype.open=function(){var e=new h.default(this.configuration.urls.screenViewingURL,this.configuration.urls.screenDataURL,this.configuration.credentials.joinToken,this.configuration.screenViewingTimeoutMs);return this.screenViewing.open(e)},e.prototype.close=function(){return this.screenViewing.close()},e.prototype.start=function(e){return this.logger.warn("ScreenShareViewFacade has been deprecated and will be removed beginning with version 2.0.0. Instead use the startContentShareFromScreenCapture() and stopContentShare() methods on the AudioVideoFacade."),this.screenViewing.start(e)},e.prototype.stop=function(){return this.screenViewing.stop()},e.prototype.presentScaleToFit=function(){this.screenViewing.presentScaleToFit()},e.prototype.presentDragAndZoom=function(){this.screenViewing.presentDragAndZoom()},e.prototype.zoomIn=function(e){this.screenViewing.zoomIn(e)},e.prototype.zoomOut=function(e){this.screenViewing.zoomOut(e)},e.prototype.zoom=function(e){this.screenViewing.zoom(e)},e.prototype.zoomReset=function(){this.screenViewing.zoomReset()},e.prototype.registerObserver=function(e){this.screenViewing.registerObserver(e)},e.prototype.unregisterObserver=function(e){this.screenViewing.unregisterObserver(e)},e}();t.default=b},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(193),r=a(150),i=function(){function e(e){this.provider=e}return e.prototype.create=function(e){return this.provider?this.provider():new r.default(new n.ResizeObserver(e))},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.ContentRect=function(e){if("getBBox"in e){var t=e.getBBox();return Object.freeze({height:t.height,left:0,top:0,width:t.width})}var a=window.getComputedStyle(e);return Object.freeze({height:parseFloat(a.height||"0"),left:parseFloat(a.paddingLeft||"0"),top:parseFloat(a.paddingTop||"0"),width:parseFloat(a.width||"0")})}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.resizeObserver=e}return e.prototype.observe=function(e){this.resizeObserver.observe(e)},e.prototype.unobserve=function(e){this.resizeObserver.unobserve(e)},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(46),r=a(49),i=a(50),o=a(51),c=a(152),s=function(){function e(e,t){this.webSocketFactory=e,this.logger=t,this.memo=null}return e.prototype.screenSignalingSessionFactory=function(){return this.memo=this.memo||new c.default(this.webSocketFactory,this.screenSharingMessageSerialization(),this.logger),this.memo},e.prototype.screenSharingMessageSerialization=function(){return new i.default(new o.default,new r.default,new n.default)},e}();t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(153),r=function(){function e(e,t,a){this.webSocketFactory=e,this.messageSerialization=t,this.logger=a}return e.prototype.create=function(e,t){var a=[n.default.SessionKey,t];return new n.default(this.webSocketFactory.create(e,a,"arraybuffer"),this.messageSerialization,this.logger)},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=a(16),i=a(11),o=a(52),c=function(){function e(e,t,a){var n=this;this.webSocket=e,this.messageSerialization=t,this.logger=a,this.listeners=new Map,this.webSocket.addEventListener("message",(function(e){n.onMessageHandler(e)})),this.webSocket.addEventListener("close",(function(e){n.dispatchEvent(e)}))}return e.prototype.open=function(e){return this.webSocket.open(e)},e.prototype.close=function(e){return this.webSocket.close(e)},e.prototype.addEventListener=function(e,t){var a=this;n.default.of(this.listeners.get(e)).defaulting(new Set).map((function(e){return e.add(t)})).map((function(t){return a.listeners.set(e,t)}))},e.prototype.dispatchEvent=function(e){return n.default.of(this.listeners.get(e.type)).map((function(t){return t.forEach((function(t){return t(e)}))})),e.defaultPrevented},e.prototype.removeEventListener=function(e,t){n.default.of(this.listeners.get(e)).map((function(e){return e.delete(t)}))},e.prototype.onMessageHandler=function(e){var t=new Uint8Array(e.data),a=this.messageSerialization.deserialize(t);switch(a.type){case i.default.HeartbeatRequestType:this.logger.info("DefaultScreenSignalingSession received HeartbeatRequest");var n={type:i.default.HeartbeatResponseType,flags:[r.default.Local],data:new Uint8Array([])};this.logger.info("Sending HeartbeatResponseType"),this.webSocket.send(this.messageSerialization.serialize(n)),this.dispatchEvent(new CustomEvent(o.default.Heartbeat));break;case i.default.StreamStart:this.logger.info("received StreamStart; "+JSON.stringify(a.detail));var c=new CustomEvent(o.default.StreamStart,{detail:a.detail});this.dispatchEvent(c);break;case i.default.StreamEnd:this.logger.info("received StreamEnd; "+JSON.stringify(a.detail));var s=new CustomEvent(o.default.StreamEnd,{detail:a.detail});this.dispatchEvent(s);break;case i.default.PresenterSwitch:this.logger.info("received PresenterSwitch; "+JSON.stringify(a.detail));var d=new CustomEvent(o.default.StreamSwitch,{detail:a.detail});this.dispatchEvent(d)}},e.SessionKey="_aws_wt_session",e}();t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(40),r=a(155),i=a(156),o=a(160),c=a(161),s=a(162),d=a(163),u=a(164),f=function(){function e(e,t,a,n,r,i,o){var c=this.createSession(a,r,i),s=this.createJPEGDecoderController(r,i),d=this.createDeltaRenderer(s,r,o,e,t,i),u=this.createDeltaSource(d,r,i),f=this.createViewer(d,r,i),l=this.createMessageHandler(c,d,u,f,r,i),h=this.createMessageDispatcher(l,i),b=this.createSignalingSession(n,i);b.registerObserver({streamDidStart:function(e){d.revealViewport()},streamDidStop:function(e){d.hideViewport()}}),this.viewingSession=c.withObserver(h),this.deltaRenderer=d,this.deltaSource=u,this.jpegDecoderController=s,this.messageDispatcher=h,this.messageHandler=l,this.signalingSession=b,this.viewer=f}return e.prototype.createSession=function(e,t,a){var n=new s.default(e,t);return a&&a.sessionProvider&&a.sessionProvider(n)||n},e.prototype.createDeltaRenderer=function(e,t,a,n,r,o){var c=new i.default(e,t,a,n,r);return o&&o.deltaRendererProvider&&o.deltaRendererProvider(c)||c},e.prototype.createDeltaSource=function(e,t,a){var n=new o.default(e,t);return a&&a.deltaSourceProvider&&a.deltaSourceProvider(n)||n},e.prototype.createJPEGDecoderController=function(e,t){var a=new n.default(e,65536);return t&&t.jpegDecoderControllerProvider&&t.jpegDecoderControllerProvider(a)||a},e.prototype.createMessageDispatcher=function(e,t){var a=new r.default(e);return t&&t.messageDispatcherProvider&&t.messageDispatcherProvider(a)||a},e.prototype.createMessageHandler=function(e,t,a,n,r,i){var o=new c.default(e,t,a,n,r);return i&&i.messageHandlerProvider&&i.messageHandlerProvider(o)||o},e.prototype.createViewer=function(e,t,a){var n=new u.default(e,t);return a&&a.viewerProvider&&a.viewerProvider(n)||n},e.prototype.createSignalingSession=function(e,t){var a=new d.default(e);return t&&t.signalingSession&&t.signalingSession(a)||a},e}();t.default=f},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(53),r=function(){function e(e){this.messageHandler=e}return e.prototype.didCloseWebSocket=function(e){},e.prototype.didReceiveWebSocketMessage=function(e){var t=new DataView(e.data);switch(t.getUint8(0)){case n.default.ECHO_REQUEST:return void this.messageHandler.handleEchoRequest(t);case n.default.SETUP:return void this.messageHandler.handleSetup(t);case n.default.DELTA:return void this.messageHandler.handleDelta(t);case n.default.SYNC:return void this.messageHandler.handleSync(t);case n.default.NOSCREEN:return void this.messageHandler.handleNoScreen(t);case n.default.ENDSCREEN:return void this.messageHandler.handleEndScreen(t);default:this.messageHandler.handleDefault(t)}},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(14),r=a(157),i=a(158),o=a(23),c=a(159),s=function(){function e(e,t,a,n,i){var c=this;this.jpegDecoderController=e,this.logger=t,this.window=a,this.dragObserverFactory=i,this.syncBuffer=[],this.jpegDataArrays=[],this.hasRendered=[],this.presentation=new r.default,this.policy=new o.default,this.viewport=null,this.content=null,this.dragObserver=null,this.resizeObserver=n.create((function(){return c.updatePresentation&&c.updatePresentation()}))}return e.make2DArray=function(e,t){for(var a=[],n=0;n<t;n++)a[n]=new Array(e);return a},e.prototype.buildViewer=function(t){this.logger.info("DefaultScreenViewingDeltaRenderer: Building viewer with info "+JSON.stringify(t)),this.syncBuffer=e.make2DArray(t.screenWidth,t.screenHeight),this.jpegDataArrays=e.make2DArray(t.screenWidth,t.screenHeight),this.hasRendered=e.make2DArray(t.screenWidth,t.screenHeight),this.jpegDecoderInstance=this.jpegDecoderController.createInstance(t.macroBlock,t.macroBlock),this.imageDimensions=t},e.prototype.resizeAndSync=function(){if(this.imageDimensions&&this.jpegDecoderInstance){var t=this.window.performance.now();!this.content||t-this.lastResizeAndSyncTime<e.SYNC_TIMEOUT_MS||(this.logger.debug((function(){return"DefaultScreenViewingDeltaRenderer: sync'ing"})),this.content.width===this.imageDimensions.imageWidthPixels&&this.content.height===this.imageDimensions.imageHeightPixels||(this.content.width=this.imageDimensions.imageWidthPixels,this.content.height=this.imageDimensions.imageHeightPixels,this.updatePresentation&&this.updatePresentation()),this.renderSync(),this.lastResizeAndSyncTime=this.window.performance.now())}},e.prototype.renderSync=function(){this.logger.debug((function(){return"DefaultScreenViewingDeltaRenderer: Rendering sync"}));var e=this.getContext();if(e)for(var t=function(t){for(var n=function(n){var r=n*a.imageDimensions.macroBlock,i=t*a.imageDimensions.macroBlock,o=a.hasRendered[t][n],c=a.jpegDataArrays[t][n];if(!c||o)return"continue";var s=a.getImageData(c);if(!s)return"continue";e.putImageData(s,r,i),a.hasRendered[t][n]=!0,a.logger.debug((function(){return"rendered row="+t+" col="+n}))},r=0;r<a.imageDimensions.screenWidth;r++)n(r)},a=this,n=0;n<this.imageDimensions.screenHeight;n++)t(n)},e.prototype.getImageData=function(e){try{return this.jpegDecoderInstance.decodeToImageData(e)}catch(e){this.logger.error(e)}},e.prototype.getContext=function(){return this.content&&this.content.getContext("2d")},e.prototype.close=function(){this.logger.info("DefaultScreenViewingDeltaRenderer: Closing"),this.getContext()&&this.getContext().clearRect(0,0,this.content.width,this.content.height),this.viewport&&this.viewport.removeChild(this.content),this.dragObserver&&this.dragObserver.unobserve(),this.content=null,this.viewport=null,this.dragObserver=null},e.prototype.setViewport=function(t){var a=this;this.viewport||this.content?this.logger.warn("Current view must be closed before starting anew"):(this.viewport=t,this.content=this.window.document.createElement("canvas"),this.viewport.prepend(this.content),this.resizeObserver.observe(t),this.dragObserver=this.dragObserverFactory(this.window,(function(e){e.type!==n.default.BEGIN&&a.updatePresentation&&a.updatePresentation({type:i.ZoomType.NONE},e)}),t),this.imageDimensions&&(this.hasRendered=e.make2DArray(this.imageDimensions.screenWidth,this.imageDimensions.screenHeight)))},e.prototype.hideViewport=function(){this.content&&(this.content.style.display="none")},e.prototype.revealViewport=function(){this.content&&(this.content.style.display="block")},e.prototype.changePresentationPolicy=function(e){this.policy=e,this.updatePresentation()},e.prototype.zoomRelative=function(e){this.updatePresentation({type:i.ZoomType.ZOOM,relativeFactor:e})},e.prototype.zoomAbsolute=function(e){this.updatePresentation({type:i.ZoomType.ZOOM,absoluteFactor:e})},e.prototype.zoomReset=function(){this.updatePresentation({type:i.ZoomType.RESET})},e.prototype.updatePresentation=function(e,t){this.imageDimensions&&this.viewport&&this.content&&this.presentation.present(c.default.createSource(this.imageDimensions),c.default.createViewport(this.viewport,this.window),c.default.createContent(this.content,this.window),this.policy,e,t)},e.SYNC_TIMEOUT_MS=500,e}();t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(14),r=a(54),i=function(){function e(){}return e.prototype.present=function(t,a,n,r,i,o){var c=a.getDimensions()[0]/a.getDimensions()[1],s=t.getDimensions()[0]/t.getDimensions()[1],d={dimensions:n.getDimensions(),translations:n.getTranslations()},u={contentPlacement:d,sourceDimensions:t.getDimensions(),sourceAspectRatio:s,viewportDimensions:a.getDimensions(),viewportAspectRatio:c,scale:n.getDimensions()[0]/t.getDimensions()[0],boxType:e.boxType(s,c),focus:{normalizedContentFocus:e.contentFocus(d,o),normalizedViewportFocus:e.viewportFocus(a.getDimensions(),o)}},f=r.calculate(u,{zoom:i,drag:o});a.setPosition("relative"),a.setOverflow("hidden"),n.setPosition("absolute"),n.setDimensions(f.dimensions),n.setTranslations(f.translations)},e.cssPixels=function(e){return e+"px"},e.boxType=function(e,t){return e>t?r.default.LETTER_BOX:e<t?r.default.PILLAR_BOX:r.default.NONE},e.contentFocus=function(e,t){return t&&t.type!==n.default.END?t.type===n.default.BEGIN?[(t.coords[0]-e.translations[0])/e.dimensions[0],(t.coords[1]-e.translations[1])/e.dimensions[1]]:[(t.last.coords[0]-e.translations[0])/e.dimensions[0],(t.last.coords[1]-e.translations[1])/e.dimensions[1]]:[.5,.5]},e.viewportFocus=function(e,t){return t&&t.type!==n.default.END?[t.coords[0]/e[0],t.coords[1]/e[1]]:[.5,.5]},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.ZOOM=0]="ZOOM",e[e.RESET=1]="RESET",e[e.NONE=2]="NONE"}(t.ZoomType||(t.ZoomType={}))},function(e,t,a){"use strict";var n=this&&this.__read||function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}return o};Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.createContent=function(e,t){return{getPosition:function(){return e.style.position},getDimensions:function(){return[parseFloat(t.getComputedStyle(e).width.replace("px","")),parseFloat(t.getComputedStyle(e).height.replace("px",""))]},getTranslations:function(){return[parseFloat(t.getComputedStyle(e).left.replace("px","")),parseFloat(t.getComputedStyle(e).top.replace("px",""))]},setPosition:function(t){e.style.position=t},setDimensions:function(t){var a=n(t,2),r=a[0],i=a[1];e.style.width=r+"px",e.style.height=i+"px"},setTranslations:function(t){var a=n(t,2),r=a[0],i=a[1];e.style.left=r+"px",e.style.top=i+"px"}}},e.createSource=function(e){return{getDimensions:function(){return[e.imageWidthPixels,e.imageHeightPixels]}}},e.createViewport=function(e,t){return{getDimensions:function(){return[parseFloat(t.getComputedStyle(e).width.replace("px","")),parseFloat(t.getComputedStyle(e).height.replace("px",""))]},setOverflow:function(t){e.style.overflow=t},setPosition:function(t){e.style.position=t}}},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.deltaRenderer=e,this.logger=t}return e.prototype.flushSyncBuffer=function(){this.logger.debug((function(){return"DefaultScreenViewingDeltaSource: Flushing sync buffer"}));for(var e=0;e<this.deltaRenderer.imageDimensions.screenHeight;e++)for(var t=0;t<this.deltaRenderer.imageDimensions.screenWidth;t++)this.deltaRenderer.syncBuffer[e][t]&&(this.deltaRenderer.jpegDataArrays[e][t]=this.deltaRenderer.syncBuffer[e][t],this.deltaRenderer.syncBuffer[e][t]=null,this.deltaRenderer.hasRendered[e][t]=!1)},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(53),r=function(){function e(e,t,a,n,r){this.client=e,this.deltaRenderer=t,this.deltaSource=a,this.viewer=n,this.logger=r}return e.prototype.handleEchoRequest=function(e){this.logger.info("DefaultScreenViewingMessageHandler: Handling echo request message"),e.setUint8(0,n.default.ECHO_RESPONSE);try{this.client.send(new Uint8Array(e.buffer))}catch(e){this.logger.warn("DefaultScreenViewingMessageHandler: Error sending echo response"),this.logger.warn(e)}},e.prototype.handleSetup=function(t){var a=t.getInt32(1),n=t.getInt32(5),r=t.getInt32(9);this.logger.info("DefaultScreenViewingMessageHandler: Handling setup message, received width = "+a+", height = "+n+", and macro block = "+r);var i=e.calculateImageDimensions(a,n,r);this.deltaRenderer.buildViewer(i)},e.calculateImageDimensions=function(e,t,a){var n=e%a,r=t%a;return{imageWidthPixels:e,imageHeightPixels:t,macroBlock:a,screenWidth:Math.floor(e/a)+(0===n?0:1),screenHeight:Math.floor(t/a)+(0===r?0:1),edgeWidth:0===n?a:n,edgeHeight:0===r?a:r,tileWidth:a,tileHeight:a}},e.prototype.handleDelta=function(e){this.logger.debug((function(){return"DefaultScreenViewingMessageHandler: Handling delta"}));var t=e.getUint8(1),a=e.getUint8(2);this.deltaSource.pendingDx=t,this.deltaSource.pendingDy=a},e.prototype.handleSync=function(e){this.logger.debug((function(){return"DefaultScreenViewingMessageHandler: Handling sync"})),this.deltaSource.flushSyncBuffer(),this.viewer.resizeAndSync(),this.deltaSource.notShared&&(this.deltaSource.notShared=!1)},e.prototype.handleNoScreen=function(e){this.logger.info("DefaultScreenViewingMessageHandler: Handling no screen"),this.deltaSource.notShared=!0},e.prototype.handleEndScreen=function(e){this.logger.info("DefaultScreenViewingMessageHandler: Handling end screen"),this.viewer.stop()},e.prototype.handleDefault=function(t){this.logger.debug((function(){return"DefaultScreenViewingMessageHandler: Handling default"}));var a=t.getUint8(0),n=t.getUint8(1);if(e.shouldHandle(a,n)){var r=this.deltaSource.pendingDx,i=this.deltaSource.pendingDy;this.deltaRenderer.syncBuffer[i][r]=new Uint8Array(t.buffer)}},e.shouldHandle=function(e,t){return e===n.default.JPEG_HEADER_BYTE_0&&t===n.default.JPEG_HEADER_BYTE_1},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=function(){function e(e,t){this.webSocketFactory=e,this.logger=t,this.webSocket=null}return e.prototype.withObserver=function(e){return this.observer=e,this},e.prototype.openConnection=function(e){var t=this;return this.logger.info("DefaultScreenViewingSession: Opening connection"),this.webSocket?Promise.reject(new Error("Must close existing connection before opening a new one")):(this.webSocket=this.webSocketFactory.create(e.screenViewingURL,e.protocols(),"arraybuffer"),this.webSocket.addEventListener("message",(function(e){n.default.of(t.observer).map((function(a){n.default.of(a.didReceiveWebSocketMessage).map((function(a){return a.bind(t.observer)(e)}))}))})),this.webSocket.addEventListener("close",(function(e){n.default.of(t.observer).map((function(a){n.default.of(a.didCloseWebSocket).map((function(a){return a.bind(t.observer)(e)}))})),t.webSocket=null})),this.webSocket.open(e.timeoutMs))},e.prototype.closeConnection=function(){if(this.logger.info("DefaultScreenViewingSession: Closing connection"),!this.webSocket)return Promise.reject(new Error("No websocket to close"));var t=this.webSocket;return this.webSocket=null,t.close(e.DEFAULT_TIMEOUT).then((function(){}))},e.prototype.send=function(e){this.logger.debug((function(){return"DefaultScreenViewingSession: Sending "+e.byteLength+" bytes"})),this.webSocket.send(e)},e.DEFAULT_TIMEOUT=1e3,e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(1),r=a(52),i=function(){function e(e){this.screenSignalingSessionFactory=e,this.DEFAULT_TIMEOUT_MS=500,this.observers=new Set}return e.prototype.open=function(e){var t=this;return this.session?Promise.reject(new Error("Must close connection before opening another")):(this.session=this.screenSignalingSessionFactory.create(e.screenDataURL,e.sessionToken),this.session.addEventListener(r.default.StreamStart,(function(e){t.observers.forEach((function(t){n.default.of(t.streamDidStart).map((function(t){return t(e.detail)}))}))})),this.session.addEventListener(r.default.StreamEnd,(function(e){t.observers.forEach((function(t){n.default.of(t.streamDidStop).map((function(t){return t(e.detail)}))}))})),this.session.addEventListener(r.default.StreamSwitch,(function(e){t.observers.forEach((function(t){return n.default.of(t.streamDidSwitch).map((function(t){return t(e.detail)}))}))})),this.session.open(e.timeoutMs).then((function(){})))},e.prototype.close=function(){if(!this.session)return Promise.resolve();var e=this.session;return this.session=null,e.close(this.DEFAULT_TIMEOUT_MS).then((function(){}))},e.prototype.registerObserver=function(e){this.observers.add(e)},e.prototype.unregisterObserver=function(e){this.observers.delete(e)},e}();t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this.deltaRenderer=e,this.logger=t}return e.prototype.start=function(e){this.logger.info("DefaultScreenViewingViewer: Starting"),this.deltaRenderer.setViewport(e)},e.prototype.stop=function(){this.logger.info("DefaultScreenViewingViewer: Stopping"),this.deltaRenderer.close()},e.prototype.resizeAndSync=function(){this.deltaRenderer.resizeAndSync()},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(166),r=a(23),i=function(){function e(e){this.componentContext=e}return e.prototype.open=function(e){var t=this;return this.request=e,this.componentContext.jpegDecoderController.init().then((function(){return t.componentContext.signalingSession.open(e)})).then((function(){}))},e.prototype.close=function(){var e=this;return this.stop().catch((function(){})).finally((function(){return e.componentContext.signalingSession.close()}))},e.prototype.start=function(e){return this.componentContext.viewer.start(e),this.componentContext.viewingSession.openConnection(this.request).then((function(){}))},e.prototype.stop=function(){return this.componentContext.viewer.stop(),this.componentContext.viewingSession.closeConnection()},e.prototype.presentScaleToFit=function(){this.componentContext.deltaRenderer.changePresentationPolicy(new r.default)},e.prototype.presentDragAndZoom=function(){this.componentContext.deltaRenderer.changePresentationPolicy(new n.default)},e.prototype.zoomIn=function(e){this.componentContext.deltaRenderer.zoomRelative(e||1.25)},e.prototype.zoomOut=function(e){this.componentContext.deltaRenderer.zoomRelative(e||.8)},e.prototype.zoom=function(e){this.componentContext.deltaRenderer.zoomAbsolute(e)},e.prototype.zoomReset=function(){this.componentContext.deltaRenderer.zoomReset()},e.prototype.registerObserver=function(e){this.componentContext.signalingSession.registerObserver(e)},e.prototype.unregisterObserver=function(e){this.componentContext.signalingSession.unregisterObserver(e)},e}();t.default=i},function(e,t,a){"use strict";var n=this&&this.__read||function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}return o};Object.defineProperty(t,"__esModule",{value:!0});var r=a(14),i=a(158),o=a(23),c=function(){function e(){this.calculate=function(t,a){var n=e.getNewContentDimensions(t.contentPlacement.dimensions,t.sourceDimensions,a);return e.shouldScaleToFit(n,t.viewportDimensions,a)?(new o.default).calculate(t):a&&a.drag&&a.drag.type!==r.default.END?{dimensions:n,translations:[t.focus.normalizedViewportFocus[0]*t.viewportDimensions[0]-t.focus.normalizedContentFocus[0]*n[0],t.focus.normalizedViewportFocus[1]*t.viewportDimensions[1]-t.focus.normalizedContentFocus[1]*n[1]]}:{dimensions:n,translations:[e.centerOrRemoveWhitespaceDim(n[0],t.contentPlacement.translations[0],t.viewportDimensions[0]),e.centerOrRemoveWhitespaceDim(n[1],t.contentPlacement.translations[1],t.viewportDimensions[1])]}}}return e.getNewContentDimensions=function(e,t,a){return a&&a.zoom&&a.zoom.relativeFactor?e.map((function(e){return e*a.zoom.relativeFactor})):a&&a.zoom&&a.zoom.absoluteFactor?t.map((function(e){return e*a.zoom.absoluteFactor})):e},e.centerOrRemoveWhitespaceDim=function(e,t,a){return e<=a?a/2-e/2:t>0?0:t+e<a?a-e:t},e.shouldScaleToFit=function(e,t,a){var r=n(e,2),o=r[0],c=r[1],s=n(t,2),d=s[0],u=s[1];return a&&a.zoom&&a.zoom.type===i.ZoomType.RESET||o<=d&&c<=u},e}();t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,a,n){this.screenViewingURLWithOptionalSessionToken=e,this.screenDataURL=t,this.sessionToken=a,this.timeoutMs=n}return Object.defineProperty(e.prototype,"screenViewingURL",{get:function(){return this.screenViewingURLWithOptionalSessionToken.includes("&session_token=")?this.screenViewingURLWithOptionalSessionToken:this.screenViewingURLWithOptionalSessionToken+"&session_token="+this.sessionToken},enumerable:!0,configurable:!0}),e.prototype.protocols=function(){return[]},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,a,n){this.sequenceNumber=e,this.message=t,this.timestampMs=a,this.logLevel=n};t.default=n},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=a(12),o=function(e){function t(){return e.call(this,i.default.DEBUG)||this}return r(t,e),t}(a(170).default);t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(12),r=function(){function e(e){void 0===e&&(e=n.default.OFF),this.level=e}return e.prototype.info=function(e){},e.prototype.warn=function(e){},e.prototype.error=function(e){},e.prototype.debug=function(e){n.default.DEBUG<this.level||e()},e.prototype.setLogLevel=function(e){this.level=e},e.prototype.getLogLevel=function(){return this.level},e}();t.default=r},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],n=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=a(57);t.logger=new o.ConsoleLogger("The Gary",o.LogLevel.INFO),t.QualityMappings={"360p":[640,360,15,600],"540p":[960,540,15,1400],"720p":[1280,720,15,1400]};var c=function(){function e(){this.tiles={},this.tileStates={}}return e.prototype.acquireTileIndex=function(t){for(var a=0;a<e.MAX_TILES;a++)if(this.tiles[a]===t)return a;for(a=0;a<e.MAX_TILES;a++)if(!(a in this.tiles))return this.tiles[a]=t,a;throw new Error("no tiles are available")},e.prototype.releaseTileIndex=function(t){for(var a=0;a<e.MAX_TILES;a++)if(this.tiles[a]===t)return delete this.tiles[a],a;return e.MAX_TILES},e.MAX_TILES=16,e}(),s=function(e,t,a,n,r){void 0===t&&(t=440),void 0===a&&(a=1),void 0===n&&(n=.1),void 0===r&&(r=.1);var i=new(window.AudioContext||window.webkitAudioContext),c=i.createGain();c.gain.value=0;var s=i.createOscillator();s.frequency.value=t,s.connect(c);var d=i.createMediaStreamDestination();c.connect(d);var u=i.currentTime+.1;c.gain.linearRampToValueAtTime(0,u),c.gain.linearRampToValueAtTime(r,u+n),c.gain.linearRampToValueAtTime(r,u+n+a),c.gain.linearRampToValueAtTime(0,u+2*n+a),s.start();var f=new o.DefaultAudioMixController;f.bindAudioDevice({deviceId:e}),f.bindAudioElement(new Audio),f.bindAudioStream(d.stream),new o.TimeoutScheduler(1e3*(2*n+a+1)).start((function(){i.close()}))},d=function(){function e(){this.showActiveSpeakerScores=!1,this.activeSpeakerLayout=!0,this.meeting=null,this.name=null,this.voiceConnectorId=null,this.sipURI=null,this.region=null,this.meetingSession=null,this.audioVideo=null,this.tileOrganizer=new c,this.canStartLocalVideo=!0,this.roster={},this.tileIndexToTileId={},this.tileIdToTileIndex={},this.cameraDeviceIds=[],this.microphoneDeviceIds=[],this.buttonStates={"button-microphone":!0,"button-camera":!1,"button-speaker":!0,"button-screen-share":!1,"button-screen-view":!1,"button-pause-screen-share":!1},this.enableWebAudio=!1,this.analyserNodeCallback=function(){},this.selectedVideoInput=null,window.app=this,this.switchToFlow("flow-authenticate"),document.getElementById("sdk-version").innerHTML="amazon-chime-sdk-js@"+o.Versioning.sdkVersion,this.initEventListeners(),this.initParameters()}return e.prototype.initParameters=function(){var e=new URL(window.location.href).searchParams.get("m");e?(document.getElementById("inputMeeting").value=e,document.getElementById("inputName").focus()):document.getElementById("inputMeeting").focus()},e.prototype.initEventListeners=function(){var t=this;window.addEventListener("resize",(function(){t.layoutVideoTiles()})),document.getElementById("form-authenticate").addEventListener("submit",(function(e){e.preventDefault(),t.meeting=document.getElementById("inputMeeting").value,t.name=document.getElementById("inputName").value,t.region=document.getElementById("inputRegion").value,(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e,t;return r(this,(function(a){switch(a.label){case 0:this.showProgress("progress-authenticate"),e="",a.label=1;case 1:return a.trys.push([1,3,,4]),[4,this.authenticate()];case 2:return e=a.sent(),[3,4];case 3:return t=a.sent(),document.getElementById("failed-meeting").innerHTML="Meeting ID: "+this.meeting,document.getElementById("failed-meeting-error").innerHTML=t.message,this.switchToFlow("flow-failed-meeting"),[2];case 4:return document.getElementById("meeting-id").innerHTML=this.meeting+" ("+this.region+")",document.getElementById("chime-meeting-id").innerHTML=""+e,document.getElementById("info-meeting").innerHTML=this.meeting,document.getElementById("info-name").innerHTML=this.name,this.switchToFlow("flow-devices"),[4,this.openAudioInputFromSelection()];case 5:a.sent(),a.label=6;case 6:return a.trys.push([6,8,,9]),[4,this.openVideoInputFromSelection(document.getElementById("video-input").value,!0)];case 7:return a.sent(),[3,9];case 8:return a.sent(),this.log("no video input device selected"),[3,9];case 9:return[4,this.openAudioOutputFromSelection()];case 10:return a.sent(),this.hideProgress("progress-authenticate"),[2]}}))}))}))})),document.getElementById("to-sip-flow").addEventListener("click",(function(e){e.preventDefault(),t.switchToFlow("flow-sip-authenticate")})),document.getElementById("form-sip-authenticate").addEventListener("submit",(function(a){a.preventDefault(),t.meeting=document.getElementById("sip-inputMeeting").value,t.voiceConnectorId=document.getElementById("voiceConnectorId").value,(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var t,a,n;return r(this,(function(r){switch(r.label){case 0:this.showProgress("progress-authenticate"),r.label=1;case 1:return r.trys.push([1,4,,5]),[4,fetch(e.BASE_URL+"join?title="+encodeURIComponent(this.meeting)+"&name="+encodeURIComponent(e.DID)+"&region="+encodeURIComponent(this.region),{method:"POST"})];case 2:return[4,r.sent().json()];case 3:return t=r.sent(),a=t.JoinInfo.Attendee.JoinToken,this.sipURI="sip:"+e.DID+"@"+this.voiceConnectorId+";transport=tls;X-joinToken="+a,this.switchToFlow("flow-sip-uri"),[3,5];case 4:return n=r.sent(),document.getElementById("failed-meeting").innerHTML="Meeting ID: "+this.meeting,document.getElementById("failed-meeting-error").innerHTML=n.message,this.switchToFlow("flow-failed-meeting"),[2];case 5:return document.getElementById("sip-uri").value=this.sipURI,this.hideProgress("progress-authenticate"),[2]}}))}))}))})),document.getElementById("copy-sip-uri").addEventListener("click",(function(){document.getElementById("sip-uri").select(),document.execCommand("copy")})),document.getElementById("audio-input").addEventListener("change",(function(e){return n(t,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return this.log("audio input device is changed"),[4,this.openAudioInputFromSelection()];case 1:return e.sent(),[2]}}))}))}));var a=document.getElementById("video-input");a.addEventListener("change",(function(e){return n(t,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:this.log("video input device is changed"),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.openVideoInputFromSelection(a.value,!0)];case 2:return e.sent(),[3,4];case 3:return e.sent(),this.log("no video input device selected"),[3,4];case 4:return[2]}}))}))}));var i=document.getElementById("video-input-quality");i.addEventListener("change",(function(e){return n(t,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:switch(this.log("Video input quality is changed"),i.value){case"360p":this.audioVideo.chooseVideoInputQuality(640,360,15,600);break;case"540p":this.audioVideo.chooseVideoInputQuality(960,540,15,1400);break;case"720p":this.audioVideo.chooseVideoInputQuality(1280,720,15,1400)}e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.openVideoInputFromSelection(a.value,!0)];case 2:return e.sent(),[3,4];case 3:return e.sent(),this.log("no video input device selected"),[3,4];case 4:return[2]}}))}))})),document.getElementById("audio-output").addEventListener("change",(function(e){return n(t,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return this.log("audio output device is changed"),[4,this.openAudioOutputFromSelection()];case 1:return e.sent(),[2]}}))}))})),document.getElementById("button-test-sound").addEventListener("click",(function(e){e.preventDefault();var t=document.getElementById("audio-output");new s(t.value)})),document.getElementById("form-devices").addEventListener("submit",(function(e){e.preventDefault(),(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),this.showProgress("progress-join"),[4,this.join()];case 1:return t.sent(),this.audioVideo.stopVideoPreviewForVideoInput(document.getElementById("video-preview")),this.audioVideo.chooseVideoInputDevice(null),this.hideProgress("progress-join"),this.displayButtonStates(),this.switchToFlow("flow-meeting"),[3,3];case 2:return e=t.sent(),document.getElementById("failed-join").innerHTML="Meeting ID: "+this.meeting,document.getElementById("failed-join-error").innerHTML="Error: "+e.message,[3,3];case 3:return[2]}}))}))}))})),document.getElementById("button-microphone").addEventListener("mousedown",(function(e){t.toggleButton("button-microphone")?t.audioVideo.realtimeUnmuteLocalAudio():t.audioVideo.realtimeMuteLocalAudio()})),document.getElementById("button-camera").addEventListener("click",(function(e){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:if(!this.toggleButton("button-camera")||!this.canStartLocalVideo)return[3,5];t.label=1;case 1:return t.trys.push([1,3,,4]),e=a.value,"None"===a.value&&(e=this.cameraDeviceIds.length?this.cameraDeviceIds[0]:"None"),[4,this.openVideoInputFromSelection(e,!1)];case 2:return t.sent(),this.audioVideo.startLocalVideoTile(),[3,4];case 3:return t.sent(),this.log("no video input device selected"),[3,4];case 4:return[3,6];case 5:this.audioVideo.stopLocalVideoTile(),this.hideTile(16),t.label=6;case 6:return[2]}}))}))}))})),document.getElementById("button-screen-share").addEventListener("click",(function(){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e,t,a,n,i=this;return r(this,(function(r){return e="button-screen-share",t="button-pause-screen-share",this.buttonStates[e]?this.meetingSession.screenShare.stop().catch((function(e){i.log(e)})).finally((function(){i.buttonStates[e]=!1,i.buttonStates[t]=!1,i.displayButtonStates()})):(a=this,n={didStopScreenSharing:function(){a.buttonStates[e]=!1,a.buttonStates[t]=!1,a.displayButtonStates()}},this.meetingSession.screenShare.registerObserver(n),this.meetingSession.screenShare.start().then((function(){i.buttonStates[e]=!0,i.displayButtonStates()}))),[2]}))}))}))})),document.getElementById("button-pause-screen-share").addEventListener("click",(function(){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e,t,a,n=this;return r(this,(function(r){return e="button-pause-screen-share",this.buttonStates[e]?this.meetingSession.screenShare.unpause().then((function(){n.buttonStates[e]=!1,n.displayButtonStates()})):(t=this,a={didUnpauseScreenSharing:function(){t.buttonStates[e]=!1,t.displayButtonStates()}},this.meetingSession.screenShare.registerObserver(a),this.meetingSession.screenShare.pause().then((function(){n.buttonStates[e]=!0,n.displayButtonStates()})).catch((function(e){n.log(e)}))),[2]}))}))}))})),document.getElementById("button-speaker").addEventListener("click",(function(e){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){return r(this,(function(e){return this.toggleButton("button-speaker")?this.audioVideo.bindAudioElement(document.getElementById("meeting-audio")):this.audioVideo.unbindAudioElement(),[2]}))}))}))})),document.getElementById("button-screen-view").addEventListener("click",(function(e){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){var e,t=this;return r(this,(function(a){return this.toggleButton("button-screen-view")?((e=document.getElementById("tile-17")).style.display="block",this.meetingSession.screenShareView.start(e)):this.meetingSession.screenShareView.stop().catch((function(e){t.log(e)})).finally((function(){return t.hideTile(17)})),this.layoutVideoTiles(),[2]}))}))}))}));var c=document.getElementById("button-meeting-end");c.addEventListener("click",(function(e){"true"===new URL(window.location.href).searchParams.get("confirm-end")&&!window.confirm("Are you sure you want to end the meeting for everyone? The meeting cannot be used after ending it.")||(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return c.disabled=!0,[4,this.endMeeting()];case 1:return e.sent(),this.leave(),c.disabled=!1,window.location=window.location.pathname,[2]}}))}))}))}));var d=document.getElementById("button-meeting-leave");d.addEventListener("click",(function(e){(new o.AsyncScheduler).start((function(){return n(t,void 0,void 0,(function(){return r(this,(function(e){return d.disabled=!0,this.leave(),d.disabled=!1,window.location=window.location.pathname,[2]}))}))}))}))},e.prototype.toggleButton=function(e,t){return this.buttonStates[e]="on"===t||"off"!==t&&!this.buttonStates[e],this.displayButtonStates(),this.buttonStates[e]},e.prototype.displayButtonStates=function(){for(var e in this.buttonStates){var t=document.getElementById(e),a=document.getElementById(e+"-drop"),n=this.buttonStates[e];t.classList.add(n?"btn-success":"btn-outline-secondary"),t.classList.remove(n?"btn-outline-secondary":"btn-success"),t.firstElementChild.classList.add(n?"svg-active":"svg-inactive"),t.firstElementChild.classList.remove(n?"svg-inactive":"svg-active"),a&&(a.classList.add(n?"btn-success":"btn-outline-secondary"),a.classList.remove(n?"btn-outline-secondary":"btn-success"))}},e.prototype.showProgress=function(e){document.getElementById(e).style.visibility="visible"},e.prototype.hideProgress=function(e){document.getElementById(e).style.visibility="hidden"},e.prototype.switchToFlow=function(e){this.analyserNodeCallback=function(){},Array.from(document.getElementsByClassName("flow")).map((function(e){return e.style.display="none"})),document.getElementById(e).style.display="block","flow-devices"===e&&this.startAudioPreview()},e.prototype.audioInputsChanged=function(e){this.populateAudioInputList()},e.prototype.videoInputsChanged=function(e){this.populateVideoInputList()},e.prototype.audioOutputsChanged=function(e){this.populateAudioOutputList()},e.prototype.estimatedDownlinkBandwidthLessThanRequired=function(e,t){this.log("Estimated downlink bandwidth is "+e+" is less than required bandwidth for video "+t)},e.prototype.metricsDidReceive=function(e){var t=e.getObservableMetrics();"number"!=typeof t.availableSendBandwidth||isNaN(t.availableSendBandwidth)?"number"!=typeof t.availableOutgoingBitrate||isNaN(t.availableOutgoingBitrate)?document.getElementById("video-uplink-bandwidth").innerHTML="Available Uplink Bandwidth: Unknown":document.getElementById("video-uplink-bandwidth").innerHTML="Available Uplink Bandwidth: "+String(t.availableOutgoingBitrate/1e3)+" Kbps":document.getElementById("video-uplink-bandwidth").innerHTML="Available Uplink Bandwidth: "+String(t.availableSendBandwidth/1e3)+" Kbps","number"!=typeof t.availableReceiveBandwidth||isNaN(t.availableReceiveBandwidth)?"number"!=typeof t.availableIncomingBitrate||isNaN(t.availableIncomingBitrate)?document.getElementById("video-downlink-bandwidth").innerHTML="Available Downlink Bandwidth: Unknown":document.getElementById("video-downlink-bandwidth").innerHTML="Available Downlink Bandwidth: "+String(t.availableIncomingBitrate/1e3)+" Kbps":document.getElementById("video-downlink-bandwidth").innerHTML="Available Downlink Bandwidth: "+String(t.availableReceiveBandwidth/1e3)+" Kbps"},e.prototype.initializeMeetingSession=function(t){return n(this,void 0,void 0,(function(){var a,n;return r(this,(function(r){switch(r.label){case 0:return a="localhost"===location.hostname||"127.0.0.1"===location.hostname?new o.ConsoleLogger("SDK",o.LogLevel.INFO):new o.MeetingSessionPOSTLogger("SDK",t,e.LOGGER_BATCH_SIZE,e.LOGGER_INTERVAL_MS,e.BASE_URL+"logs",o.LogLevel.INFO),n=new o.DefaultDeviceController(a),t.enableWebAudio=this.enableWebAudio,this.meetingSession=new o.DefaultMeetingSession(t,a,n),this.audioVideo=this.meetingSession.audioVideo,this.audioVideo.addDeviceChangeObserver(this),this.setupDeviceLabelTrigger(),[4,this.populateAllDeviceLists()];case 1:return r.sent(),this.setupMuteHandler(),this.setupCanUnmuteHandler(),this.setupSubscribeToAttendeeIdPresenceHandler(),this.setupScreenViewing(),this.audioVideo.addObserver(this),[2]}}))}))},e.prototype.setClickHandler=function(e,t){document.getElementById(e).addEventListener("click",(function(){t()}))},e.prototype.join=function(){return n(this,void 0,void 0,(function(){var e=this;return r(this,(function(t){switch(t.label){case 0:return window.addEventListener("unhandledrejection",(function(t){e.log(t.reason)})),[4,this.openAudioInputFromSelection()];case 1:return t.sent(),[4,this.openAudioOutputFromSelection()];case 2:return t.sent(),this.audioVideo.start(),[4,this.meetingSession.screenShare.open()];case 3:return t.sent(),[4,this.meetingSession.screenShareView.open()];case 4:return t.sent(),[2]}}))}))},e.prototype.leave=function(){var e=this;this.meetingSession.screenShare.stop().catch((function(){})).finally((function(){return e.meetingSession.screenShare.close()})),this.meetingSession.screenShareView.close(),this.audioVideo.stop(),this.roster={}},e.prototype.setupMuteHandler=function(){var e=this,t=function(t){e.log("muted = "+t)};this.audioVideo.realtimeSubscribeToMuteAndUnmuteLocalAudio(t),t(this.audioVideo.realtimeIsLocalAudioMuted())},e.prototype.setupCanUnmuteHandler=function(){var e=this,t=function(t){e.log("canUnmute = "+t)};this.audioVideo.realtimeSubscribeToSetCanUnmuteLocalAudio(t),t(this.audioVideo.realtimeCanUnmuteLocalAudio())},e.prototype.updateRoster=function(){var e="";for(var t in this.roster){e+='<li class="list-group-item d-flex justify-content-between align-items-center">',e+=this.roster[t].name;var a=this.roster[t].score;a||(a=0),(a=Math.floor(100*a))&&(e+=" ("+a+")"),e+='<span class="badge badge-pill ';var n="";this.roster[t].signalStrength<1?(n="&nbsp;",e+="badge-warning"):0===this.roster[t].signalStrength?(n="&nbsp;",e+="badge-danger"):this.roster[t].muted?(n="MUTED",e+="badge-secondary"):this.roster[t].active?(n="SPEAKING",e+="badge-success"):this.roster[t].volume>0&&(n="&nbsp;",e+="badge-success"),e+='">'+n+"</span></li>"}var r=document.getElementById("roster");r.innerHTML!==e&&(r.innerHTML=e)},e.prototype.setupSubscribeToAttendeeIdPresenceHandler=function(){var t=this;this.audioVideo.realtimeSubscribeToAttendeeIdPresence((function(a,i){if(t.log(a+" present = "+i),!i)return delete t.roster[a],void t.updateRoster();t.audioVideo.realtimeSubscribeToVolumeIndicator(a,(function(a,i,o,c){return n(t,void 0,void 0,(function(){var t,n;return r(this,(function(r){switch(r.label){case 0:return this.roster[a]||(this.roster[a]={name:""}),null!==i&&(this.roster[a].volume=Math.round(100*i)),null!==o&&(this.roster[a].muted=o),null!==c&&(this.roster[a].signalStrength=Math.round(100*c)),this.roster[a].name?[3,3]:[4,fetch(e.BASE_URL+"attendee?title="+encodeURIComponent(this.meeting)+"&attendee="+encodeURIComponent(a))];case 1:return[4,r.sent().json()];case 2:t=r.sent(),n=t.AttendeeInfo.Name,this.roster[a].name=n||"",r.label=3;case 3:return this.updateRoster(),[2]}}))}))}))}));this.audioVideo.subscribeToActiveSpeakerDetector(new o.DefaultActiveSpeakerPolicy,(function(e){var a,n;for(var r in t.roster)t.roster[r].active=!1;try{for(var o=i(e),c=o.next();!c.done;c=o.next()){r=c.value;if(t.roster[r]){t.roster[r].active=!0;break}}}catch(e){a={error:e}}finally{try{c&&!c.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}t.layoutVideoTiles()}),(function(e){for(var a in e)t.roster[a]&&(t.roster[a].score=e[a]);t.updateRoster()}),this.showActiveSpeakerScores?100:0)},e.prototype.joinMeeting=function(){return n(this,void 0,void 0,(function(){var t;return r(this,(function(a){switch(a.label){case 0:return[4,fetch(e.BASE_URL+"join?title="+encodeURIComponent(this.meeting)+"&name="+encodeURIComponent(this.name)+"&region="+encodeURIComponent(this.region),{method:"POST"})];case 1:return[4,a.sent().json()];case 2:if((t=a.sent()).error)throw new Error("Server error: "+t.error);return[2,t]}}))}))},e.prototype.endMeeting=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,fetch(e.BASE_URL+"end?title="+encodeURIComponent(this.meeting),{method:"POST"})];case 1:return t.sent(),[2]}}))}))},e.prototype.setupDeviceLabelTrigger=function(){var e=this;this.audioVideo.setDeviceLabelTrigger((function(){return n(e,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return this.switchToFlow("flow-need-permission"),[4,navigator.mediaDevices.getUserMedia({audio:!0,video:!0})];case 1:return e=t.sent(),this.switchToFlow("flow-devices"),[2,e]}}))}))}))},e.prototype.populateDeviceList=function(e,t,a,n){for(var r,o,c=document.getElementById(e);c.firstElementChild;)c.removeChild(c.firstElementChild);for(var s=0;s<a.length;s++){var d=document.createElement("option");c.appendChild(d),d.text=a[s].label||t+" "+(s+1),d.value=a[s].deviceId}if(n.length>0){var u=document.createElement("option");u.disabled=!0,u.text="──────────",c.appendChild(u);try{for(var f=i(n),l=f.next();!l.done;l=f.next()){var h=l.value,d=document.createElement("option");c.appendChild(d),d.text=h,d.value=h}}catch(e){r={error:e}}finally{try{l&&!l.done&&(o=f.return)&&o.call(f)}finally{if(r)throw r.error}}}c.firstElementChild||((d=document.createElement("option")).text="Device selection unavailable",c.appendChild(d))},e.prototype.populateInMeetingDeviceList=function(e,t,a,n,r){for(var o,c,s=document.getElementById(e);s.firstElementChild;)s.removeChild(s.firstElementChild);for(var d=function(e){u.createDropdownMenuItem(s,a[e].label||t+" "+(e+1),(function(){r(a[e].deviceId)}))},u=this,f=0;f<a.length;f++)d(f);if(n.length>0){this.createDropdownMenuItem(s,"──────────",(function(){})).classList.add("text-center");var l=function(t){h.createDropdownMenuItem(s,t,(function(){r(t)}),e+"-"+t.replace(/\s/g,"-"))},h=this;try{for(var b=i(n),p=b.next();!p.done;p=b.next()){l(p.value)}}catch(e){o={error:e}}finally{try{p&&!p.done&&(c=b.return)&&c.call(b)}finally{if(o)throw o.error}}}s.firstElementChild||this.createDropdownMenuItem(s,"Device selection unavailable",(function(){}))},e.prototype.createDropdownMenuItem=function(e,t,a,n){var r=document.createElement("button");return e.appendChild(r),r.innerHTML=t,r.classList.add("dropdown-item"),void 0!==n&&(r.id=n),r.addEventListener("click",(function(){a()})),r},e.prototype.populateAllDeviceLists=function(){return n(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:return[4,this.populateAudioInputList()];case 1:return e.sent(),[4,this.populateVideoInputList()];case 2:return e.sent(),[4,this.populateAudioOutputList()];case 3:return e.sent(),[2]}}))}))},e.prototype.populateAudioInputList=function(){return n(this,void 0,void 0,(function(){var e,t,a,i,o,c,s=this;return r(this,(function(d){switch(d.label){case 0:return e="Microphone",t=["None","440 Hz"],a=this.populateDeviceList,i=["audio-input",e],[4,this.audioVideo.listAudioInputDevices()];case 1:return a.apply(this,i.concat([d.sent(),t])),o=this.populateInMeetingDeviceList,c=["dropdown-menu-microphone",e],[4,this.audioVideo.listAudioInputDevices()];case 2:return o.apply(this,c.concat([d.sent(),t,function(e){return n(s,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,this.audioVideo.chooseAudioInputDevice(this.audioInputSelectionToDevice(e))];case 1:return t.sent(),[2]}}))}))}])),[2]}}))}))},e.prototype.populateVideoInputList=function(){return n(this,void 0,void 0,(function(){var e,t,a,i,o,c,s,d=this;return r(this,(function(u){switch(u.label){case 0:return e="Camera",t=["None","Blue","SMPTE Color Bars"],a=this.populateDeviceList,i=["video-input",e],[4,this.audioVideo.listVideoInputDevices()];case 1:return a.apply(this,i.concat([u.sent(),t])),o=this.populateInMeetingDeviceList,c=["dropdown-menu-camera",e],[4,this.audioVideo.listVideoInputDevices()];case 2:return o.apply(this,c.concat([u.sent(),t,function(e){return n(d,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.openVideoInputFromSelection(e,!1)];case 1:return t.sent(),[3,3];case 2:return t.sent(),this.log("no video input device selected"),[3,3];case 3:return[2]}}))}))}])),[4,this.audioVideo.listVideoInputDevices()];case 3:return s=u.sent(),this.cameraDeviceIds=s.map((function(e){return e.deviceId})),[2]}}))}))},e.prototype.populateAudioOutputList=function(){return n(this,void 0,void 0,(function(){var e,t,a,i,o,c,s=this;return r(this,(function(d){switch(d.label){case 0:return e="Speaker",t=[],a=this.populateDeviceList,i=["audio-output",e],[4,this.audioVideo.listAudioOutputDevices()];case 1:return a.apply(this,i.concat([d.sent(),t])),o=this.populateInMeetingDeviceList,c=["dropdown-menu-speaker",e],[4,this.audioVideo.listAudioOutputDevices()];case 2:return o.apply(this,c.concat([d.sent(),t,function(e){return n(s,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,this.audioVideo.chooseAudioOutputDevice(e)];case 1:return t.sent(),[2]}}))}))}])),[2]}}))}))},e.prototype.openAudioInputFromSelection=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return e=document.getElementById("audio-input"),[4,this.audioVideo.chooseAudioInputDevice(this.audioInputSelectionToDevice(e.value))];case 1:return t.sent(),this.startAudioPreview(),[2]}}))}))},e.prototype.setAudioPreviewPercent=function(e){var t=document.getElementById("audio-preview");t.getAttribute("aria-valuenow")!==""+e&&(t.style.width=e+"%",t.setAttribute("aria-valuenow",""+e));"33ms"!==t.style.transitionDuration&&(t.style.transitionDuration="33ms")},e.prototype.startAudioPreview=function(){var e=this;this.setAudioPreviewPercent(0);var t=this.audioVideo.createAnalyserNodeForAudioInput();if(t)if(t.getFloatTimeDomainData){var a=new Float32Array(t.fftSize),n=0;this.analyserNodeCallback=function(){var r,o;if(0===n){t.getFloatTimeDomainData(a);var c=.01;try{for(var s=i(a),d=s.next();!d.done;d=s.next()){var u=d.value;c=Math.max(c,Math.abs(u))}}catch(e){r={error:e}}finally{try{d&&!d.done&&(o=s.return)&&o.call(s)}finally{if(r)throw r.error}}var f=(Math.log(.01)-Math.log(c))/Math.log(.01),l=Math.min(Math.max(100*f,0),100);e.setAudioPreviewPercent(l)}n=(n+1)%2,requestAnimationFrame(e.analyserNodeCallback)},requestAnimationFrame(this.analyserNodeCallback)}else document.getElementById("audio-preview").parentElement.style.visibility="hidden"},e.prototype.openAudioOutputFromSelection=function(){return n(this,void 0,void 0,(function(){var e,t;return r(this,(function(a){switch(a.label){case 0:return e=document.getElementById("audio-output"),[4,this.audioVideo.chooseAudioOutputDevice(e.value)];case 1:return a.sent(),t=document.getElementById("meeting-audio"),[4,this.audioVideo.bindAudioElement(t)];case 2:return a.sent(),[2]}}))}))},e.prototype.openVideoInputFromSelection=function(e,t){return n(this,void 0,void 0,(function(){var a;return r(this,(function(n){switch(n.label){case 0:return e&&(this.selectedVideoInput=e),this.log("Switching to: "+this.selectedVideoInput),null!==(a=this.videoInputSelectionToDevice(this.selectedVideoInput))?[3,2]:(t&&this.audioVideo.stopVideoPreviewForVideoInput(document.getElementById("video-preview")),this.audioVideo.stopLocalVideoTile(),this.toggleButton("button-camera","off"),[4,this.audioVideo.chooseVideoInputDevice(a)]);case 1:throw n.sent(),new Error("no video device selected");case 2:return[4,this.audioVideo.chooseVideoInputDevice(a)];case 3:return n.sent(),t&&this.audioVideo.startVideoPreviewForVideoInput(document.getElementById("video-preview")),[2]}}))}))},e.prototype.audioInputSelectionToDevice=function(e){return"440 Hz"===e?o.DefaultDeviceController.synthesizeAudioDevice(440):"None"===e?null:e},e.prototype.videoInputSelectionToDevice=function(e){return"Blue"===e?o.DefaultDeviceController.synthesizeVideoDevice("blue"):"SMPTE Color Bars"===e?o.DefaultDeviceController.synthesizeVideoDevice("smpte"):"None"===e?null:e},e.prototype.authenticate=function(){return n(this,void 0,void 0,(function(){var e,t;return r(this,(function(a){switch(a.label){case 0:return[4,this.joinMeeting()];case 1:return e=a.sent().JoinInfo,[4,this.initializeMeetingSession(new o.MeetingSessionConfiguration(e.Meeting,e.Attendee))];case 2:return a.sent(),(t=new URL(window.location.href)).searchParams.set("m",this.meeting),history.replaceState({},""+this.meeting,t.toString()),[2,e.Meeting.MeetingId]}}))}))},e.prototype.log=function(e){console.log("[DEMO] "+e)},e.prototype.audioVideoDidStartConnecting=function(e){this.log("session connecting. reconnecting: "+e)},e.prototype.audioVideoDidStart=function(){this.log("session started")},e.prototype.audioVideoDidStop=function(e){this.log("session stopped from "+JSON.stringify(e)),e.statusCode()===o.MeetingSessionStatusCode.AudioCallEnded&&(this.log("meeting ended"),window.location=window.location.pathname)},e.prototype.videoTileDidUpdate=function(e){var t=this;this.log("video tile updated: "+JSON.stringify(e,null,"  "));var a=e.localTile?16:this.tileOrganizer.acquireTileIndex(e.tileId),n=document.getElementById("tile-"+a),r=document.getElementById("video-"+a),i=document.getElementById("nameplate-"+a),c=document.getElementById("video-pause-"+a),s=document.getElementById("video-resume-"+a);c.addEventListener("click",(function(){e.paused||t.audioVideo.pauseVideoTile(e.tileId)})),s.addEventListener("click",(function(){e.paused&&t.audioVideo.unpauseVideoTile(e.tileId)})),this.log("binding video tile "+e.tileId+" to "+r.id),this.audioVideo.bindVideoElement(e.tileId,r),this.tileIndexToTileId[a]=e.tileId,this.tileIdToTileIndex[e.tileId]=a,new o.TimeoutScheduler(200).start((function(){var a=t.roster[e.boundAttendeeId]?t.roster[e.boundAttendeeId].name:"";i.innerHTML!==a&&(i.innerHTML=a)})),n.style.display="block",this.layoutVideoTiles()},e.prototype.videoTileWasRemoved=function(e){this.log("video tile removed: "+e),this.hideTile(this.tileOrganizer.releaseTileIndex(e))},e.prototype.videoAvailabilityDidChange=function(e){this.canStartLocalVideo=e.canStartLocalVideo,this.log("video availability changed: canStartLocalVideo  "+e.canStartLocalVideo)},e.prototype.hideTile=function(e){document.getElementById("tile-"+e).style.display="none",this.layoutVideoTiles()},e.prototype.tileIdForAttendeeId=function(e){var t,a;try{for(var n=i(this.audioVideo.getAllVideoTiles()),r=n.next();!r.done;r=n.next()){var o=r.value.state();if(o.boundAttendeeId===e)return o.tileId}}catch(e){t={error:e}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(t)throw t.error}}return null},e.prototype.activeTileId=function(){for(var e in this.roster)if(this.roster[e].active)return this.tileIdForAttendeeId(e);return null},e.prototype.layoutVideoTiles=function(){if(this.meetingSession){var e=this.meetingSession.configuration.credentials.attendeeId,t=this.tileIdForAttendeeId(e),a=this.visibleTileIndices(),n=this.activeTileId(),r=a.includes(this.tileIdToTileIndex[t]);2===a.length&&r&&(n=this.tileIndexToTileId[a[0]===t?a[1]:a[0]]);var i=a.includes(this.tileIdToTileIndex[n]);this.activeSpeakerLayout&&i?this.layoutVideoTilesActiveSpeaker(a,n):this.layoutVideoTilesGrid(a)}},e.prototype.visibleTileIndices=function(){for(var e,t,a=[],n=0;n<=17;n++){if("block"===document.getElementById("tile-"+n).style.display)if(17===n){try{for(var r=(e=void 0,i(a)),o=r.next();!o.done;o=r.next()){var c=o.value;document.getElementById("tile-"+c).style.visibility="hidden"}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}a=[17]}else a.push(n)}return a},e.prototype.layoutVideoTilesActiveSpeaker=function(e,t){var a=document.getElementById("tile-area"),n=a.clientWidth,r=a.clientHeight,i=n,o=n/(16/9),c=e.length-1,s=n/c,d=n/(16/9);d/o>.3&&(s=(d=.3*o)*(16/9)),0===c&&(d=0);for(var u=n/2-s*c/2,f=r/2-(o+d)/2,l=f+o,h=0,b=0;b<e.length;b++){var p=e[b],v=0,m=0,g=0,y=0;this.tileIndexToTileId[p]===t?(v=0,m=f,g=i,y=o):(v=u+h*s,m=l,g=s,y=d,h+=1),this.updateTilePlacement(p,v,m,g,y)}},e.prototype.updateTilePlacement=function(e,t,a,n,r){var i=document.getElementById("tile-"+e);i.style.position="absolute",i.style.left=t+4+"px",i.style.top=a+2.25+"px",i.style.width=n-8+"px",i.style.height=r-4.5+"px",i.style.margin="0",i.style.padding="0",i.style.visibility="visible";var o=document.getElementById("video-"+e);o&&(o.style.position="absolute",o.style.left="0",o.style.top="0",o.style.width=n+"px",o.style.height=r+"px",o.style.margin="0",o.style.padding="0",o.style.borderRadius="8px");var c=document.getElementById("nameplate-"+e);c.style.position="absolute",c.style.left="0px",c.style.top=r-24-10+"px",c.style.height="24px",c.style.width=n+"px",c.style.margin="0",c.style.padding="0",c.style.paddingLeft="10px",c.style.color="#fff",c.style.backgroundColor="rgba(0,0,0,0)",c.style.textShadow="0px 0px 5px black",c.style.letterSpacing="0.1em",c.style.fontSize="18px";var s=document.getElementById("video-pause-"+e);s&&(s.style.position="absolute",s.style.display="inline-block",s.style.right="0px",s.style.height="24px",s.style.margin="0",s.style.padding="0",s.style.paddingLeft="10px",s.style.color="#fff",s.style.backgroundColor="rgba(0,0,0,0)",s.style.textShadow="0px 0px 5px black",s.style.letterSpacing="0.1em",s.style.fontSize="18px"),(s=document.getElementById("video-resume-"+e))&&(s.style.position="absolute",s.style.left="0px",s.style.top="0px",s.style.height="24px",s.style.margin="0",s.style.padding="0",s.style.paddingLeft="10px",s.style.color="#fff",s.style.backgroundColor="rgba(0,0,0,0)",s.style.textShadow="0px 0px 5px black",s.style.letterSpacing="0.1em",s.style.fontSize="18px")},e.prototype.layoutVideoTilesGrid=function(e){for(var t=document.getElementById("tile-area"),a=t.clientWidth,n=t.clientHeight,r=1,i=0,o=0;r<18;r++){if((i=(o=a/r/(16/9))*Math.ceil(e.length/r))<=n)break}for(var c=0;c<e.length;c++){var s=Math.floor(a/r),d=Math.floor(o),u=c%r*s,f=Math.floor(c/r)*d+(n/2-i/2);this.updateTilePlacement(e[c],u,f,s,d)}},e.prototype.setupScreenViewing=function(){var e=this;this.meetingSession.screenShareView.registerObserver({streamDidStart:function(t){var a=e.roster[t.attendeeId];document.getElementById("nameplate-17").innerHTML=a?a.name:""},streamDidStop:function(e){document.getElementById("nameplate-17").innerHTML="No one is sharing screen"}})},e.prototype.connectionDidBecomePoor=function(){this.log("connection is poor")},e.prototype.connectionDidSuggestStopVideo=function(){this.log("suggest turning the video off")},e.prototype.videoSendDidBecomeUnavailable=function(){this.log("sending video is not available")},e.DID="+17035550122",e.BASE_URL=[location.protocol,"//",location.host,location.pathname.replace(/\/*$/,"/")].join(""),e.LOGGER_BATCH_SIZE=85,e.LOGGER_INTERVAL_MS=1150,e}();t.DemoMeetingApp=d},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(12),r=function(){function e(e,t){void 0===t&&(t=n.default.WARN),this.name=e,this.level=t}return e.prototype.info=function(e){this.log(n.default.INFO,e)},e.prototype.warn=function(e){this.log(n.default.WARN,e)},e.prototype.error=function(e){this.log(n.default.ERROR,e)},e.prototype.debug=function(e){n.default.DEBUG<this.level||this.log(n.default.DEBUG,e())},e.prototype.setLogLevel=function(e){this.level=e},e.prototype.getLogLevel=function(){return this.level},e.prototype.log=function(e,t){if(!(e<this.level)){var a=(new Date).toISOString()+" ["+n.default[e]+"] "+this.name+" - "+t;switch(e){case n.default.ERROR:console.trace(a);break;case n.default.WARN:console.warn(a);break;case n.default.DEBUG:console.debug(a.replace(/\\r\\n/g,"\n"));break;case n.default.INFO:console.info(a)}}},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,a,n){void 0===e&&(e=.9),void 0===t&&(t=.01),void 0===a&&(a=.2),void 0===n&&(n=.2),this.speakerWeight=e,this.cutoffThreshold=t,this.silenceThreshold=a,this.takeoverRate=n,this.volumes={}}return e.prototype.calculateScore=function(e,t,a){(a||null===t)&&(t=0),this.volumes.hasOwnProperty(e)||(this.volumes[e]=0),t=t>this.silenceThreshold?1:0;var n=this.volumes[e]*this.speakerWeight+t*(1-this.speakerWeight);for(var r in this.volumes[e]=n,this.volumes)r!==e&&(this.volumes[r]=Math.max(this.volumes[r]-this.takeoverRate*t,0));return n<this.cutoffThreshold?0:n},e.prototype.prioritizeVideoSendBandwidthForActiveSpeaker=function(){return!0},e}();t.default=n},function(e,t,a){"use strict";(function(e){var a=this&&this.__spreadArrays||function(){for(var e=0,t=0,a=arguments.length;t<a;t++)e+=arguments[t].length;var n=Array(e),r=0;for(t=0;t<a;t++)for(var i=arguments[t],o=0,c=i.length;o<c;o++,r++)n[r]=i[o];return n};Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,a){this.name=e,this.version=t,this.os=a};t.BrowserInfo=n;var r=function(t){this.version=t,this.name="node",this.os=e.platform};t.NodeInfo=r;var i=function(){this.bot=!0,this.name="bot",this.version=null,this.os=null};t.BotInfo=i;var o=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["vivaldi",/Vivaldi\/([0-9\.]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/Edg\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FBAV\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["searchbot",/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]],c=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/],["Search Bot",/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/]];function s(e){var t=""!==e&&o.reduce((function(t,a){var n=a[0],r=a[1];if(t)return t;var i=r.exec(e);return!!i&&[n,i]}),!1);if(!t)return null;var r=t[0],c=t[1];if("searchbot"===r)return new i;var s=c[1]&&c[1].split(/[._]/).slice(0,3);return s?s.length<3&&(s=a(s,function(e){for(var t=[],a=0;a<e;a++)t.push("0");return t}(3-s.length))):s=[],new n(r,s.join("."),d(e))}function d(e){for(var t=0,a=c.length;t<a;t++){var n=c[t],r=n[0];if(n[1].test(e))return r}return null}function u(){return void 0!==e&&e.version?new r(e.version.slice(1)):null}t.detect=function(e){return e?s(e):"undefined"!=typeof navigator?s(navigator.userAgent):u()},t.parseUserAgent=s,t.detectOS=d,t.getNodeVersion=u}).call(this,a(175))},function(e,t){var a,n,r=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function c(e){if(a===setTimeout)return setTimeout(e,0);if((a===i||!a)&&setTimeout)return a=setTimeout,setTimeout(e,0);try{return a(e,0)}catch(t){try{return a.call(null,e,0)}catch(t){return a.call(this,e,0)}}}!function(){try{a="function"==typeof setTimeout?setTimeout:i}catch(e){a=i}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(e){n=o}}();var s,d=[],u=!1,f=-1;function l(){u&&s&&(u=!1,s.length?d=s.concat(d):f=-1,d.length&&h())}function h(){if(!u){var e=c(l);u=!0;for(var t=d.length;t;){for(s=d,d=[];++f<t;)s&&s[f].run();f=-1,t=d.length}s=null,u=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function b(e,t){this.fun=e,this.array=t}function p(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var a=1;a<arguments.length;a++)t[a-1]=arguments[a];d.push(new b(e,t)),1!==d.length||u||c(h)},b.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=p,r.addListener=p,r.once=p,r.off=p,r.removeListener=p,r.removeAllListeners=p,r.emit=p,r.prependListener=p,r.prependOnceListener=p,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,a){"use strict";var n=t;function r(){n.Reader._configure(n.BufferReader),n.util._configure()}n.build="minimal",n.Writer=a(80),n.BufferWriter=a(185),n.Reader=a(81),n.BufferReader=a(186),n.util=a(6),n.rpc=a(187),n.roots=a(189),n.configure=r,n.Writer._configure(n.BufferWriter),r()},function(e,t,a){"use strict";e.exports=function(e,t){var a=new Array(arguments.length-1),n=0,r=2,i=!0;for(;r<arguments.length;)a[n++]=arguments[r++];return new Promise((function(r,o){a[n]=function(e){if(i)if(i=!1,e)o(e);else{for(var t=new Array(arguments.length-1),a=0;a<t.length;)t[a++]=arguments[a];r.apply(null,t)}};try{e.apply(t||null,a)}catch(e){i&&(i=!1,o(e))}}))}},function(e,t,a){"use strict";var n=t;n.length=function(e){var t=e.length;if(!t)return 0;for(var a=0;--t%4>1&&"="===e.charAt(t);)++a;return Math.ceil(3*e.length)/4-a};for(var r=new Array(64),i=new Array(123),o=0;o<64;)i[r[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;n.encode=function(e,t,a){for(var n,i=null,o=[],c=0,s=0;t<a;){var d=e[t++];switch(s){case 0:o[c++]=r[d>>2],n=(3&d)<<4,s=1;break;case 1:o[c++]=r[n|d>>4],n=(15&d)<<2,s=2;break;case 2:o[c++]=r[n|d>>6],o[c++]=r[63&d],s=0}c>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,o)),c=0)}return s&&(o[c++]=r[n],o[c++]=61,1===s&&(o[c++]=61)),i?(c&&i.push(String.fromCharCode.apply(String,o.slice(0,c))),i.join("")):String.fromCharCode.apply(String,o.slice(0,c))};n.decode=function(e,t,a){for(var n,r=a,o=0,c=0;c<e.length;){var s=e.charCodeAt(c++);if(61===s&&o>1)break;if(void 0===(s=i[s]))throw Error("invalid encoding");switch(o){case 0:n=s,o=1;break;case 1:t[a++]=n<<2|(48&s)>>4,n=s,o=2;break;case 2:t[a++]=(15&n)<<4|(60&s)>>2,n=s,o=3;break;case 3:t[a++]=(3&n)<<6|s,o=0}}if(1===o)throw Error("invalid encoding");return a-r},n.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},function(e,t,a){"use strict";function n(){this._listeners={}}e.exports=n,n.prototype.on=function(e,t,a){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:a||this}),this},n.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var a=this._listeners[e],n=0;n<a.length;)a[n].fn===t?a.splice(n,1):++n;return this},n.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var a=[],n=1;n<arguments.length;)a.push(arguments[n++]);for(n=0;n<t.length;)t[n].fn.apply(t[n++].ctx,a)}return this}},function(e,t,a){"use strict";function n(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),a=new Uint8Array(t.buffer),n=128===a[3];function r(e,n,r){t[0]=e,n[r]=a[0],n[r+1]=a[1],n[r+2]=a[2],n[r+3]=a[3]}function i(e,n,r){t[0]=e,n[r]=a[3],n[r+1]=a[2],n[r+2]=a[1],n[r+3]=a[0]}function o(e,n){return a[0]=e[n],a[1]=e[n+1],a[2]=e[n+2],a[3]=e[n+3],t[0]}function c(e,n){return a[3]=e[n],a[2]=e[n+1],a[1]=e[n+2],a[0]=e[n+3],t[0]}e.writeFloatLE=n?r:i,e.writeFloatBE=n?i:r,e.readFloatLE=n?o:c,e.readFloatBE=n?c:o}():function(){function t(e,t,a,n){var r=t<0?1:0;if(r&&(t=-t),0===t)e(1/t>0?0:2147483648,a,n);else if(isNaN(t))e(2143289344,a,n);else if(t>34028234663852886e22)e((r<<31|2139095040)>>>0,a,n);else if(t<11754943508222875e-54)e((r<<31|Math.round(t/1401298464324817e-60))>>>0,a,n);else{var i=Math.floor(Math.log(t)/Math.LN2);e((r<<31|i+127<<23|8388607&Math.round(t*Math.pow(2,-i)*8388608))>>>0,a,n)}}function a(e,t,a){var n=e(t,a),r=2*(n>>31)+1,i=n>>>23&255,o=8388607&n;return 255===i?o?NaN:r*(1/0):0===i?1401298464324817e-60*r*o:r*Math.pow(2,i-150)*(o+8388608)}e.writeFloatLE=t.bind(null,r),e.writeFloatBE=t.bind(null,i),e.readFloatLE=a.bind(null,o),e.readFloatBE=a.bind(null,c)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),a=new Uint8Array(t.buffer),n=128===a[7];function r(e,n,r){t[0]=e,n[r]=a[0],n[r+1]=a[1],n[r+2]=a[2],n[r+3]=a[3],n[r+4]=a[4],n[r+5]=a[5],n[r+6]=a[6],n[r+7]=a[7]}function i(e,n,r){t[0]=e,n[r]=a[7],n[r+1]=a[6],n[r+2]=a[5],n[r+3]=a[4],n[r+4]=a[3],n[r+5]=a[2],n[r+6]=a[1],n[r+7]=a[0]}function o(e,n){return a[0]=e[n],a[1]=e[n+1],a[2]=e[n+2],a[3]=e[n+3],a[4]=e[n+4],a[5]=e[n+5],a[6]=e[n+6],a[7]=e[n+7],t[0]}function c(e,n){return a[7]=e[n],a[6]=e[n+1],a[5]=e[n+2],a[4]=e[n+3],a[3]=e[n+4],a[2]=e[n+5],a[1]=e[n+6],a[0]=e[n+7],t[0]}e.writeDoubleLE=n?r:i,e.writeDoubleBE=n?i:r,e.readDoubleLE=n?o:c,e.readDoubleBE=n?c:o}():function(){function t(e,t,a,n,r,i){var o=n<0?1:0;if(o&&(n=-n),0===n)e(0,r,i+t),e(1/n>0?0:2147483648,r,i+a);else if(isNaN(n))e(0,r,i+t),e(2146959360,r,i+a);else if(n>17976931348623157e292)e(0,r,i+t),e((o<<31|2146435072)>>>0,r,i+a);else{var c;if(n<22250738585072014e-324)e((c=n/5e-324)>>>0,r,i+t),e((o<<31|c/4294967296)>>>0,r,i+a);else{var s=Math.floor(Math.log(n)/Math.LN2);1024===s&&(s=1023),e(4503599627370496*(c=n*Math.pow(2,-s))>>>0,r,i+t),e((o<<31|s+1023<<20|1048576*c&1048575)>>>0,r,i+a)}}}function a(e,t,a,n,r){var i=e(n,r+t),o=e(n,r+a),c=2*(o>>31)+1,s=o>>>20&2047,d=4294967296*(1048575&o)+i;return 2047===s?d?NaN:c*(1/0):0===s?5e-324*c*d:c*Math.pow(2,s-1075)*(d+4503599627370496)}e.writeDoubleLE=t.bind(null,r,0,4),e.writeDoubleBE=t.bind(null,i,4,0),e.readDoubleLE=a.bind(null,o,0,4),e.readDoubleBE=a.bind(null,c,4,0)}(),e}function r(e,t,a){t[a]=255&e,t[a+1]=e>>>8&255,t[a+2]=e>>>16&255,t[a+3]=e>>>24}function i(e,t,a){t[a]=e>>>24,t[a+1]=e>>>16&255,t[a+2]=e>>>8&255,t[a+3]=255&e}function o(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function c(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=n(n)},function(module,exports,__webpack_require__){"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},function(e,t,a){"use strict";var n=t;n.length=function(e){for(var t=0,a=0,n=0;n<e.length;++n)(a=e.charCodeAt(n))<128?t+=1:a<2048?t+=2:55296==(64512&a)&&56320==(64512&e.charCodeAt(n+1))?(++n,t+=4):t+=3;return t},n.read=function(e,t,a){if(a-t<1)return"";for(var n,r=null,i=[],o=0;t<a;)(n=e[t++])<128?i[o++]=n:n>191&&n<224?i[o++]=(31&n)<<6|63&e[t++]:n>239&&n<365?(n=((7&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,i[o++]=55296+(n>>10),i[o++]=56320+(1023&n)):i[o++]=(15&n)<<12|(63&e[t++])<<6|63&e[t++],o>8191&&((r||(r=[])).push(String.fromCharCode.apply(String,i)),o=0);return r?(o&&r.push(String.fromCharCode.apply(String,i.slice(0,o))),r.join("")):String.fromCharCode.apply(String,i.slice(0,o))},n.write=function(e,t,a){for(var n,r,i=a,o=0;o<e.length;++o)(n=e.charCodeAt(o))<128?t[a++]=n:n<2048?(t[a++]=n>>6|192,t[a++]=63&n|128):55296==(64512&n)&&56320==(64512&(r=e.charCodeAt(o+1)))?(n=65536+((1023&n)<<10)+(1023&r),++o,t[a++]=n>>18|240,t[a++]=n>>12&63|128,t[a++]=n>>6&63|128,t[a++]=63&n|128):(t[a++]=n>>12|224,t[a++]=n>>6&63|128,t[a++]=63&n|128);return a-i}},function(e,t,a){"use strict";e.exports=function(e,t,a){var n=a||8192,r=n>>>1,i=null,o=n;return function(a){if(a<1||a>r)return e(a);o+a>n&&(i=e(n),o=0);var c=t.call(i,o,o+=a);return 7&o&&(o=1+(7|o)),c}}},function(e,t,a){"use strict";e.exports=r;var n=a(6);function r(e,t){this.lo=e>>>0,this.hi=t>>>0}var i=r.zero=new r(0,0);i.toNumber=function(){return 0},i.zzEncode=i.zzDecode=function(){return this},i.length=function(){return 1};var o=r.zeroHash="\0\0\0\0\0\0\0\0";r.fromNumber=function(e){if(0===e)return i;var t=e<0;t&&(e=-e);var a=e>>>0,n=(e-a)/4294967296>>>0;return t&&(n=~n>>>0,a=~a>>>0,++a>4294967295&&(a=0,++n>4294967295&&(n=0))),new r(a,n)},r.from=function(e){if("number"==typeof e)return r.fromNumber(e);if(n.isString(e)){if(!n.Long)return r.fromNumber(parseInt(e,10));e=n.Long.fromString(e)}return e.low||e.high?new r(e.low>>>0,e.high>>>0):i},r.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,a=~this.hi>>>0;return t||(a=a+1>>>0),-(t+4294967296*a)}return this.lo+4294967296*this.hi},r.prototype.toLong=function(e){return n.Long?new n.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var c=String.prototype.charCodeAt;r.fromHash=function(e){return e===o?i:new r((c.call(e,0)|c.call(e,1)<<8|c.call(e,2)<<16|c.call(e,3)<<24)>>>0,(c.call(e,4)|c.call(e,5)<<8|c.call(e,6)<<16|c.call(e,7)<<24)>>>0)},r.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},r.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},r.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},r.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,a=this.hi>>>24;return 0===a?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:a<128?9:10}},function(e,t,a){"use strict";e.exports=o;var n=a(80);(o.prototype=Object.create(n.prototype)).constructor=o;var r=a(6),i=r.Buffer;function o(){n.call(this)}o.alloc=function(e){return(o.alloc=r._Buffer_allocUnsafe)(e)};var c=i&&i.prototype instanceof Uint8Array&&"set"===i.prototype.set.name?function(e,t,a){t.set(e,a)}:function(e,t,a){if(e.copy)e.copy(t,a,0,e.length);else for(var n=0;n<e.length;)t[a++]=e[n++]};function s(e,t,a){e.length<40?r.utf8.write(e,t,a):t.utf8Write(e,a)}o.prototype.bytes=function(e){r.isString(e)&&(e=r._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(c,t,e),this},o.prototype.string=function(e){var t=i.byteLength(e);return this.uint32(t),t&&this._push(s,t,e),this}},function(e,t,a){"use strict";e.exports=i;var n=a(81);(i.prototype=Object.create(n.prototype)).constructor=i;var r=a(6);function i(e){n.call(this,e)}r.Buffer&&(i.prototype._slice=r.Buffer.prototype.slice),i.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len))}},function(e,t,a){"use strict";t.Service=a(188)},function(e,t,a){"use strict";e.exports=r;var n=a(6);function r(e,t,a){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");n.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(a)}(r.prototype=Object.create(n.EventEmitter.prototype)).constructor=r,r.prototype.rpcCall=function e(t,a,r,i,o){if(!i)throw TypeError("request must be specified");var c=this;if(!o)return n.asPromise(e,c,t,a,r,i);if(c.rpcImpl)try{return c.rpcImpl(t,a[c.requestDelimited?"encodeDelimited":"encode"](i).finish(),(function(e,a){if(e)return c.emit("error",e,t),o(e);if(null!==a){if(!(a instanceof r))try{a=r[c.responseDelimited?"decodeDelimited":"decode"](a)}catch(e){return c.emit("error",e,t),o(e)}return c.emit("data",a,t),o(null,a)}c.end(!0)}))}catch(e){return c.emit("error",e,t),void setTimeout((function(){o(e)}),0)}else setTimeout((function(){o(Error("already ended"))}),0)},r.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},function(e,t,a){"use strict";e.exports={}},function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(40),o=function(){function e(e,t){this.logger=e,this.maxInputBytes=t}return e.prototype.newController=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:return[4,(e=new i.default(this.logger,this.maxInputBytes)).init()];case 1:return t.sent(),[2,e]}}))}))},e}();t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(30),r=a(126),i=a(15),o=a(4),c=a(65),s=a(127),d=a(41),u=a(134),f=a(147),l=a(55),h=function(){function e(t,a,o){this._configuration=t,this._logger=a,this._deviceController=o,this._deviceController.enableWebAudio(t.enableWebAudio),this.audioVideoController=new n.default(this._configuration,this._logger,new l.default(this._logger),o,new d.default(e.RECONNECT_TIMEOUT_MS,new i.default(e.RECONNECT_FIXED_WAIT_MS,e.RECONNECT_SHORT_BACKOFF_MS,e.RECONNECT_LONG_BACKOFF_MS))),o.bindToAudioVideoController(this.audioVideoController),this.screenShareFacade=new u.default(this._configuration,this._logger,o),this.screenShareViewFacade=new f.default(this._configuration,this._logger);var h=new c.default(this._logger);this.contentShareController=new s.default(h,new n.default(s.default.createContentShareMeetingSessionConfigure(this._configuration),this._logger,new l.default(this._logger),h,new d.default(e.RECONNECT_TIMEOUT_MS,new i.default(e.RECONNECT_FIXED_WAIT_MS,e.RECONNECT_SHORT_BACKOFF_MS,e.RECONNECT_LONG_BACKOFF_MS)))),this.audioVideoFacade=new r.default(this.audioVideoController,this.audioVideoController.videoTileController,this.audioVideoController.realtimeController,this.audioVideoController.audioMixController,this._deviceController,this.contentShareController),this.checkBrowserSupport()}return Object.defineProperty(e.prototype,"configuration",{get:function(){return this._configuration},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"logger",{get:function(){return this._logger},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"audioVideo",{get:function(){return this.audioVideoFacade},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contentShare",{get:function(){return this.contentShareController},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"screenShare",{get:function(){return this.screenShareFacade},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"screenShareView",{get:function(){return this.screenShareViewFacade},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"deviceController",{get:function(){return this._deviceController},enumerable:!0,configurable:!0}),e.prototype.checkBrowserSupport=function(){var e=new o.default,t=e.name()+" "+e.majorVersion()+" ("+e.version()+")";this.logger.info("browser is "+t),e.isSupported()||this.logger.warn("this browser is not currently supported. Stability may suffer. Supported browsers are: "+e.supportString()+".")},e.RECONNECT_TIMEOUT_MS=12e4,e.RECONNECT_FIXED_WAIT_MS=0,e.RECONNECT_SHORT_BACKOFF_MS=1e3,e.RECONNECT_LONG_BACKOFF_MS=5e3,e}();t.default=h},function(e,t,a){"use strict";var n=a(79),r=n.Reader,i=n.Writer,o=n.util,c=n.roots.default||(n.roots.default={});c.SdkScreenSignalingMessage=function(){function e(e){if(e)for(var t=Object.keys(e),a=0;a<t.length;++a)null!=e[t[a]]&&(this[t[a]]=e[t[a]])}return e.prototype.attendeeId="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&t.uint32(10).string(e.attendeeId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof r||(e=r.create(e));for(var a=void 0===t?e.len:e.pos+t,n=new c.SdkScreenSignalingMessage;e.pos<a;){var i=e.uint32();switch(i>>>3){case 1:n.attendeeId=e.string();break;default:e.skipType(7&i)}}return n},e.decodeDelimited=function(e){return e instanceof r||(e=new r(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&!o.isString(e.attendeeId)?"attendeeId: string expected":null},e.fromObject=function(e){if(e instanceof c.SdkScreenSignalingMessage)return e;var t=new c.SdkScreenSignalingMessage;return null!=e.attendeeId&&(t.attendeeId=String(e.attendeeId)),t},e.toObject=function(e,t){t||(t={});var a={};return t.defaults&&(a.attendeeId=""),null!=e.attendeeId&&e.hasOwnProperty("attendeeId")&&(a.attendeeId=e.attendeeId),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,n.util.toJSONOptions)},e}(),e.exports=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(194),r=a(195),i=[],o=function(){function e(e){this.$$observationTargets=[],this.$$activeTargets=[],this.$$skippedTargets=[];var t=function(e){if(void 0===e)return"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.";if("function"!=typeof e)return"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function."}(e);if(t)throw TypeError(t);this.$$callback=e,i.push(this)}return e.prototype.observe=function(e){var t=c("observe",e);if(t)throw TypeError(t);s(this.$$observationTargets,e)>0||(this.$$observationTargets.push(new n.ResizeObservation(e)),b())},e.prototype.unobserve=function(e){var t=c("unobserve",e);if(t)throw TypeError(t);var a=s(this.$$observationTargets,e);a<0||(this.$$observationTargets.splice(a,1),v())},e.prototype.disconnect=function(){this.$$observationTargets=[],this.$$activeTargets=[]},e}();function c(e,t){return void 0===t?"Failed to execute '"+e+"' on 'ResizeObserver': 1 argument required, but only 0 present.":t instanceof window.Element?void 0:"Failed to execute '"+e+"' on 'ResizeObserver': parameter 1 is not of type 'Element'."}function s(e,t){for(var a=0;a<e.length;a+=1)if(e[a].target===t)return a;return-1}t.ResizeObserver=o;var d,u=function(e){i.forEach((function(t){t.$$activeTargets=[],t.$$skippedTargets=[],t.$$observationTargets.forEach((function(a){a.isActive()&&(l(a.target)>e?t.$$activeTargets.push(a):t.$$skippedTargets.push(a))}))}))},f=function(){var e=1/0;return i.forEach((function(t){if(t.$$activeTargets.length){var a=[];t.$$activeTargets.forEach((function(t){var n=new r.ResizeObserverEntry(t.target);a.push(n),t.$$broadcastWidth=n.contentRect.width,t.$$broadcastHeight=n.contentRect.height;var i=l(t.target);i<e&&(e=i)})),t.$$callback(a,t),t.$$activeTargets=[]}})),e},l=function(e){for(var t=0;e.parentNode;)e=e.parentNode,t+=1;return t},h=function(){var e,t=0;for(u(t);i.some((function(e){return!!e.$$activeTargets.length}));)t=f(),u(t);i.some((function(e){return!!e.$$skippedTargets.length}))&&(e=new window.ErrorEvent("ResizeLoopError",{message:"ResizeObserver loop completed with undelivered notifications."}),window.dispatchEvent(e))},b=function(){d||p()},p=function(){d=window.requestAnimationFrame((function(){h(),p()}))},v=function(){d&&!i.some((function(e){return!!e.$$observationTargets.length}))&&(window.cancelAnimationFrame(d),d=void 0)};t.install=function(){return window.ResizeObserver=o}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(149),r=function(){function e(e){this.target=e,this.$$broadcastWidth=this.$$broadcastHeight=0}return Object.defineProperty(e.prototype,"broadcastWidth",{get:function(){return this.$$broadcastWidth},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"broadcastHeight",{get:function(){return this.$$broadcastHeight},enumerable:!0,configurable:!0}),e.prototype.isActive=function(){var e=n.ContentRect(this.target);return!!e&&(e.width!==this.broadcastWidth||e.height!==this.broadcastHeight)},e}();t.ResizeObservation=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(149),r=function(e){this.target=e,this.contentRect=n.ContentRect(e)};t.ResizeObserverEntry=r},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,a){var n=e.call(this,a)||this;return n.defaultJPEGDecoderController=t,n.logger=a,n}return r(t,e),t.prototype.run=function(){return this.defaultJPEGDecoderController.init()},t}(a(0).default);t.default=i},function(e,t,a){"use strict";(function(e){var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(12),o=a(9),c=a(168),s=function(){function t(t,a,n,r,c,s){var d=this;void 0===s&&(s=i.default.WARN),this.name=t,this.configuration=a,this.batchSize=n,this.intervalMs=r,this.url=c,this.level=s,this.logCapture=[],this.sequenceNumber=0,this.lock=!1,this.intervalScheduler=new o.default(this.intervalMs),this.startLogPublishScheduler(this.batchSize),e.window.addEventListener&&window.addEventListener("unload",(function(){d.stop()}))}return t.prototype.debug=function(e){i.default.DEBUG<this.level||this.log(i.default.DEBUG,e())},t.prototype.info=function(e){this.log(i.default.INFO,e)},t.prototype.warn=function(e){this.log(i.default.WARN,e)},t.prototype.error=function(e){this.log(i.default.ERROR,e)},t.prototype.setLogLevel=function(e){this.level=e},t.prototype.getLogLevel=function(){return this.level},t.prototype.getLogCaptureSize=function(){return this.logCapture.length},t.prototype.startLogPublishScheduler=function(e){var t=this;this.intervalScheduler.start((function(){return n(t,void 0,void 0,(function(){var t,a,n;return r(this,(function(r){switch(r.label){case 0:if(!0===this.lock||0===this.getLogCaptureSize())return[2];this.lock=!0,t=this.logCapture.slice(0,e),a=this.makeRequestBody(t),r.label=1;case 1:return r.trys.push([1,3,4,5]),[4,fetch(this.url,{method:"POST",body:a})];case 2:return 200===r.sent().status&&(this.logCapture=this.logCapture.slice(t.length)),[3,5];case 3:return n=r.sent(),console.warn("[MeetingSessionPOSTLogger] "+n.message),[3,5];case 4:return this.lock=!1,[7];case 5:return[2]}}))}))}))},t.prototype.stop=function(){this.intervalScheduler.stop();var e=this.makeRequestBody(this.logCapture);navigator.sendBeacon(this.url,e)},t.prototype.makeRequestBody=function(e){return JSON.stringify({meetingId:this.configuration.meetingId,attendeeId:this.configuration.credentials.attendeeId,appName:this.name,logs:e})},t.prototype.log=function(e,t){if(!(e<this.level)){var a=new Date;this.logCapture.push(new c.default(this.sequenceNumber,t,a.getTime(),e)),this.sequenceNumber+=1}},t}();t.default=s}).call(this,a(19))},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=a(15),o=a(169),c=a(56),s=a(37),d=a(22),u=a(38),f=a(41),l=a(55),h=function(e){function t(t){var a=new s.default;return a.meetingId="",a.credentials=new d.default,a.credentials.attendeeId="",a.credentials.joinToken="",a.urls=new u.default,a.urls.turnControlURL="",a.urls.audioHostURL="",a.urls.screenViewingURL="",a.urls.screenDataURL="",a.urls.screenSharingURL="wss://localhost/",a.urls.signalingURL="wss://localhost/",e.call(this,t||a,new o.default,new l.default(new o.default),new c.default,new f.default(0,new i.default(0,0,0)))||this}return r(t,e),t.prototype.start=function(){},t.prototype.stop=function(){},t}(a(30).default);t.default=h},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r(t,e),t.prototype.listAudioInputDevices=function(){return Promise.resolve([])},t.prototype.listVideoInputDevices=function(){return Promise.resolve([])},t.prototype.listAudioOutputDevices=function(){return Promise.resolve([])},t.prototype.chooseAudioInputDevice=function(e){return Promise.reject()},t.prototype.chooseVideoInputDevice=function(e){return Promise.reject()},t.prototype.chooseAudioOutputDevice=function(e){return Promise.reject()},t.prototype.addDeviceChangeObserver=function(e){},t.prototype.removeDeviceChangeObserver=function(e){},t.prototype.createAnalyserNodeForAudioInput=function(){return null},t.prototype.startVideoPreviewForVideoInput=function(e){},t.prototype.stopVideoPreviewForVideoInput=function(e){},t.prototype.setDeviceLabelTrigger=function(e){},t.prototype.mixIntoAudioInput=function(e){return null},t.prototype.chooseVideoInputQuality=function(e,t,a,n){},t.prototype.enableWebAudio=function(e){},t}(a(56).default);t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.prototype.cancel=function(){},e.prototype.name=function(){return"NoOpTask"},e.prototype.run=function(){},e.prototype.setParent=function(e){},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.prototype.create=function(){return{clientWidth:400,clientHeight:300,width:400,height:300,videoWidth:400,videoHeight:300,style:{transform:""},hasAttribute:function(){return!1},removeAttribute:function(){},setAttribute:function(){},srcObject:!1,pause:function(){}}},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(7),r=function(){function e(){}return e.prototype.updateIndex=function(e){},e.prototype.updateAvailableBandwidth=function(e){},e.prototype.updateCalculatedOptimalReceiveSet=function(){},e.prototype.wantsResubscribe=function(){return!1},e.prototype.chooseSubscriptions=function(){return new n.default},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(21),r=function(){function e(){}return e.prototype.updateIndex=function(e){},e.prototype.wantsResubscribe=function(){return!1},e.prototype.chooseCaptureAndEncodeParameters=function(){return new n.default(0,0,0,0,!1)},e.prototype.maxBandwidthKbps=function(){return 0},e.prototype.setIdealMaxBandwidthKbps=function(e){},e.prototype.setHasBandwidthPriority=function(e){},e}();t.default=r},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=function(e){function t(t,a,n){var r=e.call(this,n)||this;return r.signalingSession=t,r.connectionRequest=a,r.logger=n,r.taskName="OpenScreenSignalingSessionTask",r}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){return this.logger.info("OpenScreenSignalingSessionTask: Opening connection"),[2,this.signalingSession.open(this.connectionRequest).then((function(){}))]}))}))},t}(a(0).default);t.default=c},function(e,t,a){"use strict";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}),i=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,n,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(r=2&i[0]?n.return:i[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,i[1])).done)return r;switch(n=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{a=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}};Object.defineProperty(t,"__esModule",{value:!0});var c=function(e){function t(t,a,n){var r=e.call(this,n)||this;return r.client=t,r.connectionRequest=a,r.logger=n,r.taskName="OpenScreenViewingConnectionTask",r}return r(t,e),t.prototype.run=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){return this.logger.info("OpenScreenViewingConnectionTask: Opening connection"),[2,this.client.openConnection(this.connectionRequest).then((function(){}))]}))}))},t}(a(0).default);t.default=c},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(47),r=function(){function e(){this.memo=null}return e.prototype.screenShareStreamingFactory=function(){return this.memo=this.memo||new n.default,this.memo},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(7),r=function(){function e(t,a){this.selfAttendeeId=t,this.tileController=a,this.optimalReceiveSet=new n.default,this.subscribedReceiveSet=new n.default,this.bandwidthLimitationKbps=e.DEFAULT_BANDWIDTH_KBPS}return e.prototype.updateIndex=function(e){this.videoIndex=e,this.optimalReceiveSet=this.calculateOptimalReceiveSet()},e.prototype.updateAvailableBandwidth=function(e){this.bandwidthLimitationKbps=e,this.optimalReceiveSet=this.calculateOptimalReceiveSet()},e.prototype.updateCalculatedOptimalReceiveSet=function(){this.optimalReceiveSet=this.calculateOptimalReceiveSet()},e.prototype.wantsResubscribe=function(){return!this.subscribedReceiveSet.equal(this.optimalReceiveSet)},e.prototype.chooseSubscriptions=function(){return this.subscribedReceiveSet=this.optimalReceiveSet.clone(),this.subscribedReceiveSet.clone()},e.prototype.calculateOptimalReceiveSet=function(){for(var e=this.tileController.getAllRemoteVideoTiles(),t=this.videoIndex.allVideoSendingAttendeesExcludingSelf(this.selfAttendeeId),a=new Set,n=new Set,r=0;r<e.length;r++){var i=e[r],o=i.state();o.active&&t.has(o.boundAttendeeId)&&(this.shouldBeLowResolution(i)&&a.add(o.boundAttendeeId),this.shouldBeHighResolution(i)&&n.add(o.boundAttendeeId))}return this.videoIndex.streamSelectionUnderBandwidthConstraint(this.selfAttendeeId,n,a,this.bandwidthLimitationKbps)},e.prototype.shouldBeLowResolution=function(t){return this.tileController.getVideoTileArea(t)<e.LOW_RESOLUTION_TILE_AREA_IN_PHYSICAL_PIXELS},e.prototype.shouldBeHighResolution=function(t){return this.tileController.getVideoTileArea(t)>e.HIGH_RESOLUTION_TILE_AREA_IN_PHYSICAL_PIXELS},e.LOW_RESOLUTION_TILE_AREA_IN_PHYSICAL_PIXELS=43200,e.HIGH_RESOLUTION_TILE_AREA_IN_PHYSICAL_PIXELS=196608,e.DEFAULT_BANDWIDTH_KBPS=2e3,e}();t.default=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,